

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Sun Apr 13 22:30:15 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F1575
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,space=0,delta=2,noexec
     5                           	psect	stringtext2,global,class=STRCODE,space=0,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	clrtext,global,class=CODE,space=0,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,space=0,merge=1,split=1,delta=2
    13                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2,group=3
    14                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2,group=1
    15                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2,group=1
    16                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2,group=3
    17                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2,group=3
    18                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2,group=3
    19                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2,group=2
    20                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2,group=2
    21                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,space=0,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,space=0,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,space=0,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,space=0,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,space=0,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,space=0,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,space=0,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,space=0,merge=1,delta=2,group=3
    31                           	psect	text19,local,class=CODE,space=0,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,space=0,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,space=0,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,space=0,merge=1,delta=2
    35                           	psect	intentry,global,class=CODE,space=0,delta=2
    36                           	psect	text24,local,class=CODE,space=0,merge=1,delta=2
    37                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    38                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    39                           	dabs	1,0x7E,2
    40     0000                     
    41                           ; Generated 07/09/2023 GMT
    42                           ; 
    43                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution. Publication is not required when
    57                           ;        this file is used in an embedded application.
    58                           ; 
    59                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    60                           ;        software without specific prior written permission.
    61                           ; 
    62                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    63                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    64                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    65                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    66                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    67                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    68                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    69                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    70                           ; 
    71                           ; 
    72                           ; Code-generator required, PIC16F1575 Definitions
    73                           ; 
    74                           ; SFR Addresses
    75     0008                     bsr             equ	8
    76     0005                     fsr0h           equ	5
    77     0004                     fsr0l           equ	4
    78     0007                     fsr1h           equ	7
    79     0006                     fsr1l           equ	6
    80     0000                     indf            equ	0
    81     0000                     indf0           equ	0
    82     0001                     indf1           equ	1
    83     000B                     intcon          equ	11
    84     0002                     pc              equ	2
    85     0002                     pcl             equ	2
    86     000A                     pclath          equ	10
    87     0003                     status          equ	3
    88     0009                     wreg            equ	9
    89     0000                     INDF0           equ	0	;# 
    90     0001                     INDF1           equ	1	;# 
    91     0002                     PCL             equ	2	;# 
    92     0003                     STATUS          equ	3	;# 
    93     0004                     FSR0L           equ	4	;# 
    94     0005                     FSR0H           equ	5	;# 
    95     0006                     FSR1L           equ	6	;# 
    96     0007                     FSR1H           equ	7	;# 
    97     0008                     BSR             equ	8	;# 
    98     0009                     WREG            equ	9	;# 
    99     000A                     PCLATH          equ	10	;# 
   100     000B                     INTCON          equ	11	;# 
   101     000C                     PORTA           equ	12	;# 
   102     000E                     PORTC           equ	14	;# 
   103     0011                     PIR1            equ	17	;# 
   104     0012                     PIR2            equ	18	;# 
   105     0013                     PIR3            equ	19	;# 
   106     0015                     TMR0            equ	21	;# 
   107     0016                     TMR1            equ	22	;# 
   108     0016                     TMR1L           equ	22	;# 
   109     0017                     TMR1H           equ	23	;# 
   110     0018                     T1CON           equ	24	;# 
   111     0019                     T1GCON          equ	25	;# 
   112     001A                     TMR2            equ	26	;# 
   113     001B                     PR2             equ	27	;# 
   114     001C                     T2CON           equ	28	;# 
   115     008C                     TRISA           equ	140	;# 
   116     008E                     TRISC           equ	142	;# 
   117     0091                     PIE1            equ	145	;# 
   118     0092                     PIE2            equ	146	;# 
   119     0093                     PIE3            equ	147	;# 
   120     0095                     OPTION_REG      equ	149	;# 
   121     0096                     PCON            equ	150	;# 
   122     0097                     WDTCON          equ	151	;# 
   123     0098                     OSCTUNE         equ	152	;# 
   124     0099                     OSCCON          equ	153	;# 
   125     009A                     OSCSTAT         equ	154	;# 
   126     009B                     ADRES           equ	155	;# 
   127     009B                     ADRESL          equ	155	;# 
   128     009C                     ADRESH          equ	156	;# 
   129     009D                     ADCON0          equ	157	;# 
   130     009E                     ADCON1          equ	158	;# 
   131     009F                     ADCON2          equ	159	;# 
   132     010C                     LATA            equ	268	;# 
   133     010E                     LATC            equ	270	;# 
   134     0111                     CM1CON0         equ	273	;# 
   135     0112                     CM1CON1         equ	274	;# 
   136     0113                     CM2CON0         equ	275	;# 
   137     0114                     CM2CON1         equ	276	;# 
   138     0115                     CMOUT           equ	277	;# 
   139     0116                     BORCON          equ	278	;# 
   140     0117                     FVRCON          equ	279	;# 
   141     0118                     DACCON0         equ	280	;# 
   142     0119                     DACCON1         equ	281	;# 
   143     018C                     ANSELA          equ	396	;# 
   144     018E                     ANSELC          equ	398	;# 
   145     0191                     PMADR           equ	401	;# 
   146     0191                     PMADRL          equ	401	;# 
   147     0192                     PMADRH          equ	402	;# 
   148     0193                     PMDAT           equ	403	;# 
   149     0193                     PMDATL          equ	403	;# 
   150     0194                     PMDATH          equ	404	;# 
   151     0195                     PMCON1          equ	405	;# 
   152     0196                     PMCON2          equ	406	;# 
   153     0197                     VREGCON         equ	407	;# 
   154     0199                     RCREG           equ	409	;# 
   155     019A                     TXREG           equ	410	;# 
   156     019B                     SPBRG           equ	411	;# 
   157     019B                     SPBRGL          equ	411	;# 
   158     019C                     SPBRGH          equ	412	;# 
   159     019D                     RCSTA           equ	413	;# 
   160     019E                     TXSTA           equ	414	;# 
   161     019F                     BAUDCON         equ	415	;# 
   162     020C                     WPUA            equ	524	;# 
   163     020E                     WPUC            equ	526	;# 
   164     028C                     ODCONA          equ	652	;# 
   165     028E                     ODCONC          equ	654	;# 
   166     030C                     SLRCONA         equ	780	;# 
   167     030E                     SLRCONC         equ	782	;# 
   168     038C                     INLVLA          equ	908	;# 
   169     038E                     INLVLC          equ	910	;# 
   170     0391                     IOCAP           equ	913	;# 
   171     0392                     IOCAN           equ	914	;# 
   172     0393                     IOCAF           equ	915	;# 
   173     0397                     IOCCP           equ	919	;# 
   174     0398                     IOCCN           equ	920	;# 
   175     0399                     IOCCF           equ	921	;# 
   176     0691                     CWG1DBR         equ	1681	;# 
   177     0692                     CWG1DBF         equ	1682	;# 
   178     0693                     CWG1CON0        equ	1683	;# 
   179     0694                     CWG1CON1        equ	1684	;# 
   180     0695                     CWG1CON2        equ	1685	;# 
   181     0D8E                     PWMEN           equ	3470	;# 
   182     0D8F                     PWMLD           equ	3471	;# 
   183     0D90                     PWMOUT          equ	3472	;# 
   184     0D91                     PWM1PH          equ	3473	;# 
   185     0D91                     PWM1PHL         equ	3473	;# 
   186     0D92                     PWM1PHH         equ	3474	;# 
   187     0D93                     PWM1DC          equ	3475	;# 
   188     0D93                     PWM1DCL         equ	3475	;# 
   189     0D94                     PWM1DCH         equ	3476	;# 
   190     0D95                     PWM1PR          equ	3477	;# 
   191     0D95                     PWM1PRL         equ	3477	;# 
   192     0D96                     PWM1PRH         equ	3478	;# 
   193     0D97                     PWM1OF          equ	3479	;# 
   194     0D97                     PWM1OFL         equ	3479	;# 
   195     0D98                     PWM1OFH         equ	3480	;# 
   196     0D99                     PWM1TMR         equ	3481	;# 
   197     0D99                     PWM1TMRL        equ	3481	;# 
   198     0D9A                     PWM1TMRH        equ	3482	;# 
   199     0D9B                     PWM1CON         equ	3483	;# 
   200     0D9C                     PWM1INTE        equ	3484	;# 
   201     0D9C                     PWM1INTCON      equ	3484	;# 
   202     0D9D                     PWM1INTF        equ	3485	;# 
   203     0D9D                     PWM1INTFLG      equ	3485	;# 
   204     0D9E                     PWM1CLKCON      equ	3486	;# 
   205     0D9F                     PWM1LDCON       equ	3487	;# 
   206     0DA0                     PWM1OFCON       equ	3488	;# 
   207     0DA1                     PWM2PH          equ	3489	;# 
   208     0DA1                     PWM2PHL         equ	3489	;# 
   209     0DA2                     PWM2PHH         equ	3490	;# 
   210     0DA3                     PWM2DC          equ	3491	;# 
   211     0DA3                     PWM2DCL         equ	3491	;# 
   212     0DA4                     PWM2DCH         equ	3492	;# 
   213     0DA5                     PWM2PR          equ	3493	;# 
   214     0DA5                     PWM2PRL         equ	3493	;# 
   215     0DA6                     PWM2PRH         equ	3494	;# 
   216     0DA7                     PWM2OF          equ	3495	;# 
   217     0DA7                     PWM2OFL         equ	3495	;# 
   218     0DA8                     PWM2OFH         equ	3496	;# 
   219     0DA9                     PWM2TMR         equ	3497	;# 
   220     0DA9                     PWM2TMRL        equ	3497	;# 
   221     0DAA                     PWM2TMRH        equ	3498	;# 
   222     0DAB                     PWM2CON         equ	3499	;# 
   223     0DAC                     PWM2INTE        equ	3500	;# 
   224     0DAC                     PWM2INTCON      equ	3500	;# 
   225     0DAD                     PWM2INTF        equ	3501	;# 
   226     0DAD                     PWM2INTFLG      equ	3501	;# 
   227     0DAE                     PWM2CLKCON      equ	3502	;# 
   228     0DAF                     PWM2LDCON       equ	3503	;# 
   229     0DB0                     PWM2OFCON       equ	3504	;# 
   230     0DB1                     PWM3PH          equ	3505	;# 
   231     0DB1                     PWM3PHL         equ	3505	;# 
   232     0DB2                     PWM3PHH         equ	3506	;# 
   233     0DB3                     PWM3DC          equ	3507	;# 
   234     0DB3                     PWM3DCL         equ	3507	;# 
   235     0DB4                     PWM3DCH         equ	3508	;# 
   236     0DB5                     PWM3PR          equ	3509	;# 
   237     0DB5                     PWM3PRL         equ	3509	;# 
   238     0DB6                     PWM3PRH         equ	3510	;# 
   239     0DB7                     PWM3OF          equ	3511	;# 
   240     0DB7                     PWM3OFL         equ	3511	;# 
   241     0DB8                     PWM3OFH         equ	3512	;# 
   242     0DB9                     PWM3TMR         equ	3513	;# 
   243     0DB9                     PWM3TMRL        equ	3513	;# 
   244     0DBA                     PWM3TMRH        equ	3514	;# 
   245     0DBB                     PWM3CON         equ	3515	;# 
   246     0DBC                     PWM3INTE        equ	3516	;# 
   247     0DBC                     PWM3INTCON      equ	3516	;# 
   248     0DBD                     PWM3INTF        equ	3517	;# 
   249     0DBD                     PWM3INTFLG      equ	3517	;# 
   250     0DBE                     PWM3CLKCON      equ	3518	;# 
   251     0DBF                     PWM3LDCON       equ	3519	;# 
   252     0DC0                     PWM3OFCON       equ	3520	;# 
   253     0DC1                     PWM4PH          equ	3521	;# 
   254     0DC1                     PWM4PHL         equ	3521	;# 
   255     0DC2                     PWM4PHH         equ	3522	;# 
   256     0DC3                     PWM4DC          equ	3523	;# 
   257     0DC3                     PWM4DCL         equ	3523	;# 
   258     0DC4                     PWM4DCH         equ	3524	;# 
   259     0DC5                     PWM4PR          equ	3525	;# 
   260     0DC5                     PWM4PRL         equ	3525	;# 
   261     0DC6                     PWM4PRH         equ	3526	;# 
   262     0DC7                     PWM4OF          equ	3527	;# 
   263     0DC7                     PWM4OFL         equ	3527	;# 
   264     0DC8                     PWM4OFH         equ	3528	;# 
   265     0DC9                     PWM4TMR         equ	3529	;# 
   266     0DC9                     PWM4TMRL        equ	3529	;# 
   267     0DCA                     PWM4TMRH        equ	3530	;# 
   268     0DCB                     PWM4CON         equ	3531	;# 
   269     0DCC                     PWM4INTE        equ	3532	;# 
   270     0DCC                     PWM4INTCON      equ	3532	;# 
   271     0DCD                     PWM4INTF        equ	3533	;# 
   272     0DCD                     PWM4INTFLG      equ	3533	;# 
   273     0DCE                     PWM4CLKCON      equ	3534	;# 
   274     0DCF                     PWM4LDCON       equ	3535	;# 
   275     0DD0                     PWM4OFCON       equ	3536	;# 
   276     0E0F                     PPSLOCK         equ	3599	;# 
   277     0E10                     INTPPS          equ	3600	;# 
   278     0E11                     T0CKIPPS        equ	3601	;# 
   279     0E12                     T1CKIPPS        equ	3602	;# 
   280     0E13                     T1GPPS          equ	3603	;# 
   281     0E14                     CWG1INPPS       equ	3604	;# 
   282     0E15                     RXPPS           equ	3605	;# 
   283     0E16                     CKPPS           equ	3606	;# 
   284     0E17                     ADCACTPPS       equ	3607	;# 
   285     0E90                     RA0PPS          equ	3728	;# 
   286     0E91                     RA1PPS          equ	3729	;# 
   287     0E92                     RA2PPS          equ	3730	;# 
   288     0E94                     RA4PPS          equ	3732	;# 
   289     0E95                     RA5PPS          equ	3733	;# 
   290     0EA0                     RC0PPS          equ	3744	;# 
   291     0EA1                     RC1PPS          equ	3745	;# 
   292     0EA2                     RC2PPS          equ	3746	;# 
   293     0EA3                     RC3PPS          equ	3747	;# 
   294     0EA4                     RC4PPS          equ	3748	;# 
   295     0EA5                     RC5PPS          equ	3749	;# 
   296     0FE4                     STATUS_SHAD     equ	4068	;# 
   297     0FE5                     WREG_SHAD       equ	4069	;# 
   298     0FE6                     BSR_SHAD        equ	4070	;# 
   299     0FE7                     PCLATH_SHAD     equ	4071	;# 
   300     0FE8                     FSR0_SHAD       equ	4072	;# 
   301     0FE8                     FSR0L_SHAD      equ	4072	;# 
   302     0FE9                     FSR0H_SHAD      equ	4073	;# 
   303     0FEA                     FSR1_SHAD       equ	4074	;# 
   304     0FEA                     FSR1L_SHAD      equ	4074	;# 
   305     0FEB                     FSR1H_SHAD      equ	4075	;# 
   306     0FED                     STKPTR          equ	4077	;# 
   307     0FEE                     TOS             equ	4078	;# 
   308     0FEE                     TOSL            equ	4078	;# 
   309     0FEF                     TOSH            equ	4079	;# 
   310     0000                     INDF0           equ	0	;# 
   311     0001                     INDF1           equ	1	;# 
   312     0002                     PCL             equ	2	;# 
   313     0003                     STATUS          equ	3	;# 
   314     0004                     FSR0L           equ	4	;# 
   315     0005                     FSR0H           equ	5	;# 
   316     0006                     FSR1L           equ	6	;# 
   317     0007                     FSR1H           equ	7	;# 
   318     0008                     BSR             equ	8	;# 
   319     0009                     WREG            equ	9	;# 
   320     000A                     PCLATH          equ	10	;# 
   321     000B                     INTCON          equ	11	;# 
   322     000C                     PORTA           equ	12	;# 
   323     000E                     PORTC           equ	14	;# 
   324     0011                     PIR1            equ	17	;# 
   325     0012                     PIR2            equ	18	;# 
   326     0013                     PIR3            equ	19	;# 
   327     0015                     TMR0            equ	21	;# 
   328     0016                     TMR1            equ	22	;# 
   329     0016                     TMR1L           equ	22	;# 
   330     0017                     TMR1H           equ	23	;# 
   331     0018                     T1CON           equ	24	;# 
   332     0019                     T1GCON          equ	25	;# 
   333     001A                     TMR2            equ	26	;# 
   334     001B                     PR2             equ	27	;# 
   335     001C                     T2CON           equ	28	;# 
   336     008C                     TRISA           equ	140	;# 
   337     008E                     TRISC           equ	142	;# 
   338     0091                     PIE1            equ	145	;# 
   339     0092                     PIE2            equ	146	;# 
   340     0093                     PIE3            equ	147	;# 
   341     0095                     OPTION_REG      equ	149	;# 
   342     0096                     PCON            equ	150	;# 
   343     0097                     WDTCON          equ	151	;# 
   344     0098                     OSCTUNE         equ	152	;# 
   345     0099                     OSCCON          equ	153	;# 
   346     009A                     OSCSTAT         equ	154	;# 
   347     009B                     ADRES           equ	155	;# 
   348     009B                     ADRESL          equ	155	;# 
   349     009C                     ADRESH          equ	156	;# 
   350     009D                     ADCON0          equ	157	;# 
   351     009E                     ADCON1          equ	158	;# 
   352     009F                     ADCON2          equ	159	;# 
   353     010C                     LATA            equ	268	;# 
   354     010E                     LATC            equ	270	;# 
   355     0111                     CM1CON0         equ	273	;# 
   356     0112                     CM1CON1         equ	274	;# 
   357     0113                     CM2CON0         equ	275	;# 
   358     0114                     CM2CON1         equ	276	;# 
   359     0115                     CMOUT           equ	277	;# 
   360     0116                     BORCON          equ	278	;# 
   361     0117                     FVRCON          equ	279	;# 
   362     0118                     DACCON0         equ	280	;# 
   363     0119                     DACCON1         equ	281	;# 
   364     018C                     ANSELA          equ	396	;# 
   365     018E                     ANSELC          equ	398	;# 
   366     0191                     PMADR           equ	401	;# 
   367     0191                     PMADRL          equ	401	;# 
   368     0192                     PMADRH          equ	402	;# 
   369     0193                     PMDAT           equ	403	;# 
   370     0193                     PMDATL          equ	403	;# 
   371     0194                     PMDATH          equ	404	;# 
   372     0195                     PMCON1          equ	405	;# 
   373     0196                     PMCON2          equ	406	;# 
   374     0197                     VREGCON         equ	407	;# 
   375     0199                     RCREG           equ	409	;# 
   376     019A                     TXREG           equ	410	;# 
   377     019B                     SPBRG           equ	411	;# 
   378     019B                     SPBRGL          equ	411	;# 
   379     019C                     SPBRGH          equ	412	;# 
   380     019D                     RCSTA           equ	413	;# 
   381     019E                     TXSTA           equ	414	;# 
   382     019F                     BAUDCON         equ	415	;# 
   383     020C                     WPUA            equ	524	;# 
   384     020E                     WPUC            equ	526	;# 
   385     028C                     ODCONA          equ	652	;# 
   386     028E                     ODCONC          equ	654	;# 
   387     030C                     SLRCONA         equ	780	;# 
   388     030E                     SLRCONC         equ	782	;# 
   389     038C                     INLVLA          equ	908	;# 
   390     038E                     INLVLC          equ	910	;# 
   391     0391                     IOCAP           equ	913	;# 
   392     0392                     IOCAN           equ	914	;# 
   393     0393                     IOCAF           equ	915	;# 
   394     0397                     IOCCP           equ	919	;# 
   395     0398                     IOCCN           equ	920	;# 
   396     0399                     IOCCF           equ	921	;# 
   397     0691                     CWG1DBR         equ	1681	;# 
   398     0692                     CWG1DBF         equ	1682	;# 
   399     0693                     CWG1CON0        equ	1683	;# 
   400     0694                     CWG1CON1        equ	1684	;# 
   401     0695                     CWG1CON2        equ	1685	;# 
   402     0D8E                     PWMEN           equ	3470	;# 
   403     0D8F                     PWMLD           equ	3471	;# 
   404     0D90                     PWMOUT          equ	3472	;# 
   405     0D91                     PWM1PH          equ	3473	;# 
   406     0D91                     PWM1PHL         equ	3473	;# 
   407     0D92                     PWM1PHH         equ	3474	;# 
   408     0D93                     PWM1DC          equ	3475	;# 
   409     0D93                     PWM1DCL         equ	3475	;# 
   410     0D94                     PWM1DCH         equ	3476	;# 
   411     0D95                     PWM1PR          equ	3477	;# 
   412     0D95                     PWM1PRL         equ	3477	;# 
   413     0D96                     PWM1PRH         equ	3478	;# 
   414     0D97                     PWM1OF          equ	3479	;# 
   415     0D97                     PWM1OFL         equ	3479	;# 
   416     0D98                     PWM1OFH         equ	3480	;# 
   417     0D99                     PWM1TMR         equ	3481	;# 
   418     0D99                     PWM1TMRL        equ	3481	;# 
   419     0D9A                     PWM1TMRH        equ	3482	;# 
   420     0D9B                     PWM1CON         equ	3483	;# 
   421     0D9C                     PWM1INTE        equ	3484	;# 
   422     0D9C                     PWM1INTCON      equ	3484	;# 
   423     0D9D                     PWM1INTF        equ	3485	;# 
   424     0D9D                     PWM1INTFLG      equ	3485	;# 
   425     0D9E                     PWM1CLKCON      equ	3486	;# 
   426     0D9F                     PWM1LDCON       equ	3487	;# 
   427     0DA0                     PWM1OFCON       equ	3488	;# 
   428     0DA1                     PWM2PH          equ	3489	;# 
   429     0DA1                     PWM2PHL         equ	3489	;# 
   430     0DA2                     PWM2PHH         equ	3490	;# 
   431     0DA3                     PWM2DC          equ	3491	;# 
   432     0DA3                     PWM2DCL         equ	3491	;# 
   433     0DA4                     PWM2DCH         equ	3492	;# 
   434     0DA5                     PWM2PR          equ	3493	;# 
   435     0DA5                     PWM2PRL         equ	3493	;# 
   436     0DA6                     PWM2PRH         equ	3494	;# 
   437     0DA7                     PWM2OF          equ	3495	;# 
   438     0DA7                     PWM2OFL         equ	3495	;# 
   439     0DA8                     PWM2OFH         equ	3496	;# 
   440     0DA9                     PWM2TMR         equ	3497	;# 
   441     0DA9                     PWM2TMRL        equ	3497	;# 
   442     0DAA                     PWM2TMRH        equ	3498	;# 
   443     0DAB                     PWM2CON         equ	3499	;# 
   444     0DAC                     PWM2INTE        equ	3500	;# 
   445     0DAC                     PWM2INTCON      equ	3500	;# 
   446     0DAD                     PWM2INTF        equ	3501	;# 
   447     0DAD                     PWM2INTFLG      equ	3501	;# 
   448     0DAE                     PWM2CLKCON      equ	3502	;# 
   449     0DAF                     PWM2LDCON       equ	3503	;# 
   450     0DB0                     PWM2OFCON       equ	3504	;# 
   451     0DB1                     PWM3PH          equ	3505	;# 
   452     0DB1                     PWM3PHL         equ	3505	;# 
   453     0DB2                     PWM3PHH         equ	3506	;# 
   454     0DB3                     PWM3DC          equ	3507	;# 
   455     0DB3                     PWM3DCL         equ	3507	;# 
   456     0DB4                     PWM3DCH         equ	3508	;# 
   457     0DB5                     PWM3PR          equ	3509	;# 
   458     0DB5                     PWM3PRL         equ	3509	;# 
   459     0DB6                     PWM3PRH         equ	3510	;# 
   460     0DB7                     PWM3OF          equ	3511	;# 
   461     0DB7                     PWM3OFL         equ	3511	;# 
   462     0DB8                     PWM3OFH         equ	3512	;# 
   463     0DB9                     PWM3TMR         equ	3513	;# 
   464     0DB9                     PWM3TMRL        equ	3513	;# 
   465     0DBA                     PWM3TMRH        equ	3514	;# 
   466     0DBB                     PWM3CON         equ	3515	;# 
   467     0DBC                     PWM3INTE        equ	3516	;# 
   468     0DBC                     PWM3INTCON      equ	3516	;# 
   469     0DBD                     PWM3INTF        equ	3517	;# 
   470     0DBD                     PWM3INTFLG      equ	3517	;# 
   471     0DBE                     PWM3CLKCON      equ	3518	;# 
   472     0DBF                     PWM3LDCON       equ	3519	;# 
   473     0DC0                     PWM3OFCON       equ	3520	;# 
   474     0DC1                     PWM4PH          equ	3521	;# 
   475     0DC1                     PWM4PHL         equ	3521	;# 
   476     0DC2                     PWM4PHH         equ	3522	;# 
   477     0DC3                     PWM4DC          equ	3523	;# 
   478     0DC3                     PWM4DCL         equ	3523	;# 
   479     0DC4                     PWM4DCH         equ	3524	;# 
   480     0DC5                     PWM4PR          equ	3525	;# 
   481     0DC5                     PWM4PRL         equ	3525	;# 
   482     0DC6                     PWM4PRH         equ	3526	;# 
   483     0DC7                     PWM4OF          equ	3527	;# 
   484     0DC7                     PWM4OFL         equ	3527	;# 
   485     0DC8                     PWM4OFH         equ	3528	;# 
   486     0DC9                     PWM4TMR         equ	3529	;# 
   487     0DC9                     PWM4TMRL        equ	3529	;# 
   488     0DCA                     PWM4TMRH        equ	3530	;# 
   489     0DCB                     PWM4CON         equ	3531	;# 
   490     0DCC                     PWM4INTE        equ	3532	;# 
   491     0DCC                     PWM4INTCON      equ	3532	;# 
   492     0DCD                     PWM4INTF        equ	3533	;# 
   493     0DCD                     PWM4INTFLG      equ	3533	;# 
   494     0DCE                     PWM4CLKCON      equ	3534	;# 
   495     0DCF                     PWM4LDCON       equ	3535	;# 
   496     0DD0                     PWM4OFCON       equ	3536	;# 
   497     0E0F                     PPSLOCK         equ	3599	;# 
   498     0E10                     INTPPS          equ	3600	;# 
   499     0E11                     T0CKIPPS        equ	3601	;# 
   500     0E12                     T1CKIPPS        equ	3602	;# 
   501     0E13                     T1GPPS          equ	3603	;# 
   502     0E14                     CWG1INPPS       equ	3604	;# 
   503     0E15                     RXPPS           equ	3605	;# 
   504     0E16                     CKPPS           equ	3606	;# 
   505     0E17                     ADCACTPPS       equ	3607	;# 
   506     0E90                     RA0PPS          equ	3728	;# 
   507     0E91                     RA1PPS          equ	3729	;# 
   508     0E92                     RA2PPS          equ	3730	;# 
   509     0E94                     RA4PPS          equ	3732	;# 
   510     0E95                     RA5PPS          equ	3733	;# 
   511     0EA0                     RC0PPS          equ	3744	;# 
   512     0EA1                     RC1PPS          equ	3745	;# 
   513     0EA2                     RC2PPS          equ	3746	;# 
   514     0EA3                     RC3PPS          equ	3747	;# 
   515     0EA4                     RC4PPS          equ	3748	;# 
   516     0EA5                     RC5PPS          equ	3749	;# 
   517     0FE4                     STATUS_SHAD     equ	4068	;# 
   518     0FE5                     WREG_SHAD       equ	4069	;# 
   519     0FE6                     BSR_SHAD        equ	4070	;# 
   520     0FE7                     PCLATH_SHAD     equ	4071	;# 
   521     0FE8                     FSR0_SHAD       equ	4072	;# 
   522     0FE8                     FSR0L_SHAD      equ	4072	;# 
   523     0FE9                     FSR0H_SHAD      equ	4073	;# 
   524     0FEA                     FSR1_SHAD       equ	4074	;# 
   525     0FEA                     FSR1L_SHAD      equ	4074	;# 
   526     0FEB                     FSR1H_SHAD      equ	4075	;# 
   527     0FED                     STKPTR          equ	4077	;# 
   528     0FEE                     TOS             equ	4078	;# 
   529     0FEE                     TOSL            equ	4078	;# 
   530     0FEF                     TOSH            equ	4079	;# 
   531     0000                     INDF0           equ	0	;# 
   532     0001                     INDF1           equ	1	;# 
   533     0002                     PCL             equ	2	;# 
   534     0003                     STATUS          equ	3	;# 
   535     0004                     FSR0L           equ	4	;# 
   536     0005                     FSR0H           equ	5	;# 
   537     0006                     FSR1L           equ	6	;# 
   538     0007                     FSR1H           equ	7	;# 
   539     0008                     BSR             equ	8	;# 
   540     0009                     WREG            equ	9	;# 
   541     000A                     PCLATH          equ	10	;# 
   542     000B                     INTCON          equ	11	;# 
   543     000C                     PORTA           equ	12	;# 
   544     000E                     PORTC           equ	14	;# 
   545     0011                     PIR1            equ	17	;# 
   546     0012                     PIR2            equ	18	;# 
   547     0013                     PIR3            equ	19	;# 
   548     0015                     TMR0            equ	21	;# 
   549     0016                     TMR1            equ	22	;# 
   550     0016                     TMR1L           equ	22	;# 
   551     0017                     TMR1H           equ	23	;# 
   552     0018                     T1CON           equ	24	;# 
   553     0019                     T1GCON          equ	25	;# 
   554     001A                     TMR2            equ	26	;# 
   555     001B                     PR2             equ	27	;# 
   556     001C                     T2CON           equ	28	;# 
   557     008C                     TRISA           equ	140	;# 
   558     008E                     TRISC           equ	142	;# 
   559     0091                     PIE1            equ	145	;# 
   560     0092                     PIE2            equ	146	;# 
   561     0093                     PIE3            equ	147	;# 
   562     0095                     OPTION_REG      equ	149	;# 
   563     0096                     PCON            equ	150	;# 
   564     0097                     WDTCON          equ	151	;# 
   565     0098                     OSCTUNE         equ	152	;# 
   566     0099                     OSCCON          equ	153	;# 
   567     009A                     OSCSTAT         equ	154	;# 
   568     009B                     ADRES           equ	155	;# 
   569     009B                     ADRESL          equ	155	;# 
   570     009C                     ADRESH          equ	156	;# 
   571     009D                     ADCON0          equ	157	;# 
   572     009E                     ADCON1          equ	158	;# 
   573     009F                     ADCON2          equ	159	;# 
   574     010C                     LATA            equ	268	;# 
   575     010E                     LATC            equ	270	;# 
   576     0111                     CM1CON0         equ	273	;# 
   577     0112                     CM1CON1         equ	274	;# 
   578     0113                     CM2CON0         equ	275	;# 
   579     0114                     CM2CON1         equ	276	;# 
   580     0115                     CMOUT           equ	277	;# 
   581     0116                     BORCON          equ	278	;# 
   582     0117                     FVRCON          equ	279	;# 
   583     0118                     DACCON0         equ	280	;# 
   584     0119                     DACCON1         equ	281	;# 
   585     018C                     ANSELA          equ	396	;# 
   586     018E                     ANSELC          equ	398	;# 
   587     0191                     PMADR           equ	401	;# 
   588     0191                     PMADRL          equ	401	;# 
   589     0192                     PMADRH          equ	402	;# 
   590     0193                     PMDAT           equ	403	;# 
   591     0193                     PMDATL          equ	403	;# 
   592     0194                     PMDATH          equ	404	;# 
   593     0195                     PMCON1          equ	405	;# 
   594     0196                     PMCON2          equ	406	;# 
   595     0197                     VREGCON         equ	407	;# 
   596     0199                     RCREG           equ	409	;# 
   597     019A                     TXREG           equ	410	;# 
   598     019B                     SPBRG           equ	411	;# 
   599     019B                     SPBRGL          equ	411	;# 
   600     019C                     SPBRGH          equ	412	;# 
   601     019D                     RCSTA           equ	413	;# 
   602     019E                     TXSTA           equ	414	;# 
   603     019F                     BAUDCON         equ	415	;# 
   604     020C                     WPUA            equ	524	;# 
   605     020E                     WPUC            equ	526	;# 
   606     028C                     ODCONA          equ	652	;# 
   607     028E                     ODCONC          equ	654	;# 
   608     030C                     SLRCONA         equ	780	;# 
   609     030E                     SLRCONC         equ	782	;# 
   610     038C                     INLVLA          equ	908	;# 
   611     038E                     INLVLC          equ	910	;# 
   612     0391                     IOCAP           equ	913	;# 
   613     0392                     IOCAN           equ	914	;# 
   614     0393                     IOCAF           equ	915	;# 
   615     0397                     IOCCP           equ	919	;# 
   616     0398                     IOCCN           equ	920	;# 
   617     0399                     IOCCF           equ	921	;# 
   618     0691                     CWG1DBR         equ	1681	;# 
   619     0692                     CWG1DBF         equ	1682	;# 
   620     0693                     CWG1CON0        equ	1683	;# 
   621     0694                     CWG1CON1        equ	1684	;# 
   622     0695                     CWG1CON2        equ	1685	;# 
   623     0D8E                     PWMEN           equ	3470	;# 
   624     0D8F                     PWMLD           equ	3471	;# 
   625     0D90                     PWMOUT          equ	3472	;# 
   626     0D91                     PWM1PH          equ	3473	;# 
   627     0D91                     PWM1PHL         equ	3473	;# 
   628     0D92                     PWM1PHH         equ	3474	;# 
   629     0D93                     PWM1DC          equ	3475	;# 
   630     0D93                     PWM1DCL         equ	3475	;# 
   631     0D94                     PWM1DCH         equ	3476	;# 
   632     0D95                     PWM1PR          equ	3477	;# 
   633     0D95                     PWM1PRL         equ	3477	;# 
   634     0D96                     PWM1PRH         equ	3478	;# 
   635     0D97                     PWM1OF          equ	3479	;# 
   636     0D97                     PWM1OFL         equ	3479	;# 
   637     0D98                     PWM1OFH         equ	3480	;# 
   638     0D99                     PWM1TMR         equ	3481	;# 
   639     0D99                     PWM1TMRL        equ	3481	;# 
   640     0D9A                     PWM1TMRH        equ	3482	;# 
   641     0D9B                     PWM1CON         equ	3483	;# 
   642     0D9C                     PWM1INTE        equ	3484	;# 
   643     0D9C                     PWM1INTCON      equ	3484	;# 
   644     0D9D                     PWM1INTF        equ	3485	;# 
   645     0D9D                     PWM1INTFLG      equ	3485	;# 
   646     0D9E                     PWM1CLKCON      equ	3486	;# 
   647     0D9F                     PWM1LDCON       equ	3487	;# 
   648     0DA0                     PWM1OFCON       equ	3488	;# 
   649     0DA1                     PWM2PH          equ	3489	;# 
   650     0DA1                     PWM2PHL         equ	3489	;# 
   651     0DA2                     PWM2PHH         equ	3490	;# 
   652     0DA3                     PWM2DC          equ	3491	;# 
   653     0DA3                     PWM2DCL         equ	3491	;# 
   654     0DA4                     PWM2DCH         equ	3492	;# 
   655     0DA5                     PWM2PR          equ	3493	;# 
   656     0DA5                     PWM2PRL         equ	3493	;# 
   657     0DA6                     PWM2PRH         equ	3494	;# 
   658     0DA7                     PWM2OF          equ	3495	;# 
   659     0DA7                     PWM2OFL         equ	3495	;# 
   660     0DA8                     PWM2OFH         equ	3496	;# 
   661     0DA9                     PWM2TMR         equ	3497	;# 
   662     0DA9                     PWM2TMRL        equ	3497	;# 
   663     0DAA                     PWM2TMRH        equ	3498	;# 
   664     0DAB                     PWM2CON         equ	3499	;# 
   665     0DAC                     PWM2INTE        equ	3500	;# 
   666     0DAC                     PWM2INTCON      equ	3500	;# 
   667     0DAD                     PWM2INTF        equ	3501	;# 
   668     0DAD                     PWM2INTFLG      equ	3501	;# 
   669     0DAE                     PWM2CLKCON      equ	3502	;# 
   670     0DAF                     PWM2LDCON       equ	3503	;# 
   671     0DB0                     PWM2OFCON       equ	3504	;# 
   672     0DB1                     PWM3PH          equ	3505	;# 
   673     0DB1                     PWM3PHL         equ	3505	;# 
   674     0DB2                     PWM3PHH         equ	3506	;# 
   675     0DB3                     PWM3DC          equ	3507	;# 
   676     0DB3                     PWM3DCL         equ	3507	;# 
   677     0DB4                     PWM3DCH         equ	3508	;# 
   678     0DB5                     PWM3PR          equ	3509	;# 
   679     0DB5                     PWM3PRL         equ	3509	;# 
   680     0DB6                     PWM3PRH         equ	3510	;# 
   681     0DB7                     PWM3OF          equ	3511	;# 
   682     0DB7                     PWM3OFL         equ	3511	;# 
   683     0DB8                     PWM3OFH         equ	3512	;# 
   684     0DB9                     PWM3TMR         equ	3513	;# 
   685     0DB9                     PWM3TMRL        equ	3513	;# 
   686     0DBA                     PWM3TMRH        equ	3514	;# 
   687     0DBB                     PWM3CON         equ	3515	;# 
   688     0DBC                     PWM3INTE        equ	3516	;# 
   689     0DBC                     PWM3INTCON      equ	3516	;# 
   690     0DBD                     PWM3INTF        equ	3517	;# 
   691     0DBD                     PWM3INTFLG      equ	3517	;# 
   692     0DBE                     PWM3CLKCON      equ	3518	;# 
   693     0DBF                     PWM3LDCON       equ	3519	;# 
   694     0DC0                     PWM3OFCON       equ	3520	;# 
   695     0DC1                     PWM4PH          equ	3521	;# 
   696     0DC1                     PWM4PHL         equ	3521	;# 
   697     0DC2                     PWM4PHH         equ	3522	;# 
   698     0DC3                     PWM4DC          equ	3523	;# 
   699     0DC3                     PWM4DCL         equ	3523	;# 
   700     0DC4                     PWM4DCH         equ	3524	;# 
   701     0DC5                     PWM4PR          equ	3525	;# 
   702     0DC5                     PWM4PRL         equ	3525	;# 
   703     0DC6                     PWM4PRH         equ	3526	;# 
   704     0DC7                     PWM4OF          equ	3527	;# 
   705     0DC7                     PWM4OFL         equ	3527	;# 
   706     0DC8                     PWM4OFH         equ	3528	;# 
   707     0DC9                     PWM4TMR         equ	3529	;# 
   708     0DC9                     PWM4TMRL        equ	3529	;# 
   709     0DCA                     PWM4TMRH        equ	3530	;# 
   710     0DCB                     PWM4CON         equ	3531	;# 
   711     0DCC                     PWM4INTE        equ	3532	;# 
   712     0DCC                     PWM4INTCON      equ	3532	;# 
   713     0DCD                     PWM4INTF        equ	3533	;# 
   714     0DCD                     PWM4INTFLG      equ	3533	;# 
   715     0DCE                     PWM4CLKCON      equ	3534	;# 
   716     0DCF                     PWM4LDCON       equ	3535	;# 
   717     0DD0                     PWM4OFCON       equ	3536	;# 
   718     0E0F                     PPSLOCK         equ	3599	;# 
   719     0E10                     INTPPS          equ	3600	;# 
   720     0E11                     T0CKIPPS        equ	3601	;# 
   721     0E12                     T1CKIPPS        equ	3602	;# 
   722     0E13                     T1GPPS          equ	3603	;# 
   723     0E14                     CWG1INPPS       equ	3604	;# 
   724     0E15                     RXPPS           equ	3605	;# 
   725     0E16                     CKPPS           equ	3606	;# 
   726     0E17                     ADCACTPPS       equ	3607	;# 
   727     0E90                     RA0PPS          equ	3728	;# 
   728     0E91                     RA1PPS          equ	3729	;# 
   729     0E92                     RA2PPS          equ	3730	;# 
   730     0E94                     RA4PPS          equ	3732	;# 
   731     0E95                     RA5PPS          equ	3733	;# 
   732     0EA0                     RC0PPS          equ	3744	;# 
   733     0EA1                     RC1PPS          equ	3745	;# 
   734     0EA2                     RC2PPS          equ	3746	;# 
   735     0EA3                     RC3PPS          equ	3747	;# 
   736     0EA4                     RC4PPS          equ	3748	;# 
   737     0EA5                     RC5PPS          equ	3749	;# 
   738     0FE4                     STATUS_SHAD     equ	4068	;# 
   739     0FE5                     WREG_SHAD       equ	4069	;# 
   740     0FE6                     BSR_SHAD        equ	4070	;# 
   741     0FE7                     PCLATH_SHAD     equ	4071	;# 
   742     0FE8                     FSR0_SHAD       equ	4072	;# 
   743     0FE8                     FSR0L_SHAD      equ	4072	;# 
   744     0FE9                     FSR0H_SHAD      equ	4073	;# 
   745     0FEA                     FSR1_SHAD       equ	4074	;# 
   746     0FEA                     FSR1L_SHAD      equ	4074	;# 
   747     0FEB                     FSR1H_SHAD      equ	4075	;# 
   748     0FED                     STKPTR          equ	4077	;# 
   749     0FEE                     TOS             equ	4078	;# 
   750     0FEE                     TOSL            equ	4078	;# 
   751     0FEF                     TOSH            equ	4079	;# 
   752     0000                     INDF0           equ	0	;# 
   753     0001                     INDF1           equ	1	;# 
   754     0002                     PCL             equ	2	;# 
   755     0003                     STATUS          equ	3	;# 
   756     0004                     FSR0L           equ	4	;# 
   757     0005                     FSR0H           equ	5	;# 
   758     0006                     FSR1L           equ	6	;# 
   759     0007                     FSR1H           equ	7	;# 
   760     0008                     BSR             equ	8	;# 
   761     0009                     WREG            equ	9	;# 
   762     000A                     PCLATH          equ	10	;# 
   763     000B                     INTCON          equ	11	;# 
   764     000C                     PORTA           equ	12	;# 
   765     000E                     PORTC           equ	14	;# 
   766     0011                     PIR1            equ	17	;# 
   767     0012                     PIR2            equ	18	;# 
   768     0013                     PIR3            equ	19	;# 
   769     0015                     TMR0            equ	21	;# 
   770     0016                     TMR1            equ	22	;# 
   771     0016                     TMR1L           equ	22	;# 
   772     0017                     TMR1H           equ	23	;# 
   773     0018                     T1CON           equ	24	;# 
   774     0019                     T1GCON          equ	25	;# 
   775     001A                     TMR2            equ	26	;# 
   776     001B                     PR2             equ	27	;# 
   777     001C                     T2CON           equ	28	;# 
   778     008C                     TRISA           equ	140	;# 
   779     008E                     TRISC           equ	142	;# 
   780     0091                     PIE1            equ	145	;# 
   781     0092                     PIE2            equ	146	;# 
   782     0093                     PIE3            equ	147	;# 
   783     0095                     OPTION_REG      equ	149	;# 
   784     0096                     PCON            equ	150	;# 
   785     0097                     WDTCON          equ	151	;# 
   786     0098                     OSCTUNE         equ	152	;# 
   787     0099                     OSCCON          equ	153	;# 
   788     009A                     OSCSTAT         equ	154	;# 
   789     009B                     ADRES           equ	155	;# 
   790     009B                     ADRESL          equ	155	;# 
   791     009C                     ADRESH          equ	156	;# 
   792     009D                     ADCON0          equ	157	;# 
   793     009E                     ADCON1          equ	158	;# 
   794     009F                     ADCON2          equ	159	;# 
   795     010C                     LATA            equ	268	;# 
   796     010E                     LATC            equ	270	;# 
   797     0111                     CM1CON0         equ	273	;# 
   798     0112                     CM1CON1         equ	274	;# 
   799     0113                     CM2CON0         equ	275	;# 
   800     0114                     CM2CON1         equ	276	;# 
   801     0115                     CMOUT           equ	277	;# 
   802     0116                     BORCON          equ	278	;# 
   803     0117                     FVRCON          equ	279	;# 
   804     0118                     DACCON0         equ	280	;# 
   805     0119                     DACCON1         equ	281	;# 
   806     018C                     ANSELA          equ	396	;# 
   807     018E                     ANSELC          equ	398	;# 
   808     0191                     PMADR           equ	401	;# 
   809     0191                     PMADRL          equ	401	;# 
   810     0192                     PMADRH          equ	402	;# 
   811     0193                     PMDAT           equ	403	;# 
   812     0193                     PMDATL          equ	403	;# 
   813     0194                     PMDATH          equ	404	;# 
   814     0195                     PMCON1          equ	405	;# 
   815     0196                     PMCON2          equ	406	;# 
   816     0197                     VREGCON         equ	407	;# 
   817     0199                     RCREG           equ	409	;# 
   818     019A                     TXREG           equ	410	;# 
   819     019B                     SPBRG           equ	411	;# 
   820     019B                     SPBRGL          equ	411	;# 
   821     019C                     SPBRGH          equ	412	;# 
   822     019D                     RCSTA           equ	413	;# 
   823     019E                     TXSTA           equ	414	;# 
   824     019F                     BAUDCON         equ	415	;# 
   825     020C                     WPUA            equ	524	;# 
   826     020E                     WPUC            equ	526	;# 
   827     028C                     ODCONA          equ	652	;# 
   828     028E                     ODCONC          equ	654	;# 
   829     030C                     SLRCONA         equ	780	;# 
   830     030E                     SLRCONC         equ	782	;# 
   831     038C                     INLVLA          equ	908	;# 
   832     038E                     INLVLC          equ	910	;# 
   833     0391                     IOCAP           equ	913	;# 
   834     0392                     IOCAN           equ	914	;# 
   835     0393                     IOCAF           equ	915	;# 
   836     0397                     IOCCP           equ	919	;# 
   837     0398                     IOCCN           equ	920	;# 
   838     0399                     IOCCF           equ	921	;# 
   839     0691                     CWG1DBR         equ	1681	;# 
   840     0692                     CWG1DBF         equ	1682	;# 
   841     0693                     CWG1CON0        equ	1683	;# 
   842     0694                     CWG1CON1        equ	1684	;# 
   843     0695                     CWG1CON2        equ	1685	;# 
   844     0D8E                     PWMEN           equ	3470	;# 
   845     0D8F                     PWMLD           equ	3471	;# 
   846     0D90                     PWMOUT          equ	3472	;# 
   847     0D91                     PWM1PH          equ	3473	;# 
   848     0D91                     PWM1PHL         equ	3473	;# 
   849     0D92                     PWM1PHH         equ	3474	;# 
   850     0D93                     PWM1DC          equ	3475	;# 
   851     0D93                     PWM1DCL         equ	3475	;# 
   852     0D94                     PWM1DCH         equ	3476	;# 
   853     0D95                     PWM1PR          equ	3477	;# 
   854     0D95                     PWM1PRL         equ	3477	;# 
   855     0D96                     PWM1PRH         equ	3478	;# 
   856     0D97                     PWM1OF          equ	3479	;# 
   857     0D97                     PWM1OFL         equ	3479	;# 
   858     0D98                     PWM1OFH         equ	3480	;# 
   859     0D99                     PWM1TMR         equ	3481	;# 
   860     0D99                     PWM1TMRL        equ	3481	;# 
   861     0D9A                     PWM1TMRH        equ	3482	;# 
   862     0D9B                     PWM1CON         equ	3483	;# 
   863     0D9C                     PWM1INTE        equ	3484	;# 
   864     0D9C                     PWM1INTCON      equ	3484	;# 
   865     0D9D                     PWM1INTF        equ	3485	;# 
   866     0D9D                     PWM1INTFLG      equ	3485	;# 
   867     0D9E                     PWM1CLKCON      equ	3486	;# 
   868     0D9F                     PWM1LDCON       equ	3487	;# 
   869     0DA0                     PWM1OFCON       equ	3488	;# 
   870     0DA1                     PWM2PH          equ	3489	;# 
   871     0DA1                     PWM2PHL         equ	3489	;# 
   872     0DA2                     PWM2PHH         equ	3490	;# 
   873     0DA3                     PWM2DC          equ	3491	;# 
   874     0DA3                     PWM2DCL         equ	3491	;# 
   875     0DA4                     PWM2DCH         equ	3492	;# 
   876     0DA5                     PWM2PR          equ	3493	;# 
   877     0DA5                     PWM2PRL         equ	3493	;# 
   878     0DA6                     PWM2PRH         equ	3494	;# 
   879     0DA7                     PWM2OF          equ	3495	;# 
   880     0DA7                     PWM2OFL         equ	3495	;# 
   881     0DA8                     PWM2OFH         equ	3496	;# 
   882     0DA9                     PWM2TMR         equ	3497	;# 
   883     0DA9                     PWM2TMRL        equ	3497	;# 
   884     0DAA                     PWM2TMRH        equ	3498	;# 
   885     0DAB                     PWM2CON         equ	3499	;# 
   886     0DAC                     PWM2INTE        equ	3500	;# 
   887     0DAC                     PWM2INTCON      equ	3500	;# 
   888     0DAD                     PWM2INTF        equ	3501	;# 
   889     0DAD                     PWM2INTFLG      equ	3501	;# 
   890     0DAE                     PWM2CLKCON      equ	3502	;# 
   891     0DAF                     PWM2LDCON       equ	3503	;# 
   892     0DB0                     PWM2OFCON       equ	3504	;# 
   893     0DB1                     PWM3PH          equ	3505	;# 
   894     0DB1                     PWM3PHL         equ	3505	;# 
   895     0DB2                     PWM3PHH         equ	3506	;# 
   896     0DB3                     PWM3DC          equ	3507	;# 
   897     0DB3                     PWM3DCL         equ	3507	;# 
   898     0DB4                     PWM3DCH         equ	3508	;# 
   899     0DB5                     PWM3PR          equ	3509	;# 
   900     0DB5                     PWM3PRL         equ	3509	;# 
   901     0DB6                     PWM3PRH         equ	3510	;# 
   902     0DB7                     PWM3OF          equ	3511	;# 
   903     0DB7                     PWM3OFL         equ	3511	;# 
   904     0DB8                     PWM3OFH         equ	3512	;# 
   905     0DB9                     PWM3TMR         equ	3513	;# 
   906     0DB9                     PWM3TMRL        equ	3513	;# 
   907     0DBA                     PWM3TMRH        equ	3514	;# 
   908     0DBB                     PWM3CON         equ	3515	;# 
   909     0DBC                     PWM3INTE        equ	3516	;# 
   910     0DBC                     PWM3INTCON      equ	3516	;# 
   911     0DBD                     PWM3INTF        equ	3517	;# 
   912     0DBD                     PWM3INTFLG      equ	3517	;# 
   913     0DBE                     PWM3CLKCON      equ	3518	;# 
   914     0DBF                     PWM3LDCON       equ	3519	;# 
   915     0DC0                     PWM3OFCON       equ	3520	;# 
   916     0DC1                     PWM4PH          equ	3521	;# 
   917     0DC1                     PWM4PHL         equ	3521	;# 
   918     0DC2                     PWM4PHH         equ	3522	;# 
   919     0DC3                     PWM4DC          equ	3523	;# 
   920     0DC3                     PWM4DCL         equ	3523	;# 
   921     0DC4                     PWM4DCH         equ	3524	;# 
   922     0DC5                     PWM4PR          equ	3525	;# 
   923     0DC5                     PWM4PRL         equ	3525	;# 
   924     0DC6                     PWM4PRH         equ	3526	;# 
   925     0DC7                     PWM4OF          equ	3527	;# 
   926     0DC7                     PWM4OFL         equ	3527	;# 
   927     0DC8                     PWM4OFH         equ	3528	;# 
   928     0DC9                     PWM4TMR         equ	3529	;# 
   929     0DC9                     PWM4TMRL        equ	3529	;# 
   930     0DCA                     PWM4TMRH        equ	3530	;# 
   931     0DCB                     PWM4CON         equ	3531	;# 
   932     0DCC                     PWM4INTE        equ	3532	;# 
   933     0DCC                     PWM4INTCON      equ	3532	;# 
   934     0DCD                     PWM4INTF        equ	3533	;# 
   935     0DCD                     PWM4INTFLG      equ	3533	;# 
   936     0DCE                     PWM4CLKCON      equ	3534	;# 
   937     0DCF                     PWM4LDCON       equ	3535	;# 
   938     0DD0                     PWM4OFCON       equ	3536	;# 
   939     0E0F                     PPSLOCK         equ	3599	;# 
   940     0E10                     INTPPS          equ	3600	;# 
   941     0E11                     T0CKIPPS        equ	3601	;# 
   942     0E12                     T1CKIPPS        equ	3602	;# 
   943     0E13                     T1GPPS          equ	3603	;# 
   944     0E14                     CWG1INPPS       equ	3604	;# 
   945     0E15                     RXPPS           equ	3605	;# 
   946     0E16                     CKPPS           equ	3606	;# 
   947     0E17                     ADCACTPPS       equ	3607	;# 
   948     0E90                     RA0PPS          equ	3728	;# 
   949     0E91                     RA1PPS          equ	3729	;# 
   950     0E92                     RA2PPS          equ	3730	;# 
   951     0E94                     RA4PPS          equ	3732	;# 
   952     0E95                     RA5PPS          equ	3733	;# 
   953     0EA0                     RC0PPS          equ	3744	;# 
   954     0EA1                     RC1PPS          equ	3745	;# 
   955     0EA2                     RC2PPS          equ	3746	;# 
   956     0EA3                     RC3PPS          equ	3747	;# 
   957     0EA4                     RC4PPS          equ	3748	;# 
   958     0EA5                     RC5PPS          equ	3749	;# 
   959     0FE4                     STATUS_SHAD     equ	4068	;# 
   960     0FE5                     WREG_SHAD       equ	4069	;# 
   961     0FE6                     BSR_SHAD        equ	4070	;# 
   962     0FE7                     PCLATH_SHAD     equ	4071	;# 
   963     0FE8                     FSR0_SHAD       equ	4072	;# 
   964     0FE8                     FSR0L_SHAD      equ	4072	;# 
   965     0FE9                     FSR0H_SHAD      equ	4073	;# 
   966     0FEA                     FSR1_SHAD       equ	4074	;# 
   967     0FEA                     FSR1L_SHAD      equ	4074	;# 
   968     0FEB                     FSR1H_SHAD      equ	4075	;# 
   969     0FED                     STKPTR          equ	4077	;# 
   970     0FEE                     TOS             equ	4078	;# 
   971     0FEE                     TOSL            equ	4078	;# 
   972     0FEF                     TOSH            equ	4079	;# 
   973     0000                     INDF0           equ	0	;# 
   974     0001                     INDF1           equ	1	;# 
   975     0002                     PCL             equ	2	;# 
   976     0003                     STATUS          equ	3	;# 
   977     0004                     FSR0L           equ	4	;# 
   978     0005                     FSR0H           equ	5	;# 
   979     0006                     FSR1L           equ	6	;# 
   980     0007                     FSR1H           equ	7	;# 
   981     0008                     BSR             equ	8	;# 
   982     0009                     WREG            equ	9	;# 
   983     000A                     PCLATH          equ	10	;# 
   984     000B                     INTCON          equ	11	;# 
   985     000C                     PORTA           equ	12	;# 
   986     000E                     PORTC           equ	14	;# 
   987     0011                     PIR1            equ	17	;# 
   988     0012                     PIR2            equ	18	;# 
   989     0013                     PIR3            equ	19	;# 
   990     0015                     TMR0            equ	21	;# 
   991     0016                     TMR1            equ	22	;# 
   992     0016                     TMR1L           equ	22	;# 
   993     0017                     TMR1H           equ	23	;# 
   994     0018                     T1CON           equ	24	;# 
   995     0019                     T1GCON          equ	25	;# 
   996     001A                     TMR2            equ	26	;# 
   997     001B                     PR2             equ	27	;# 
   998     001C                     T2CON           equ	28	;# 
   999     008C                     TRISA           equ	140	;# 
  1000     008E                     TRISC           equ	142	;# 
  1001     0091                     PIE1            equ	145	;# 
  1002     0092                     PIE2            equ	146	;# 
  1003     0093                     PIE3            equ	147	;# 
  1004     0095                     OPTION_REG      equ	149	;# 
  1005     0096                     PCON            equ	150	;# 
  1006     0097                     WDTCON          equ	151	;# 
  1007     0098                     OSCTUNE         equ	152	;# 
  1008     0099                     OSCCON          equ	153	;# 
  1009     009A                     OSCSTAT         equ	154	;# 
  1010     009B                     ADRES           equ	155	;# 
  1011     009B                     ADRESL          equ	155	;# 
  1012     009C                     ADRESH          equ	156	;# 
  1013     009D                     ADCON0          equ	157	;# 
  1014     009E                     ADCON1          equ	158	;# 
  1015     009F                     ADCON2          equ	159	;# 
  1016     010C                     LATA            equ	268	;# 
  1017     010E                     LATC            equ	270	;# 
  1018     0111                     CM1CON0         equ	273	;# 
  1019     0112                     CM1CON1         equ	274	;# 
  1020     0113                     CM2CON0         equ	275	;# 
  1021     0114                     CM2CON1         equ	276	;# 
  1022     0115                     CMOUT           equ	277	;# 
  1023     0116                     BORCON          equ	278	;# 
  1024     0117                     FVRCON          equ	279	;# 
  1025     0118                     DACCON0         equ	280	;# 
  1026     0119                     DACCON1         equ	281	;# 
  1027     018C                     ANSELA          equ	396	;# 
  1028     018E                     ANSELC          equ	398	;# 
  1029     0191                     PMADR           equ	401	;# 
  1030     0191                     PMADRL          equ	401	;# 
  1031     0192                     PMADRH          equ	402	;# 
  1032     0193                     PMDAT           equ	403	;# 
  1033     0193                     PMDATL          equ	403	;# 
  1034     0194                     PMDATH          equ	404	;# 
  1035     0195                     PMCON1          equ	405	;# 
  1036     0196                     PMCON2          equ	406	;# 
  1037     0197                     VREGCON         equ	407	;# 
  1038     0199                     RCREG           equ	409	;# 
  1039     019A                     TXREG           equ	410	;# 
  1040     019B                     SPBRG           equ	411	;# 
  1041     019B                     SPBRGL          equ	411	;# 
  1042     019C                     SPBRGH          equ	412	;# 
  1043     019D                     RCSTA           equ	413	;# 
  1044     019E                     TXSTA           equ	414	;# 
  1045     019F                     BAUDCON         equ	415	;# 
  1046     020C                     WPUA            equ	524	;# 
  1047     020E                     WPUC            equ	526	;# 
  1048     028C                     ODCONA          equ	652	;# 
  1049     028E                     ODCONC          equ	654	;# 
  1050     030C                     SLRCONA         equ	780	;# 
  1051     030E                     SLRCONC         equ	782	;# 
  1052     038C                     INLVLA          equ	908	;# 
  1053     038E                     INLVLC          equ	910	;# 
  1054     0391                     IOCAP           equ	913	;# 
  1055     0392                     IOCAN           equ	914	;# 
  1056     0393                     IOCAF           equ	915	;# 
  1057     0397                     IOCCP           equ	919	;# 
  1058     0398                     IOCCN           equ	920	;# 
  1059     0399                     IOCCF           equ	921	;# 
  1060     0691                     CWG1DBR         equ	1681	;# 
  1061     0692                     CWG1DBF         equ	1682	;# 
  1062     0693                     CWG1CON0        equ	1683	;# 
  1063     0694                     CWG1CON1        equ	1684	;# 
  1064     0695                     CWG1CON2        equ	1685	;# 
  1065     0D8E                     PWMEN           equ	3470	;# 
  1066     0D8F                     PWMLD           equ	3471	;# 
  1067     0D90                     PWMOUT          equ	3472	;# 
  1068     0D91                     PWM1PH          equ	3473	;# 
  1069     0D91                     PWM1PHL         equ	3473	;# 
  1070     0D92                     PWM1PHH         equ	3474	;# 
  1071     0D93                     PWM1DC          equ	3475	;# 
  1072     0D93                     PWM1DCL         equ	3475	;# 
  1073     0D94                     PWM1DCH         equ	3476	;# 
  1074     0D95                     PWM1PR          equ	3477	;# 
  1075     0D95                     PWM1PRL         equ	3477	;# 
  1076     0D96                     PWM1PRH         equ	3478	;# 
  1077     0D97                     PWM1OF          equ	3479	;# 
  1078     0D97                     PWM1OFL         equ	3479	;# 
  1079     0D98                     PWM1OFH         equ	3480	;# 
  1080     0D99                     PWM1TMR         equ	3481	;# 
  1081     0D99                     PWM1TMRL        equ	3481	;# 
  1082     0D9A                     PWM1TMRH        equ	3482	;# 
  1083     0D9B                     PWM1CON         equ	3483	;# 
  1084     0D9C                     PWM1INTE        equ	3484	;# 
  1085     0D9C                     PWM1INTCON      equ	3484	;# 
  1086     0D9D                     PWM1INTF        equ	3485	;# 
  1087     0D9D                     PWM1INTFLG      equ	3485	;# 
  1088     0D9E                     PWM1CLKCON      equ	3486	;# 
  1089     0D9F                     PWM1LDCON       equ	3487	;# 
  1090     0DA0                     PWM1OFCON       equ	3488	;# 
  1091     0DA1                     PWM2PH          equ	3489	;# 
  1092     0DA1                     PWM2PHL         equ	3489	;# 
  1093     0DA2                     PWM2PHH         equ	3490	;# 
  1094     0DA3                     PWM2DC          equ	3491	;# 
  1095     0DA3                     PWM2DCL         equ	3491	;# 
  1096     0DA4                     PWM2DCH         equ	3492	;# 
  1097     0DA5                     PWM2PR          equ	3493	;# 
  1098     0DA5                     PWM2PRL         equ	3493	;# 
  1099     0DA6                     PWM2PRH         equ	3494	;# 
  1100     0DA7                     PWM2OF          equ	3495	;# 
  1101     0DA7                     PWM2OFL         equ	3495	;# 
  1102     0DA8                     PWM2OFH         equ	3496	;# 
  1103     0DA9                     PWM2TMR         equ	3497	;# 
  1104     0DA9                     PWM2TMRL        equ	3497	;# 
  1105     0DAA                     PWM2TMRH        equ	3498	;# 
  1106     0DAB                     PWM2CON         equ	3499	;# 
  1107     0DAC                     PWM2INTE        equ	3500	;# 
  1108     0DAC                     PWM2INTCON      equ	3500	;# 
  1109     0DAD                     PWM2INTF        equ	3501	;# 
  1110     0DAD                     PWM2INTFLG      equ	3501	;# 
  1111     0DAE                     PWM2CLKCON      equ	3502	;# 
  1112     0DAF                     PWM2LDCON       equ	3503	;# 
  1113     0DB0                     PWM2OFCON       equ	3504	;# 
  1114     0DB1                     PWM3PH          equ	3505	;# 
  1115     0DB1                     PWM3PHL         equ	3505	;# 
  1116     0DB2                     PWM3PHH         equ	3506	;# 
  1117     0DB3                     PWM3DC          equ	3507	;# 
  1118     0DB3                     PWM3DCL         equ	3507	;# 
  1119     0DB4                     PWM3DCH         equ	3508	;# 
  1120     0DB5                     PWM3PR          equ	3509	;# 
  1121     0DB5                     PWM3PRL         equ	3509	;# 
  1122     0DB6                     PWM3PRH         equ	3510	;# 
  1123     0DB7                     PWM3OF          equ	3511	;# 
  1124     0DB7                     PWM3OFL         equ	3511	;# 
  1125     0DB8                     PWM3OFH         equ	3512	;# 
  1126     0DB9                     PWM3TMR         equ	3513	;# 
  1127     0DB9                     PWM3TMRL        equ	3513	;# 
  1128     0DBA                     PWM3TMRH        equ	3514	;# 
  1129     0DBB                     PWM3CON         equ	3515	;# 
  1130     0DBC                     PWM3INTE        equ	3516	;# 
  1131     0DBC                     PWM3INTCON      equ	3516	;# 
  1132     0DBD                     PWM3INTF        equ	3517	;# 
  1133     0DBD                     PWM3INTFLG      equ	3517	;# 
  1134     0DBE                     PWM3CLKCON      equ	3518	;# 
  1135     0DBF                     PWM3LDCON       equ	3519	;# 
  1136     0DC0                     PWM3OFCON       equ	3520	;# 
  1137     0DC1                     PWM4PH          equ	3521	;# 
  1138     0DC1                     PWM4PHL         equ	3521	;# 
  1139     0DC2                     PWM4PHH         equ	3522	;# 
  1140     0DC3                     PWM4DC          equ	3523	;# 
  1141     0DC3                     PWM4DCL         equ	3523	;# 
  1142     0DC4                     PWM4DCH         equ	3524	;# 
  1143     0DC5                     PWM4PR          equ	3525	;# 
  1144     0DC5                     PWM4PRL         equ	3525	;# 
  1145     0DC6                     PWM4PRH         equ	3526	;# 
  1146     0DC7                     PWM4OF          equ	3527	;# 
  1147     0DC7                     PWM4OFL         equ	3527	;# 
  1148     0DC8                     PWM4OFH         equ	3528	;# 
  1149     0DC9                     PWM4TMR         equ	3529	;# 
  1150     0DC9                     PWM4TMRL        equ	3529	;# 
  1151     0DCA                     PWM4TMRH        equ	3530	;# 
  1152     0DCB                     PWM4CON         equ	3531	;# 
  1153     0DCC                     PWM4INTE        equ	3532	;# 
  1154     0DCC                     PWM4INTCON      equ	3532	;# 
  1155     0DCD                     PWM4INTF        equ	3533	;# 
  1156     0DCD                     PWM4INTFLG      equ	3533	;# 
  1157     0DCE                     PWM4CLKCON      equ	3534	;# 
  1158     0DCF                     PWM4LDCON       equ	3535	;# 
  1159     0DD0                     PWM4OFCON       equ	3536	;# 
  1160     0E0F                     PPSLOCK         equ	3599	;# 
  1161     0E10                     INTPPS          equ	3600	;# 
  1162     0E11                     T0CKIPPS        equ	3601	;# 
  1163     0E12                     T1CKIPPS        equ	3602	;# 
  1164     0E13                     T1GPPS          equ	3603	;# 
  1165     0E14                     CWG1INPPS       equ	3604	;# 
  1166     0E15                     RXPPS           equ	3605	;# 
  1167     0E16                     CKPPS           equ	3606	;# 
  1168     0E17                     ADCACTPPS       equ	3607	;# 
  1169     0E90                     RA0PPS          equ	3728	;# 
  1170     0E91                     RA1PPS          equ	3729	;# 
  1171     0E92                     RA2PPS          equ	3730	;# 
  1172     0E94                     RA4PPS          equ	3732	;# 
  1173     0E95                     RA5PPS          equ	3733	;# 
  1174     0EA0                     RC0PPS          equ	3744	;# 
  1175     0EA1                     RC1PPS          equ	3745	;# 
  1176     0EA2                     RC2PPS          equ	3746	;# 
  1177     0EA3                     RC3PPS          equ	3747	;# 
  1178     0EA4                     RC4PPS          equ	3748	;# 
  1179     0EA5                     RC5PPS          equ	3749	;# 
  1180     0FE4                     STATUS_SHAD     equ	4068	;# 
  1181     0FE5                     WREG_SHAD       equ	4069	;# 
  1182     0FE6                     BSR_SHAD        equ	4070	;# 
  1183     0FE7                     PCLATH_SHAD     equ	4071	;# 
  1184     0FE8                     FSR0_SHAD       equ	4072	;# 
  1185     0FE8                     FSR0L_SHAD      equ	4072	;# 
  1186     0FE9                     FSR0H_SHAD      equ	4073	;# 
  1187     0FEA                     FSR1_SHAD       equ	4074	;# 
  1188     0FEA                     FSR1L_SHAD      equ	4074	;# 
  1189     0FEB                     FSR1H_SHAD      equ	4075	;# 
  1190     0FED                     STKPTR          equ	4077	;# 
  1191     0FEE                     TOS             equ	4078	;# 
  1192     0FEE                     TOSL            equ	4078	;# 
  1193     0FEF                     TOSH            equ	4079	;# 
  1194     0000                     INDF0           equ	0	;# 
  1195     0001                     INDF1           equ	1	;# 
  1196     0002                     PCL             equ	2	;# 
  1197     0003                     STATUS          equ	3	;# 
  1198     0004                     FSR0L           equ	4	;# 
  1199     0005                     FSR0H           equ	5	;# 
  1200     0006                     FSR1L           equ	6	;# 
  1201     0007                     FSR1H           equ	7	;# 
  1202     0008                     BSR             equ	8	;# 
  1203     0009                     WREG            equ	9	;# 
  1204     000A                     PCLATH          equ	10	;# 
  1205     000B                     INTCON          equ	11	;# 
  1206     000C                     PORTA           equ	12	;# 
  1207     000E                     PORTC           equ	14	;# 
  1208     0011                     PIR1            equ	17	;# 
  1209     0012                     PIR2            equ	18	;# 
  1210     0013                     PIR3            equ	19	;# 
  1211     0015                     TMR0            equ	21	;# 
  1212     0016                     TMR1            equ	22	;# 
  1213     0016                     TMR1L           equ	22	;# 
  1214     0017                     TMR1H           equ	23	;# 
  1215     0018                     T1CON           equ	24	;# 
  1216     0019                     T1GCON          equ	25	;# 
  1217     001A                     TMR2            equ	26	;# 
  1218     001B                     PR2             equ	27	;# 
  1219     001C                     T2CON           equ	28	;# 
  1220     008C                     TRISA           equ	140	;# 
  1221     008E                     TRISC           equ	142	;# 
  1222     0091                     PIE1            equ	145	;# 
  1223     0092                     PIE2            equ	146	;# 
  1224     0093                     PIE3            equ	147	;# 
  1225     0095                     OPTION_REG      equ	149	;# 
  1226     0096                     PCON            equ	150	;# 
  1227     0097                     WDTCON          equ	151	;# 
  1228     0098                     OSCTUNE         equ	152	;# 
  1229     0099                     OSCCON          equ	153	;# 
  1230     009A                     OSCSTAT         equ	154	;# 
  1231     009B                     ADRES           equ	155	;# 
  1232     009B                     ADRESL          equ	155	;# 
  1233     009C                     ADRESH          equ	156	;# 
  1234     009D                     ADCON0          equ	157	;# 
  1235     009E                     ADCON1          equ	158	;# 
  1236     009F                     ADCON2          equ	159	;# 
  1237     010C                     LATA            equ	268	;# 
  1238     010E                     LATC            equ	270	;# 
  1239     0111                     CM1CON0         equ	273	;# 
  1240     0112                     CM1CON1         equ	274	;# 
  1241     0113                     CM2CON0         equ	275	;# 
  1242     0114                     CM2CON1         equ	276	;# 
  1243     0115                     CMOUT           equ	277	;# 
  1244     0116                     BORCON          equ	278	;# 
  1245     0117                     FVRCON          equ	279	;# 
  1246     0118                     DACCON0         equ	280	;# 
  1247     0119                     DACCON1         equ	281	;# 
  1248     018C                     ANSELA          equ	396	;# 
  1249     018E                     ANSELC          equ	398	;# 
  1250     0191                     PMADR           equ	401	;# 
  1251     0191                     PMADRL          equ	401	;# 
  1252     0192                     PMADRH          equ	402	;# 
  1253     0193                     PMDAT           equ	403	;# 
  1254     0193                     PMDATL          equ	403	;# 
  1255     0194                     PMDATH          equ	404	;# 
  1256     0195                     PMCON1          equ	405	;# 
  1257     0196                     PMCON2          equ	406	;# 
  1258     0197                     VREGCON         equ	407	;# 
  1259     0199                     RCREG           equ	409	;# 
  1260     019A                     TXREG           equ	410	;# 
  1261     019B                     SPBRG           equ	411	;# 
  1262     019B                     SPBRGL          equ	411	;# 
  1263     019C                     SPBRGH          equ	412	;# 
  1264     019D                     RCSTA           equ	413	;# 
  1265     019E                     TXSTA           equ	414	;# 
  1266     019F                     BAUDCON         equ	415	;# 
  1267     020C                     WPUA            equ	524	;# 
  1268     020E                     WPUC            equ	526	;# 
  1269     028C                     ODCONA          equ	652	;# 
  1270     028E                     ODCONC          equ	654	;# 
  1271     030C                     SLRCONA         equ	780	;# 
  1272     030E                     SLRCONC         equ	782	;# 
  1273     038C                     INLVLA          equ	908	;# 
  1274     038E                     INLVLC          equ	910	;# 
  1275     0391                     IOCAP           equ	913	;# 
  1276     0392                     IOCAN           equ	914	;# 
  1277     0393                     IOCAF           equ	915	;# 
  1278     0397                     IOCCP           equ	919	;# 
  1279     0398                     IOCCN           equ	920	;# 
  1280     0399                     IOCCF           equ	921	;# 
  1281     0691                     CWG1DBR         equ	1681	;# 
  1282     0692                     CWG1DBF         equ	1682	;# 
  1283     0693                     CWG1CON0        equ	1683	;# 
  1284     0694                     CWG1CON1        equ	1684	;# 
  1285     0695                     CWG1CON2        equ	1685	;# 
  1286     0D8E                     PWMEN           equ	3470	;# 
  1287     0D8F                     PWMLD           equ	3471	;# 
  1288     0D90                     PWMOUT          equ	3472	;# 
  1289     0D91                     PWM1PH          equ	3473	;# 
  1290     0D91                     PWM1PHL         equ	3473	;# 
  1291     0D92                     PWM1PHH         equ	3474	;# 
  1292     0D93                     PWM1DC          equ	3475	;# 
  1293     0D93                     PWM1DCL         equ	3475	;# 
  1294     0D94                     PWM1DCH         equ	3476	;# 
  1295     0D95                     PWM1PR          equ	3477	;# 
  1296     0D95                     PWM1PRL         equ	3477	;# 
  1297     0D96                     PWM1PRH         equ	3478	;# 
  1298     0D97                     PWM1OF          equ	3479	;# 
  1299     0D97                     PWM1OFL         equ	3479	;# 
  1300     0D98                     PWM1OFH         equ	3480	;# 
  1301     0D99                     PWM1TMR         equ	3481	;# 
  1302     0D99                     PWM1TMRL        equ	3481	;# 
  1303     0D9A                     PWM1TMRH        equ	3482	;# 
  1304     0D9B                     PWM1CON         equ	3483	;# 
  1305     0D9C                     PWM1INTE        equ	3484	;# 
  1306     0D9C                     PWM1INTCON      equ	3484	;# 
  1307     0D9D                     PWM1INTF        equ	3485	;# 
  1308     0D9D                     PWM1INTFLG      equ	3485	;# 
  1309     0D9E                     PWM1CLKCON      equ	3486	;# 
  1310     0D9F                     PWM1LDCON       equ	3487	;# 
  1311     0DA0                     PWM1OFCON       equ	3488	;# 
  1312     0DA1                     PWM2PH          equ	3489	;# 
  1313     0DA1                     PWM2PHL         equ	3489	;# 
  1314     0DA2                     PWM2PHH         equ	3490	;# 
  1315     0DA3                     PWM2DC          equ	3491	;# 
  1316     0DA3                     PWM2DCL         equ	3491	;# 
  1317     0DA4                     PWM2DCH         equ	3492	;# 
  1318     0DA5                     PWM2PR          equ	3493	;# 
  1319     0DA5                     PWM2PRL         equ	3493	;# 
  1320     0DA6                     PWM2PRH         equ	3494	;# 
  1321     0DA7                     PWM2OF          equ	3495	;# 
  1322     0DA7                     PWM2OFL         equ	3495	;# 
  1323     0DA8                     PWM2OFH         equ	3496	;# 
  1324     0DA9                     PWM2TMR         equ	3497	;# 
  1325     0DA9                     PWM2TMRL        equ	3497	;# 
  1326     0DAA                     PWM2TMRH        equ	3498	;# 
  1327     0DAB                     PWM2CON         equ	3499	;# 
  1328     0DAC                     PWM2INTE        equ	3500	;# 
  1329     0DAC                     PWM2INTCON      equ	3500	;# 
  1330     0DAD                     PWM2INTF        equ	3501	;# 
  1331     0DAD                     PWM2INTFLG      equ	3501	;# 
  1332     0DAE                     PWM2CLKCON      equ	3502	;# 
  1333     0DAF                     PWM2LDCON       equ	3503	;# 
  1334     0DB0                     PWM2OFCON       equ	3504	;# 
  1335     0DB1                     PWM3PH          equ	3505	;# 
  1336     0DB1                     PWM3PHL         equ	3505	;# 
  1337     0DB2                     PWM3PHH         equ	3506	;# 
  1338     0DB3                     PWM3DC          equ	3507	;# 
  1339     0DB3                     PWM3DCL         equ	3507	;# 
  1340     0DB4                     PWM3DCH         equ	3508	;# 
  1341     0DB5                     PWM3PR          equ	3509	;# 
  1342     0DB5                     PWM3PRL         equ	3509	;# 
  1343     0DB6                     PWM3PRH         equ	3510	;# 
  1344     0DB7                     PWM3OF          equ	3511	;# 
  1345     0DB7                     PWM3OFL         equ	3511	;# 
  1346     0DB8                     PWM3OFH         equ	3512	;# 
  1347     0DB9                     PWM3TMR         equ	3513	;# 
  1348     0DB9                     PWM3TMRL        equ	3513	;# 
  1349     0DBA                     PWM3TMRH        equ	3514	;# 
  1350     0DBB                     PWM3CON         equ	3515	;# 
  1351     0DBC                     PWM3INTE        equ	3516	;# 
  1352     0DBC                     PWM3INTCON      equ	3516	;# 
  1353     0DBD                     PWM3INTF        equ	3517	;# 
  1354     0DBD                     PWM3INTFLG      equ	3517	;# 
  1355     0DBE                     PWM3CLKCON      equ	3518	;# 
  1356     0DBF                     PWM3LDCON       equ	3519	;# 
  1357     0DC0                     PWM3OFCON       equ	3520	;# 
  1358     0DC1                     PWM4PH          equ	3521	;# 
  1359     0DC1                     PWM4PHL         equ	3521	;# 
  1360     0DC2                     PWM4PHH         equ	3522	;# 
  1361     0DC3                     PWM4DC          equ	3523	;# 
  1362     0DC3                     PWM4DCL         equ	3523	;# 
  1363     0DC4                     PWM4DCH         equ	3524	;# 
  1364     0DC5                     PWM4PR          equ	3525	;# 
  1365     0DC5                     PWM4PRL         equ	3525	;# 
  1366     0DC6                     PWM4PRH         equ	3526	;# 
  1367     0DC7                     PWM4OF          equ	3527	;# 
  1368     0DC7                     PWM4OFL         equ	3527	;# 
  1369     0DC8                     PWM4OFH         equ	3528	;# 
  1370     0DC9                     PWM4TMR         equ	3529	;# 
  1371     0DC9                     PWM4TMRL        equ	3529	;# 
  1372     0DCA                     PWM4TMRH        equ	3530	;# 
  1373     0DCB                     PWM4CON         equ	3531	;# 
  1374     0DCC                     PWM4INTE        equ	3532	;# 
  1375     0DCC                     PWM4INTCON      equ	3532	;# 
  1376     0DCD                     PWM4INTF        equ	3533	;# 
  1377     0DCD                     PWM4INTFLG      equ	3533	;# 
  1378     0DCE                     PWM4CLKCON      equ	3534	;# 
  1379     0DCF                     PWM4LDCON       equ	3535	;# 
  1380     0DD0                     PWM4OFCON       equ	3536	;# 
  1381     0E0F                     PPSLOCK         equ	3599	;# 
  1382     0E10                     INTPPS          equ	3600	;# 
  1383     0E11                     T0CKIPPS        equ	3601	;# 
  1384     0E12                     T1CKIPPS        equ	3602	;# 
  1385     0E13                     T1GPPS          equ	3603	;# 
  1386     0E14                     CWG1INPPS       equ	3604	;# 
  1387     0E15                     RXPPS           equ	3605	;# 
  1388     0E16                     CKPPS           equ	3606	;# 
  1389     0E17                     ADCACTPPS       equ	3607	;# 
  1390     0E90                     RA0PPS          equ	3728	;# 
  1391     0E91                     RA1PPS          equ	3729	;# 
  1392     0E92                     RA2PPS          equ	3730	;# 
  1393     0E94                     RA4PPS          equ	3732	;# 
  1394     0E95                     RA5PPS          equ	3733	;# 
  1395     0EA0                     RC0PPS          equ	3744	;# 
  1396     0EA1                     RC1PPS          equ	3745	;# 
  1397     0EA2                     RC2PPS          equ	3746	;# 
  1398     0EA3                     RC3PPS          equ	3747	;# 
  1399     0EA4                     RC4PPS          equ	3748	;# 
  1400     0EA5                     RC5PPS          equ	3749	;# 
  1401     0FE4                     STATUS_SHAD     equ	4068	;# 
  1402     0FE5                     WREG_SHAD       equ	4069	;# 
  1403     0FE6                     BSR_SHAD        equ	4070	;# 
  1404     0FE7                     PCLATH_SHAD     equ	4071	;# 
  1405     0FE8                     FSR0_SHAD       equ	4072	;# 
  1406     0FE8                     FSR0L_SHAD      equ	4072	;# 
  1407     0FE9                     FSR0H_SHAD      equ	4073	;# 
  1408     0FEA                     FSR1_SHAD       equ	4074	;# 
  1409     0FEA                     FSR1L_SHAD      equ	4074	;# 
  1410     0FEB                     FSR1H_SHAD      equ	4075	;# 
  1411     0FED                     STKPTR          equ	4077	;# 
  1412     0FEE                     TOS             equ	4078	;# 
  1413     0FEE                     TOSL            equ	4078	;# 
  1414     0FEF                     TOSH            equ	4079	;# 
  1415     0000                     INDF0           equ	0	;# 
  1416     0001                     INDF1           equ	1	;# 
  1417     0002                     PCL             equ	2	;# 
  1418     0003                     STATUS          equ	3	;# 
  1419     0004                     FSR0L           equ	4	;# 
  1420     0005                     FSR0H           equ	5	;# 
  1421     0006                     FSR1L           equ	6	;# 
  1422     0007                     FSR1H           equ	7	;# 
  1423     0008                     BSR             equ	8	;# 
  1424     0009                     WREG            equ	9	;# 
  1425     000A                     PCLATH          equ	10	;# 
  1426     000B                     INTCON          equ	11	;# 
  1427     000C                     PORTA           equ	12	;# 
  1428     000E                     PORTC           equ	14	;# 
  1429     0011                     PIR1            equ	17	;# 
  1430     0012                     PIR2            equ	18	;# 
  1431     0013                     PIR3            equ	19	;# 
  1432     0015                     TMR0            equ	21	;# 
  1433     0016                     TMR1            equ	22	;# 
  1434     0016                     TMR1L           equ	22	;# 
  1435     0017                     TMR1H           equ	23	;# 
  1436     0018                     T1CON           equ	24	;# 
  1437     0019                     T1GCON          equ	25	;# 
  1438     001A                     TMR2            equ	26	;# 
  1439     001B                     PR2             equ	27	;# 
  1440     001C                     T2CON           equ	28	;# 
  1441     008C                     TRISA           equ	140	;# 
  1442     008E                     TRISC           equ	142	;# 
  1443     0091                     PIE1            equ	145	;# 
  1444     0092                     PIE2            equ	146	;# 
  1445     0093                     PIE3            equ	147	;# 
  1446     0095                     OPTION_REG      equ	149	;# 
  1447     0096                     PCON            equ	150	;# 
  1448     0097                     WDTCON          equ	151	;# 
  1449     0098                     OSCTUNE         equ	152	;# 
  1450     0099                     OSCCON          equ	153	;# 
  1451     009A                     OSCSTAT         equ	154	;# 
  1452     009B                     ADRES           equ	155	;# 
  1453     009B                     ADRESL          equ	155	;# 
  1454     009C                     ADRESH          equ	156	;# 
  1455     009D                     ADCON0          equ	157	;# 
  1456     009E                     ADCON1          equ	158	;# 
  1457     009F                     ADCON2          equ	159	;# 
  1458     010C                     LATA            equ	268	;# 
  1459     010E                     LATC            equ	270	;# 
  1460     0111                     CM1CON0         equ	273	;# 
  1461     0112                     CM1CON1         equ	274	;# 
  1462     0113                     CM2CON0         equ	275	;# 
  1463     0114                     CM2CON1         equ	276	;# 
  1464     0115                     CMOUT           equ	277	;# 
  1465     0116                     BORCON          equ	278	;# 
  1466     0117                     FVRCON          equ	279	;# 
  1467     0118                     DACCON0         equ	280	;# 
  1468     0119                     DACCON1         equ	281	;# 
  1469     018C                     ANSELA          equ	396	;# 
  1470     018E                     ANSELC          equ	398	;# 
  1471     0191                     PMADR           equ	401	;# 
  1472     0191                     PMADRL          equ	401	;# 
  1473     0192                     PMADRH          equ	402	;# 
  1474     0193                     PMDAT           equ	403	;# 
  1475     0193                     PMDATL          equ	403	;# 
  1476     0194                     PMDATH          equ	404	;# 
  1477     0195                     PMCON1          equ	405	;# 
  1478     0196                     PMCON2          equ	406	;# 
  1479     0197                     VREGCON         equ	407	;# 
  1480     0199                     RCREG           equ	409	;# 
  1481     019A                     TXREG           equ	410	;# 
  1482     019B                     SPBRG           equ	411	;# 
  1483     019B                     SPBRGL          equ	411	;# 
  1484     019C                     SPBRGH          equ	412	;# 
  1485     019D                     RCSTA           equ	413	;# 
  1486     019E                     TXSTA           equ	414	;# 
  1487     019F                     BAUDCON         equ	415	;# 
  1488     020C                     WPUA            equ	524	;# 
  1489     020E                     WPUC            equ	526	;# 
  1490     028C                     ODCONA          equ	652	;# 
  1491     028E                     ODCONC          equ	654	;# 
  1492     030C                     SLRCONA         equ	780	;# 
  1493     030E                     SLRCONC         equ	782	;# 
  1494     038C                     INLVLA          equ	908	;# 
  1495     038E                     INLVLC          equ	910	;# 
  1496     0391                     IOCAP           equ	913	;# 
  1497     0392                     IOCAN           equ	914	;# 
  1498     0393                     IOCAF           equ	915	;# 
  1499     0397                     IOCCP           equ	919	;# 
  1500     0398                     IOCCN           equ	920	;# 
  1501     0399                     IOCCF           equ	921	;# 
  1502     0691                     CWG1DBR         equ	1681	;# 
  1503     0692                     CWG1DBF         equ	1682	;# 
  1504     0693                     CWG1CON0        equ	1683	;# 
  1505     0694                     CWG1CON1        equ	1684	;# 
  1506     0695                     CWG1CON2        equ	1685	;# 
  1507     0D8E                     PWMEN           equ	3470	;# 
  1508     0D8F                     PWMLD           equ	3471	;# 
  1509     0D90                     PWMOUT          equ	3472	;# 
  1510     0D91                     PWM1PH          equ	3473	;# 
  1511     0D91                     PWM1PHL         equ	3473	;# 
  1512     0D92                     PWM1PHH         equ	3474	;# 
  1513     0D93                     PWM1DC          equ	3475	;# 
  1514     0D93                     PWM1DCL         equ	3475	;# 
  1515     0D94                     PWM1DCH         equ	3476	;# 
  1516     0D95                     PWM1PR          equ	3477	;# 
  1517     0D95                     PWM1PRL         equ	3477	;# 
  1518     0D96                     PWM1PRH         equ	3478	;# 
  1519     0D97                     PWM1OF          equ	3479	;# 
  1520     0D97                     PWM1OFL         equ	3479	;# 
  1521     0D98                     PWM1OFH         equ	3480	;# 
  1522     0D99                     PWM1TMR         equ	3481	;# 
  1523     0D99                     PWM1TMRL        equ	3481	;# 
  1524     0D9A                     PWM1TMRH        equ	3482	;# 
  1525     0D9B                     PWM1CON         equ	3483	;# 
  1526     0D9C                     PWM1INTE        equ	3484	;# 
  1527     0D9C                     PWM1INTCON      equ	3484	;# 
  1528     0D9D                     PWM1INTF        equ	3485	;# 
  1529     0D9D                     PWM1INTFLG      equ	3485	;# 
  1530     0D9E                     PWM1CLKCON      equ	3486	;# 
  1531     0D9F                     PWM1LDCON       equ	3487	;# 
  1532     0DA0                     PWM1OFCON       equ	3488	;# 
  1533     0DA1                     PWM2PH          equ	3489	;# 
  1534     0DA1                     PWM2PHL         equ	3489	;# 
  1535     0DA2                     PWM2PHH         equ	3490	;# 
  1536     0DA3                     PWM2DC          equ	3491	;# 
  1537     0DA3                     PWM2DCL         equ	3491	;# 
  1538     0DA4                     PWM2DCH         equ	3492	;# 
  1539     0DA5                     PWM2PR          equ	3493	;# 
  1540     0DA5                     PWM2PRL         equ	3493	;# 
  1541     0DA6                     PWM2PRH         equ	3494	;# 
  1542     0DA7                     PWM2OF          equ	3495	;# 
  1543     0DA7                     PWM2OFL         equ	3495	;# 
  1544     0DA8                     PWM2OFH         equ	3496	;# 
  1545     0DA9                     PWM2TMR         equ	3497	;# 
  1546     0DA9                     PWM2TMRL        equ	3497	;# 
  1547     0DAA                     PWM2TMRH        equ	3498	;# 
  1548     0DAB                     PWM2CON         equ	3499	;# 
  1549     0DAC                     PWM2INTE        equ	3500	;# 
  1550     0DAC                     PWM2INTCON      equ	3500	;# 
  1551     0DAD                     PWM2INTF        equ	3501	;# 
  1552     0DAD                     PWM2INTFLG      equ	3501	;# 
  1553     0DAE                     PWM2CLKCON      equ	3502	;# 
  1554     0DAF                     PWM2LDCON       equ	3503	;# 
  1555     0DB0                     PWM2OFCON       equ	3504	;# 
  1556     0DB1                     PWM3PH          equ	3505	;# 
  1557     0DB1                     PWM3PHL         equ	3505	;# 
  1558     0DB2                     PWM3PHH         equ	3506	;# 
  1559     0DB3                     PWM3DC          equ	3507	;# 
  1560     0DB3                     PWM3DCL         equ	3507	;# 
  1561     0DB4                     PWM3DCH         equ	3508	;# 
  1562     0DB5                     PWM3PR          equ	3509	;# 
  1563     0DB5                     PWM3PRL         equ	3509	;# 
  1564     0DB6                     PWM3PRH         equ	3510	;# 
  1565     0DB7                     PWM3OF          equ	3511	;# 
  1566     0DB7                     PWM3OFL         equ	3511	;# 
  1567     0DB8                     PWM3OFH         equ	3512	;# 
  1568     0DB9                     PWM3TMR         equ	3513	;# 
  1569     0DB9                     PWM3TMRL        equ	3513	;# 
  1570     0DBA                     PWM3TMRH        equ	3514	;# 
  1571     0DBB                     PWM3CON         equ	3515	;# 
  1572     0DBC                     PWM3INTE        equ	3516	;# 
  1573     0DBC                     PWM3INTCON      equ	3516	;# 
  1574     0DBD                     PWM3INTF        equ	3517	;# 
  1575     0DBD                     PWM3INTFLG      equ	3517	;# 
  1576     0DBE                     PWM3CLKCON      equ	3518	;# 
  1577     0DBF                     PWM3LDCON       equ	3519	;# 
  1578     0DC0                     PWM3OFCON       equ	3520	;# 
  1579     0DC1                     PWM4PH          equ	3521	;# 
  1580     0DC1                     PWM4PHL         equ	3521	;# 
  1581     0DC2                     PWM4PHH         equ	3522	;# 
  1582     0DC3                     PWM4DC          equ	3523	;# 
  1583     0DC3                     PWM4DCL         equ	3523	;# 
  1584     0DC4                     PWM4DCH         equ	3524	;# 
  1585     0DC5                     PWM4PR          equ	3525	;# 
  1586     0DC5                     PWM4PRL         equ	3525	;# 
  1587     0DC6                     PWM4PRH         equ	3526	;# 
  1588     0DC7                     PWM4OF          equ	3527	;# 
  1589     0DC7                     PWM4OFL         equ	3527	;# 
  1590     0DC8                     PWM4OFH         equ	3528	;# 
  1591     0DC9                     PWM4TMR         equ	3529	;# 
  1592     0DC9                     PWM4TMRL        equ	3529	;# 
  1593     0DCA                     PWM4TMRH        equ	3530	;# 
  1594     0DCB                     PWM4CON         equ	3531	;# 
  1595     0DCC                     PWM4INTE        equ	3532	;# 
  1596     0DCC                     PWM4INTCON      equ	3532	;# 
  1597     0DCD                     PWM4INTF        equ	3533	;# 
  1598     0DCD                     PWM4INTFLG      equ	3533	;# 
  1599     0DCE                     PWM4CLKCON      equ	3534	;# 
  1600     0DCF                     PWM4LDCON       equ	3535	;# 
  1601     0DD0                     PWM4OFCON       equ	3536	;# 
  1602     0E0F                     PPSLOCK         equ	3599	;# 
  1603     0E10                     INTPPS          equ	3600	;# 
  1604     0E11                     T0CKIPPS        equ	3601	;# 
  1605     0E12                     T1CKIPPS        equ	3602	;# 
  1606     0E13                     T1GPPS          equ	3603	;# 
  1607     0E14                     CWG1INPPS       equ	3604	;# 
  1608     0E15                     RXPPS           equ	3605	;# 
  1609     0E16                     CKPPS           equ	3606	;# 
  1610     0E17                     ADCACTPPS       equ	3607	;# 
  1611     0E90                     RA0PPS          equ	3728	;# 
  1612     0E91                     RA1PPS          equ	3729	;# 
  1613     0E92                     RA2PPS          equ	3730	;# 
  1614     0E94                     RA4PPS          equ	3732	;# 
  1615     0E95                     RA5PPS          equ	3733	;# 
  1616     0EA0                     RC0PPS          equ	3744	;# 
  1617     0EA1                     RC1PPS          equ	3745	;# 
  1618     0EA2                     RC2PPS          equ	3746	;# 
  1619     0EA3                     RC3PPS          equ	3747	;# 
  1620     0EA4                     RC4PPS          equ	3748	;# 
  1621     0EA5                     RC5PPS          equ	3749	;# 
  1622     0FE4                     STATUS_SHAD     equ	4068	;# 
  1623     0FE5                     WREG_SHAD       equ	4069	;# 
  1624     0FE6                     BSR_SHAD        equ	4070	;# 
  1625     0FE7                     PCLATH_SHAD     equ	4071	;# 
  1626     0FE8                     FSR0_SHAD       equ	4072	;# 
  1627     0FE8                     FSR0L_SHAD      equ	4072	;# 
  1628     0FE9                     FSR0H_SHAD      equ	4073	;# 
  1629     0FEA                     FSR1_SHAD       equ	4074	;# 
  1630     0FEA                     FSR1L_SHAD      equ	4074	;# 
  1631     0FEB                     FSR1H_SHAD      equ	4075	;# 
  1632     0FED                     STKPTR          equ	4077	;# 
  1633     0FEE                     TOS             equ	4078	;# 
  1634     0FEE                     TOSL            equ	4078	;# 
  1635     0FEF                     TOSH            equ	4079	;# 
  1636     0000                     INDF0           equ	0	;# 
  1637     0001                     INDF1           equ	1	;# 
  1638     0002                     PCL             equ	2	;# 
  1639     0003                     STATUS          equ	3	;# 
  1640     0004                     FSR0L           equ	4	;# 
  1641     0005                     FSR0H           equ	5	;# 
  1642     0006                     FSR1L           equ	6	;# 
  1643     0007                     FSR1H           equ	7	;# 
  1644     0008                     BSR             equ	8	;# 
  1645     0009                     WREG            equ	9	;# 
  1646     000A                     PCLATH          equ	10	;# 
  1647     000B                     INTCON          equ	11	;# 
  1648     000C                     PORTA           equ	12	;# 
  1649     000E                     PORTC           equ	14	;# 
  1650     0011                     PIR1            equ	17	;# 
  1651     0012                     PIR2            equ	18	;# 
  1652     0013                     PIR3            equ	19	;# 
  1653     0015                     TMR0            equ	21	;# 
  1654     0016                     TMR1            equ	22	;# 
  1655     0016                     TMR1L           equ	22	;# 
  1656     0017                     TMR1H           equ	23	;# 
  1657     0018                     T1CON           equ	24	;# 
  1658     0019                     T1GCON          equ	25	;# 
  1659     001A                     TMR2            equ	26	;# 
  1660     001B                     PR2             equ	27	;# 
  1661     001C                     T2CON           equ	28	;# 
  1662     008C                     TRISA           equ	140	;# 
  1663     008E                     TRISC           equ	142	;# 
  1664     0091                     PIE1            equ	145	;# 
  1665     0092                     PIE2            equ	146	;# 
  1666     0093                     PIE3            equ	147	;# 
  1667     0095                     OPTION_REG      equ	149	;# 
  1668     0096                     PCON            equ	150	;# 
  1669     0097                     WDTCON          equ	151	;# 
  1670     0098                     OSCTUNE         equ	152	;# 
  1671     0099                     OSCCON          equ	153	;# 
  1672     009A                     OSCSTAT         equ	154	;# 
  1673     009B                     ADRES           equ	155	;# 
  1674     009B                     ADRESL          equ	155	;# 
  1675     009C                     ADRESH          equ	156	;# 
  1676     009D                     ADCON0          equ	157	;# 
  1677     009E                     ADCON1          equ	158	;# 
  1678     009F                     ADCON2          equ	159	;# 
  1679     010C                     LATA            equ	268	;# 
  1680     010E                     LATC            equ	270	;# 
  1681     0111                     CM1CON0         equ	273	;# 
  1682     0112                     CM1CON1         equ	274	;# 
  1683     0113                     CM2CON0         equ	275	;# 
  1684     0114                     CM2CON1         equ	276	;# 
  1685     0115                     CMOUT           equ	277	;# 
  1686     0116                     BORCON          equ	278	;# 
  1687     0117                     FVRCON          equ	279	;# 
  1688     0118                     DACCON0         equ	280	;# 
  1689     0119                     DACCON1         equ	281	;# 
  1690     018C                     ANSELA          equ	396	;# 
  1691     018E                     ANSELC          equ	398	;# 
  1692     0191                     PMADR           equ	401	;# 
  1693     0191                     PMADRL          equ	401	;# 
  1694     0192                     PMADRH          equ	402	;# 
  1695     0193                     PMDAT           equ	403	;# 
  1696     0193                     PMDATL          equ	403	;# 
  1697     0194                     PMDATH          equ	404	;# 
  1698     0195                     PMCON1          equ	405	;# 
  1699     0196                     PMCON2          equ	406	;# 
  1700     0197                     VREGCON         equ	407	;# 
  1701     0199                     RCREG           equ	409	;# 
  1702     019A                     TXREG           equ	410	;# 
  1703     019B                     SPBRG           equ	411	;# 
  1704     019B                     SPBRGL          equ	411	;# 
  1705     019C                     SPBRGH          equ	412	;# 
  1706     019D                     RCSTA           equ	413	;# 
  1707     019E                     TXSTA           equ	414	;# 
  1708     019F                     BAUDCON         equ	415	;# 
  1709     020C                     WPUA            equ	524	;# 
  1710     020E                     WPUC            equ	526	;# 
  1711     028C                     ODCONA          equ	652	;# 
  1712     028E                     ODCONC          equ	654	;# 
  1713     030C                     SLRCONA         equ	780	;# 
  1714     030E                     SLRCONC         equ	782	;# 
  1715     038C                     INLVLA          equ	908	;# 
  1716     038E                     INLVLC          equ	910	;# 
  1717     0391                     IOCAP           equ	913	;# 
  1718     0392                     IOCAN           equ	914	;# 
  1719     0393                     IOCAF           equ	915	;# 
  1720     0397                     IOCCP           equ	919	;# 
  1721     0398                     IOCCN           equ	920	;# 
  1722     0399                     IOCCF           equ	921	;# 
  1723     0691                     CWG1DBR         equ	1681	;# 
  1724     0692                     CWG1DBF         equ	1682	;# 
  1725     0693                     CWG1CON0        equ	1683	;# 
  1726     0694                     CWG1CON1        equ	1684	;# 
  1727     0695                     CWG1CON2        equ	1685	;# 
  1728     0D8E                     PWMEN           equ	3470	;# 
  1729     0D8F                     PWMLD           equ	3471	;# 
  1730     0D90                     PWMOUT          equ	3472	;# 
  1731     0D91                     PWM1PH          equ	3473	;# 
  1732     0D91                     PWM1PHL         equ	3473	;# 
  1733     0D92                     PWM1PHH         equ	3474	;# 
  1734     0D93                     PWM1DC          equ	3475	;# 
  1735     0D93                     PWM1DCL         equ	3475	;# 
  1736     0D94                     PWM1DCH         equ	3476	;# 
  1737     0D95                     PWM1PR          equ	3477	;# 
  1738     0D95                     PWM1PRL         equ	3477	;# 
  1739     0D96                     PWM1PRH         equ	3478	;# 
  1740     0D97                     PWM1OF          equ	3479	;# 
  1741     0D97                     PWM1OFL         equ	3479	;# 
  1742     0D98                     PWM1OFH         equ	3480	;# 
  1743     0D99                     PWM1TMR         equ	3481	;# 
  1744     0D99                     PWM1TMRL        equ	3481	;# 
  1745     0D9A                     PWM1TMRH        equ	3482	;# 
  1746     0D9B                     PWM1CON         equ	3483	;# 
  1747     0D9C                     PWM1INTE        equ	3484	;# 
  1748     0D9C                     PWM1INTCON      equ	3484	;# 
  1749     0D9D                     PWM1INTF        equ	3485	;# 
  1750     0D9D                     PWM1INTFLG      equ	3485	;# 
  1751     0D9E                     PWM1CLKCON      equ	3486	;# 
  1752     0D9F                     PWM1LDCON       equ	3487	;# 
  1753     0DA0                     PWM1OFCON       equ	3488	;# 
  1754     0DA1                     PWM2PH          equ	3489	;# 
  1755     0DA1                     PWM2PHL         equ	3489	;# 
  1756     0DA2                     PWM2PHH         equ	3490	;# 
  1757     0DA3                     PWM2DC          equ	3491	;# 
  1758     0DA3                     PWM2DCL         equ	3491	;# 
  1759     0DA4                     PWM2DCH         equ	3492	;# 
  1760     0DA5                     PWM2PR          equ	3493	;# 
  1761     0DA5                     PWM2PRL         equ	3493	;# 
  1762     0DA6                     PWM2PRH         equ	3494	;# 
  1763     0DA7                     PWM2OF          equ	3495	;# 
  1764     0DA7                     PWM2OFL         equ	3495	;# 
  1765     0DA8                     PWM2OFH         equ	3496	;# 
  1766     0DA9                     PWM2TMR         equ	3497	;# 
  1767     0DA9                     PWM2TMRL        equ	3497	;# 
  1768     0DAA                     PWM2TMRH        equ	3498	;# 
  1769     0DAB                     PWM2CON         equ	3499	;# 
  1770     0DAC                     PWM2INTE        equ	3500	;# 
  1771     0DAC                     PWM2INTCON      equ	3500	;# 
  1772     0DAD                     PWM2INTF        equ	3501	;# 
  1773     0DAD                     PWM2INTFLG      equ	3501	;# 
  1774     0DAE                     PWM2CLKCON      equ	3502	;# 
  1775     0DAF                     PWM2LDCON       equ	3503	;# 
  1776     0DB0                     PWM2OFCON       equ	3504	;# 
  1777     0DB1                     PWM3PH          equ	3505	;# 
  1778     0DB1                     PWM3PHL         equ	3505	;# 
  1779     0DB2                     PWM3PHH         equ	3506	;# 
  1780     0DB3                     PWM3DC          equ	3507	;# 
  1781     0DB3                     PWM3DCL         equ	3507	;# 
  1782     0DB4                     PWM3DCH         equ	3508	;# 
  1783     0DB5                     PWM3PR          equ	3509	;# 
  1784     0DB5                     PWM3PRL         equ	3509	;# 
  1785     0DB6                     PWM3PRH         equ	3510	;# 
  1786     0DB7                     PWM3OF          equ	3511	;# 
  1787     0DB7                     PWM3OFL         equ	3511	;# 
  1788     0DB8                     PWM3OFH         equ	3512	;# 
  1789     0DB9                     PWM3TMR         equ	3513	;# 
  1790     0DB9                     PWM3TMRL        equ	3513	;# 
  1791     0DBA                     PWM3TMRH        equ	3514	;# 
  1792     0DBB                     PWM3CON         equ	3515	;# 
  1793     0DBC                     PWM3INTE        equ	3516	;# 
  1794     0DBC                     PWM3INTCON      equ	3516	;# 
  1795     0DBD                     PWM3INTF        equ	3517	;# 
  1796     0DBD                     PWM3INTFLG      equ	3517	;# 
  1797     0DBE                     PWM3CLKCON      equ	3518	;# 
  1798     0DBF                     PWM3LDCON       equ	3519	;# 
  1799     0DC0                     PWM3OFCON       equ	3520	;# 
  1800     0DC1                     PWM4PH          equ	3521	;# 
  1801     0DC1                     PWM4PHL         equ	3521	;# 
  1802     0DC2                     PWM4PHH         equ	3522	;# 
  1803     0DC3                     PWM4DC          equ	3523	;# 
  1804     0DC3                     PWM4DCL         equ	3523	;# 
  1805     0DC4                     PWM4DCH         equ	3524	;# 
  1806     0DC5                     PWM4PR          equ	3525	;# 
  1807     0DC5                     PWM4PRL         equ	3525	;# 
  1808     0DC6                     PWM4PRH         equ	3526	;# 
  1809     0DC7                     PWM4OF          equ	3527	;# 
  1810     0DC7                     PWM4OFL         equ	3527	;# 
  1811     0DC8                     PWM4OFH         equ	3528	;# 
  1812     0DC9                     PWM4TMR         equ	3529	;# 
  1813     0DC9                     PWM4TMRL        equ	3529	;# 
  1814     0DCA                     PWM4TMRH        equ	3530	;# 
  1815     0DCB                     PWM4CON         equ	3531	;# 
  1816     0DCC                     PWM4INTE        equ	3532	;# 
  1817     0DCC                     PWM4INTCON      equ	3532	;# 
  1818     0DCD                     PWM4INTF        equ	3533	;# 
  1819     0DCD                     PWM4INTFLG      equ	3533	;# 
  1820     0DCE                     PWM4CLKCON      equ	3534	;# 
  1821     0DCF                     PWM4LDCON       equ	3535	;# 
  1822     0DD0                     PWM4OFCON       equ	3536	;# 
  1823     0E0F                     PPSLOCK         equ	3599	;# 
  1824     0E10                     INTPPS          equ	3600	;# 
  1825     0E11                     T0CKIPPS        equ	3601	;# 
  1826     0E12                     T1CKIPPS        equ	3602	;# 
  1827     0E13                     T1GPPS          equ	3603	;# 
  1828     0E14                     CWG1INPPS       equ	3604	;# 
  1829     0E15                     RXPPS           equ	3605	;# 
  1830     0E16                     CKPPS           equ	3606	;# 
  1831     0E17                     ADCACTPPS       equ	3607	;# 
  1832     0E90                     RA0PPS          equ	3728	;# 
  1833     0E91                     RA1PPS          equ	3729	;# 
  1834     0E92                     RA2PPS          equ	3730	;# 
  1835     0E94                     RA4PPS          equ	3732	;# 
  1836     0E95                     RA5PPS          equ	3733	;# 
  1837     0EA0                     RC0PPS          equ	3744	;# 
  1838     0EA1                     RC1PPS          equ	3745	;# 
  1839     0EA2                     RC2PPS          equ	3746	;# 
  1840     0EA3                     RC3PPS          equ	3747	;# 
  1841     0EA4                     RC4PPS          equ	3748	;# 
  1842     0EA5                     RC5PPS          equ	3749	;# 
  1843     0FE4                     STATUS_SHAD     equ	4068	;# 
  1844     0FE5                     WREG_SHAD       equ	4069	;# 
  1845     0FE6                     BSR_SHAD        equ	4070	;# 
  1846     0FE7                     PCLATH_SHAD     equ	4071	;# 
  1847     0FE8                     FSR0_SHAD       equ	4072	;# 
  1848     0FE8                     FSR0L_SHAD      equ	4072	;# 
  1849     0FE9                     FSR0H_SHAD      equ	4073	;# 
  1850     0FEA                     FSR1_SHAD       equ	4074	;# 
  1851     0FEA                     FSR1L_SHAD      equ	4074	;# 
  1852     0FEB                     FSR1H_SHAD      equ	4075	;# 
  1853     0FED                     STKPTR          equ	4077	;# 
  1854     0FEE                     TOS             equ	4078	;# 
  1855     0FEE                     TOSL            equ	4078	;# 
  1856     0FEF                     TOSH            equ	4079	;# 
  1857     000E                     _PORTCbits      set	14
  1858     000B                     _INTCONbits     set	11
  1859     008E                     _TRISCbits      set	142
  1860     0095                     _OPTION_REGbits set	149
  1861     008E                     _TRISC          set	142
  1862     008C                     _TRISA          set	140
  1863     0097                     _WDTCON         set	151
  1864     0098                     _OSCTUNE        set	152
  1865     0099                     _OSCCON         set	153
  1866     04D6                     _PLLR           set	1238
  1867     010E                     _LATCbits       set	270
  1868     010E                     _LATC           set	270
  1869     010C                     _LATA           set	268
  1870     0116                     _BORCON         set	278
  1871     018C                     _ANSELA         set	396
  1872     018E                     _ANSELC         set	398
  1873     020E                     _WPUC           set	526
  1874     020C                     _WPUA           set	524
  1875     028E                     _ODCONC         set	654
  1876     028C                     _ODCONA         set	652
  1877     030E                     _SLRCONC        set	782
  1878     030C                     _SLRCONA        set	780
  1879     0DAD                     _PWM2INTFbits   set	3501
  1880     0DAF                     _PWM2LDCONbits  set	3503
  1881     0DAB                     _PWM2CONbits    set	3499
  1882     0DAB                     _PWM2CON        set	3499
  1883     0DA9                     _PWM2TMRL       set	3497
  1884     0DAA                     _PWM2TMRH       set	3498
  1885     0DA7                     _PWM2OFL        set	3495
  1886     0DA8                     _PWM2OFH        set	3496
  1887     0DA5                     _PWM2PRL        set	3493
  1888     0DA6                     _PWM2PRH        set	3494
  1889     0DA3                     _PWM2DCL        set	3491
  1890     0DA4                     _PWM2DCH        set	3492
  1891     0DA1                     _PWM2PHL        set	3489
  1892     0DA2                     _PWM2PHH        set	3490
  1893     0DB0                     _PWM2OFCON      set	3504
  1894     0DAF                     _PWM2LDCON      set	3503
  1895     0DAE                     _PWM2CLKCON     set	3502
  1896     0DAD                     _PWM2INTF       set	3501
  1897     0DAC                     _PWM2INTE       set	3500
  1898     0D9D                     _PWM1INTFbits   set	3485
  1899     0D9F                     _PWM1LDCONbits  set	3487
  1900     0D9B                     _PWM1CONbits    set	3483
  1901     0D9B                     _PWM1CON        set	3483
  1902     0D99                     _PWM1TMRL       set	3481
  1903     0D9A                     _PWM1TMRH       set	3482
  1904     0D97                     _PWM1OFL        set	3479
  1905     0D98                     _PWM1OFH        set	3480
  1906     0D95                     _PWM1PRL        set	3477
  1907     0D96                     _PWM1PRH        set	3478
  1908     0D93                     _PWM1DCL        set	3475
  1909     0D94                     _PWM1DCH        set	3476
  1910     0D91                     _PWM1PHL        set	3473
  1911     0D92                     _PWM1PHH        set	3474
  1912     0DA0                     _PWM1OFCON      set	3488
  1913     0D9F                     _PWM1LDCON      set	3487
  1914     0D9E                     _PWM1CLKCON     set	3486
  1915     0D9D                     _PWM1INTF       set	3485
  1916     0D9C                     _PWM1INTE       set	3484
  1917     0E95                     _RA5PPS         set	3733
  1918     0EA3                     _RC3PPS         set	3747
  1919                           
  1920                           	psect	stringtext1
  1921     043A                     __pstringtext1:
  1922     043A                     STR_1:
  1923     043A  3425               	retlw	37	;'%'
  1924     043B  3464               	retlw	100	;'d'
  1925     043C  3425               	retlw	37	;'%'
  1926     043D  3464               	retlw	100	;'d'
  1927     043E  3425               	retlw	37	;'%'
  1928     043F  3464               	retlw	100	;'d'
  1929     0440  3400               	retlw	0
  1930                           
  1931                           	psect	stringtext2
  1932     0000                     __pstringtext2:
  1933                           
  1934                           	psect	cinit
  1935     0015                     start_initialization:	
  1936                           ; #config settings
  1937                           
  1938     0015                     __initialization:
  1939                           
  1940                           ; Clear objects allocated to BANK0
  1941     0015  0020               	movlb	0	; select bank0
  1942     0016  01EF               	clrf	__pbssBANK0& (0+127)
  1943                           
  1944                           ; Clear objects allocated to BANK1
  1945     0017  30A0               	movlw	low __pbssBANK1
  1946     0018  0084               	movwf	4
  1947     0019  3000               	movlw	high __pbssBANK1
  1948     001A  0085               	movwf	5
  1949     001B  3024               	movlw	36
  1950     001C  3184  2441  3180   	fcall	clear_ram0
  1951     001F                     end_of_initialization:	
  1952                           ;End of C runtime variable initialization code
  1953                           
  1954     001F                     __end_of__initialization:
  1955     001F  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1956     0020  0020               	movlb	0
  1957     0021  3182  2A77         	ljmp	_main	;jump to C main() function
  1958                           
  1959                           	psect	bssBANK0
  1960     006F                     __pbssBANK0:
  1961     006F                     _flags:
  1962     006F                     	ds	1
  1963                           
  1964                           	psect	bssBANK1
  1965     00A0                     __pbssBANK1:
  1966     00A0                     _dbuf:
  1967     00A0                     	ds	32
  1968     00C0                     _width:
  1969     00C0                     	ds	2
  1970     00C2                     _prec:
  1971     00C2                     	ds	2
  1972                           
  1973                           	psect	clrtext
  1974     0441                     clear_ram0:	
  1975                           ;	Called with FSR0 containing the base address, and
  1976                           ;	WREG with the size to clear
  1977                           
  1978     0441  0064               	clrwdt	;clear the watchdog before getting into this loop
  1979     0442                     clrloop0:
  1980     0442  0180               	clrf	0	;clear RAM location pointed to by FSR
  1981     0443  3101               	addfsr 0,1
  1982     0444  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1983     0445  2C42               	goto	clrloop0	;have we reached the end yet?
  1984     0446  3400               	retlw	0	;all done for this memory range, return
  1985                           
  1986                           	psect	cstackCOMMON
  1987     0070                     __pcstackCOMMON:
  1988     0070                     ?_PIN_MANAGER_Initialize:
  1989     0070                     ?_OSCILLATOR_Initialize:	
  1990                           ; 1 bytes @ 0x0
  1991                           
  1992     0070                     ?_WDT_Initialize:	
  1993                           ; 1 bytes @ 0x0
  1994                           
  1995     0070                     ?_LCD_i2c_init:	
  1996                           ; 1 bytes @ 0x0
  1997                           
  1998     0070                     ?_LCD_i2C_cmd:	
  1999                           ; 1 bytes @ 0x0
  2000                           
  2001     0070                     ?_I2C_start:	
  2002                           ; 1 bytes @ 0x0
  2003                           
  2004     0070                     ?_I2C_send:	
  2005                           ; 1 bytes @ 0x0
  2006                           
  2007     0070                     ?_I2C_ackchk:	
  2008                           ; 1 bytes @ 0x0
  2009                           
  2010     0070                     ?_I2C_stop:	
  2011                           ; 1 bytes @ 0x0
  2012                           
  2013     0070                     ?_putch:	
  2014                           ; 1 bytes @ 0x0
  2015                           
  2016     0070                     ?_PWM1_Initialize:	
  2017                           ; 1 bytes @ 0x0
  2018                           
  2019     0070                     ?_PWM2_Initialize:	
  2020                           ; 1 bytes @ 0x0
  2021                           
  2022     0070                     ?_SYSTEM_Initialize:	
  2023                           ; 1 bytes @ 0x0
  2024                           
  2025     0070                     ?_PIN_MANAGER_IOC:	
  2026                           ; 1 bytes @ 0x0
  2027                           
  2028     0070                     ?_INTERRUPT_InterruptManager:	
  2029                           ; 1 bytes @ 0x0
  2030                           
  2031     0070                     ?_main:	
  2032                           ; 1 bytes @ 0x0
  2033                           
  2034     0070                     ?_strlen:	
  2035                           ; 1 bytes @ 0x0
  2036                           
  2037     0070                     ?_fputc:	
  2038                           ; 2 bytes @ 0x0
  2039                           
  2040     0070                     ?___awdiv:	
  2041                           ; 2 bytes @ 0x0
  2042                           
  2043     0070                     ?___awmod:	
  2044                           ; 2 bytes @ 0x0
  2045                           
  2046     0070                     I2C_send@send_data:	
  2047                           ; 2 bytes @ 0x0
  2048                           
  2049     0070                     I2C_ackchk@i2c_data:	
  2050                           ; 1 bytes @ 0x0
  2051                           
  2052     0070                     putch@c:	
  2053                           ; 1 bytes @ 0x0
  2054                           
  2055     0070                     strlen@s:	
  2056                           ; 1 bytes @ 0x0
  2057                           
  2058     0070                     ___awdiv@divisor:	
  2059                           ; 1 bytes @ 0x0
  2060                           
  2061     0070                     ___awmod@divisor:	
  2062                           ; 2 bytes @ 0x0
  2063                           
  2064     0070                     fputc@c:	
  2065                           ; 2 bytes @ 0x0
  2066                           
  2067     0070                     ??_PIN_MANAGER_Initialize:	
  2068                           ; 2 bytes @ 0x0
  2069                           
  2070     0070                     ??_OSCILLATOR_Initialize:	
  2071                           ; 1 bytes @ 0x0
  2072                           
  2073     0070                     ??_WDT_Initialize:	
  2074                           ; 1 bytes @ 0x0
  2075                           
  2076     0070                     ??_I2C_start:	
  2077                           ; 1 bytes @ 0x0
  2078                           
  2079     0070                     ??_I2C_send:	
  2080                           ; 1 bytes @ 0x0
  2081                           
  2082     0070                     ??_I2C_ackchk:	
  2083                           ; 1 bytes @ 0x0
  2084                           
  2085     0070                     ??_I2C_stop:	
  2086                           ; 1 bytes @ 0x0
  2087                           
  2088     0070                     ??_putch:	
  2089                           ; 1 bytes @ 0x0
  2090                           
  2091     0070                     ??_PWM1_Initialize:	
  2092                           ; 1 bytes @ 0x0
  2093                           
  2094     0070                     ??_PWM2_Initialize:	
  2095                           ; 1 bytes @ 0x0
  2096                           
  2097     0070                     ??_SYSTEM_Initialize:	
  2098                           ; 1 bytes @ 0x0
  2099                           
  2100     0070                     ??_PIN_MANAGER_IOC:	
  2101                           ; 1 bytes @ 0x0
  2102                           
  2103     0070                     ??_INTERRUPT_InterruptManager:	
  2104                           ; 1 bytes @ 0x0
  2105                           
  2106                           
  2107                           ; 1 bytes @ 0x0
  2108     0070                     	ds	1
  2109     0071                     I2C_send@i2c_data:
  2110                           
  2111                           ; 1 bytes @ 0x1
  2112     0071                     	ds	1
  2113     0072                     I2C_send@i:
  2114     0072                     strlen@a:	
  2115                           ; 1 bytes @ 0x2
  2116                           
  2117     0072                     ___awdiv@dividend:	
  2118                           ; 1 bytes @ 0x2
  2119                           
  2120     0072                     ___awmod@dividend:	
  2121                           ; 2 bytes @ 0x2
  2122                           
  2123     0072                     fputc@fp:	
  2124                           ; 2 bytes @ 0x2
  2125                           
  2126     0072                     ??_strlen:	
  2127                           ; 2 bytes @ 0x2
  2128                           
  2129                           
  2130                           ; 1 bytes @ 0x2
  2131     0072                     	ds	1
  2132     0073                     ?_LCD_i2C_data:
  2133     0073                     LCD_i2C_data@str:	
  2134                           ; 1 bytes @ 0x3
  2135                           
  2136     0073                     LCD_i2C_cmd@cmd:	
  2137                           ; 1 bytes @ 0x3
  2138                           
  2139     0073                     ??_LCD_i2C_cmd:	
  2140                           ; 1 bytes @ 0x3
  2141                           
  2142                           
  2143                           ; 1 bytes @ 0x3
  2144     0073                     	ds	1
  2145     0074                     LCD_i2C_data@l:
  2146     0074                     ___awdiv@counter:	
  2147                           ; 1 bytes @ 0x4
  2148                           
  2149     0074                     ___awmod@counter:	
  2150                           ; 1 bytes @ 0x4
  2151                           
  2152     0074                     ??_LCD_i2c_init:	
  2153                           ; 1 bytes @ 0x4
  2154                           
  2155     0074                     ??_LCD_i2C_data:	
  2156                           ; 1 bytes @ 0x4
  2157                           
  2158     0074                     ??_fputc:	
  2159                           ; 1 bytes @ 0x4
  2160                           
  2161     0074                     ??___awdiv:	
  2162                           ; 1 bytes @ 0x4
  2163                           
  2164     0074                     ??___awmod:	
  2165                           ; 1 bytes @ 0x4
  2166                           
  2167                           
  2168                           ; 1 bytes @ 0x4
  2169     0074                     	ds	1
  2170     0075                     LCD_i2C_data@i:
  2171     0075                     ___awdiv@sign:	
  2172                           ; 1 bytes @ 0x5
  2173                           
  2174     0075                     ___awmod@sign:	
  2175                           ; 1 bytes @ 0x5
  2176                           
  2177                           
  2178                           ; 1 bytes @ 0x5
  2179     0075                     	ds	1
  2180     0076                     ?_abs:
  2181     0076                     LCD_i2C_data@c:	
  2182                           ; 2 bytes @ 0x6
  2183                           
  2184     0076                     LCD_i2c_init@ctr:	
  2185                           ; 1 bytes @ 0x6
  2186                           
  2187     0076                     ___awdiv@quotient:	
  2188                           ; 1 bytes @ 0x6
  2189                           
  2190     0076                     abs@a:	
  2191                           ; 2 bytes @ 0x6
  2192                           
  2193                           
  2194                           ; 2 bytes @ 0x6
  2195     0076                     	ds	2
  2196     0078                     ??_abs:
  2197                           
  2198                           ; 1 bytes @ 0x8
  2199     0078                     	ds	2
  2200     007A                     ?_vfpfcnvrt:
  2201     007A                     vfpfcnvrt@fp:	
  2202                           ; 1 bytes @ 0xA
  2203                           
  2204                           
  2205                           ; 2 bytes @ 0xA
  2206     007A                     	ds	2
  2207     007C                     vfpfcnvrt@fmt:
  2208                           
  2209                           ; 1 bytes @ 0xC
  2210     007C                     	ds	1
  2211     007D                     vfpfcnvrt@ap:
  2212                           
  2213                           ; 1 bytes @ 0xD
  2214     007D                     	ds	1
  2215     007E                     ??_sprintf:
  2216                           
  2217                           	psect	cstackBANK0
  2218     0020                     __pcstackBANK0:	
  2219                           ; 1 bytes @ 0xE
  2220                           
  2221     0020                     ??_vfpfcnvrt:
  2222                           
  2223                           ; 1 bytes @ 0x0
  2224     0020                     	ds	4
  2225     0024                     vfpfcnvrt@done:
  2226                           
  2227                           ; 1 bytes @ 0x4
  2228     0024                     	ds	1
  2229     0025                     vfpfcnvrt@cp:
  2230                           
  2231                           ; 2 bytes @ 0x5
  2232     0025                     	ds	2
  2233     0027                     vfpfcnvrt@convarg:
  2234                           
  2235                           ; 4 bytes @ 0x7
  2236     0027                     	ds	4
  2237     002B                     vfpfcnvrt@c:
  2238                           
  2239                           ; 1 bytes @ 0xB
  2240     002B                     	ds	1
  2241     002C                     ?_vfprintf:
  2242     002C                     vfprintf@fp:	
  2243                           ; 2 bytes @ 0xC
  2244                           
  2245                           
  2246                           ; 2 bytes @ 0xC
  2247     002C                     	ds	2
  2248     002E                     vfprintf@fmt:
  2249                           
  2250                           ; 2 bytes @ 0xE
  2251     002E                     	ds	2
  2252     0030                     vfprintf@ap:
  2253                           
  2254                           ; 1 bytes @ 0x10
  2255     0030                     	ds	1
  2256     0031                     ??_vfprintf:
  2257                           
  2258                           ; 1 bytes @ 0x11
  2259     0031                     	ds	1
  2260     0032                     vfprintf@cfmt:
  2261                           
  2262                           ; 2 bytes @ 0x12
  2263     0032                     	ds	2
  2264     0034                     ?_sprintf:
  2265     0034                     sprintf@s:	
  2266                           ; 2 bytes @ 0x14
  2267                           
  2268                           
  2269                           ; 1 bytes @ 0x14
  2270     0034                     	ds	1
  2271     0035                     sprintf@fmt:
  2272                           
  2273                           ; 2 bytes @ 0x15
  2274     0035                     	ds	8
  2275     003D                     sprintf@ap:
  2276                           
  2277                           ; 1 bytes @ 0x1D
  2278     003D                     	ds	1
  2279     003E                     sprintf@f:
  2280                           
  2281                           ; 11 bytes @ 0x1E
  2282     003E                     	ds	11
  2283     0049                     ??_main:
  2284                           
  2285                           ; 1 bytes @ 0x29
  2286     0049                     	ds	6
  2287     004F                     main@buf:
  2288                           
  2289                           ; 32 bytes @ 0x2F
  2290     004F                     	ds	32
  2291                           
  2292                           	psect	maintext
  2293     0277                     __pmaintext:	
  2294 ;;
  2295 ;;Main: autosize = 0, tempsize = 6, incstack = 0, save=0
  2296 ;;
  2297 ;; *************** function _main *****************
  2298 ;; Defined at:
  2299 ;;		line 22 in file "main.c"
  2300 ;; Parameters:    Size  Location     Type
  2301 ;;		None
  2302 ;; Auto vars:     Size  Location     Type
  2303 ;;  buf            32   47[BANK0 ] unsigned char [32]
  2304 ;; Return value:  Size  Location     Type
  2305 ;;                  1    wreg      void 
  2306 ;; Registers used:
  2307 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2308 ;; Tracked objects:
  2309 ;;		On entry : B1F/0
  2310 ;;		On exit  : 0/0
  2311 ;;		Unchanged: 0/0
  2312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2313 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2314 ;;      Locals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2315 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2316 ;;      Totals:         0      38       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2317 ;;Total ram usage:       38 bytes
  2318 ;; Hardware stack levels required when called: 7
  2319 ;; This function calls:
  2320 ;;		_LCD_i2C_cmd
  2321 ;;		_LCD_i2C_data
  2322 ;;		_LCD_i2c_init
  2323 ;;		_SYSTEM_Initialize
  2324 ;;		_sprintf
  2325 ;; This function is called by:
  2326 ;;		Startup code after reset
  2327 ;; This function uses a non-reentrant model
  2328 ;;
  2329                           
  2330     0277                     _main:	
  2331                           ;psect for function _main
  2332                           
  2333     0277                     l1664:	
  2334                           ;incstack = 0
  2335                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2336                           
  2337                           
  2338                           ;main.c: 24:     SYSTEM_Initialize();
  2339     0277  3184  2402  3182   	fcall	_SYSTEM_Initialize
  2340     027A                     l1666:
  2341                           
  2342                           ;main.c: 26:     char buf[32];;main.c: 27:     _delay((unsigned long)((100)*(32000000/40
      +                          00.0)));
  2343     027A  3005               	movlw	5
  2344     027B  0020               	movlb	0	; select bank0
  2345     027C  00CA               	movwf	??_main+1
  2346     027D  300F               	movlw	15
  2347     027E  00C9               	movwf	??_main
  2348     027F  30F1               	movlw	241
  2349     0280                     u867:
  2350     0280  0B89               	decfsz	9,f
  2351     0281  2A80               	goto	u867
  2352     0282  0BC9               	decfsz	??_main,f
  2353     0283  2A80               	goto	u867
  2354     0284  0BCA               	decfsz	??_main+1,f
  2355     0285  2A80               	goto	u867
  2356                           
  2357                           ;main.c: 28:     LCD_i2c_init(8);
  2358     0286  3008               	movlw	8
  2359     0287  3181  2110  3182   	fcall	_LCD_i2c_init
  2360     028A                     l258:	
  2361                           ;main.c: 30:     while(1)
  2362                           
  2363     028A  0064               	clrwdt	;# 
  2364                           
  2365                           ;main.c: 34:         LCD_i2C_cmd(0x80);
  2366     028B  3080               	movlw	128
  2367     028C  3183  2379  3182   	fcall	_LCD_i2C_cmd
  2368     028F                     l1668:
  2369                           
  2370                           ;main.c: 35:         sprintf(buf, "%d%d%d", PORTCbits.RC1, PORTCbits.RC0, PORTCbits.RC2)
      +                          ;
  2371     028F  304F               	movlw	(low (main@buf| 0))& (0+255)
  2372     0290  0020               	movlb	0	; select bank0
  2373     0291  00B4               	movwf	sprintf@s
  2374     0292  303A               	movlw	low (STR_1| (0+32768))
  2375     0293  00B5               	movwf	sprintf@fmt
  2376     0294  3084               	movlw	high (STR_1| (0+32768))
  2377     0295  00B6               	movwf	sprintf@fmt+1
  2378     0296  0C0E               	rrf	14,w	;volatile
  2379     0297  3901               	andlw	1
  2380     0298  00C9               	movwf	??_main
  2381     0299  01CA               	clrf	??_main+1
  2382     029A  0849               	movf	??_main,w
  2383     029B  00B7               	movwf	?_sprintf+3
  2384     029C  084A               	movf	??_main+1,w
  2385     029D  00B8               	movwf	?_sprintf+4
  2386     029E  080E               	movf	14,w	;volatile
  2387     029F  3901               	andlw	1
  2388     02A0  00CB               	movwf	??_main+2
  2389     02A1  01CC               	clrf	??_main+3
  2390     02A2  084B               	movf	??_main+2,w
  2391     02A3  00B9               	movwf	?_sprintf+5
  2392     02A4  084C               	movf	??_main+3,w
  2393     02A5  00BA               	movwf	?_sprintf+6
  2394     02A6  0C0E               	rrf	14,w	;volatile
  2395     02A7  0C89               	rrf	9,f
  2396     02A8  3901               	andlw	1
  2397     02A9  00CD               	movwf	??_main+4
  2398     02AA  01CE               	clrf	??_main+5
  2399     02AB  084D               	movf	??_main+4,w
  2400     02AC  00BB               	movwf	?_sprintf+7
  2401     02AD  084E               	movf	??_main+5,w
  2402     02AE  00BC               	movwf	?_sprintf+8
  2403     02AF  3183  231F  3182   	fcall	_sprintf
  2404     02B2                     l1670:
  2405                           
  2406                           ;main.c: 36:         LCD_i2C_data(buf);
  2407     02B2  304F               	movlw	(low (main@buf| 0))& (0+255)
  2408     02B3  00F3               	movwf	LCD_i2C_data@str
  2409     02B4  3182  22BA  3182   	fcall	_LCD_i2C_data
  2410     02B7  2A8A               	goto	l258
  2411     02B8  3180  2813         	ljmp	start
  2412     02BA                     __end_of_main:
  2413                           
  2414                           	psect	text1
  2415     031F                     __ptext1:	
  2416 ;; *************** function _sprintf *****************
  2417 ;; Defined at:
  2418 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_sprintf.c"
  2419 ;; Parameters:    Size  Location     Type
  2420 ;;  s               1   20[BANK0 ] PTR unsigned char 
  2421 ;;		 -> main@buf(32), 
  2422 ;;  fmt             2   21[BANK0 ] PTR const unsigned char 
  2423 ;;		 -> STR_1(7), 
  2424 ;; Auto vars:     Size  Location     Type
  2425 ;;  f              11   30[BANK0 ] struct _IO_FILE
  2426 ;;  ret             2    0        int 
  2427 ;;  ap              1   29[BANK0 ] PTR void [1]
  2428 ;;		 -> ?_sprintf(2), 
  2429 ;; Return value:  Size  Location     Type
  2430 ;;                  2   20[BANK0 ] int 
  2431 ;; Registers used:
  2432 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2433 ;; Tracked objects:
  2434 ;;		On entry : 0/0
  2435 ;;		On exit  : 0/0
  2436 ;;		Unchanged: 0/0
  2437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2438 ;;      Params:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2439 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2441 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2442 ;;Total ram usage:       21 bytes
  2443 ;; Hardware stack levels used: 1
  2444 ;; Hardware stack levels required when called: 6
  2445 ;; This function calls:
  2446 ;;		_vfprintf
  2447 ;; This function is called by:
  2448 ;;		_main
  2449 ;; This function uses a non-reentrant model
  2450 ;;
  2451                           
  2452     031F                     _sprintf:	
  2453                           ;psect for function _sprintf
  2454                           
  2455     031F                     l1626:	
  2456                           ;incstack = 0
  2457                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2458                           
  2459     031F  3037               	movlw	(low ((?_sprintf| 0+3)))& (0+255)
  2460     0320  0020               	movlb	0	; select bank0
  2461     0321  00BD               	movwf	sprintf@ap
  2462     0322  0834               	movf	sprintf@s,w
  2463     0323  00BE               	movwf	sprintf@f
  2464     0324  01BF               	clrf	sprintf@f+1
  2465     0325                     l1628:
  2466     0325  01C0               	clrf	sprintf@f+2
  2467     0326  01C1               	clrf	sprintf@f+3
  2468     0327                     l1630:
  2469     0327  01C7               	clrf	sprintf@f+9
  2470     0328  01C8               	clrf	sprintf@f+10
  2471     0329                     l1632:
  2472     0329  303E               	movlw	low sprintf@f
  2473     032A  00AC               	movwf	vfprintf@fp
  2474     032B  3000               	movlw	high sprintf@f
  2475     032C  00AD               	movwf	vfprintf@fp+1
  2476     032D  0836               	movf	sprintf@fmt+1,w
  2477     032E  00AF               	movwf	vfprintf@fmt+1
  2478     032F  0835               	movf	sprintf@fmt,w
  2479     0330  00AE               	movwf	vfprintf@fmt
  2480     0331  303D               	movlw	(low (sprintf@ap| 0))& (0+255)
  2481     0332  00B0               	movwf	vfprintf@ap
  2482     0333  3183  233D  3183   	fcall	_vfprintf
  2483     0336                     l1634:
  2484     0336  0020               	movlb	0	; select bank0
  2485     0337  0834               	movf	sprintf@s,w
  2486     0338  0740               	addwf	sprintf@f+2,w
  2487     0339  0086               	movwf	6
  2488     033A  0187               	clrf	7
  2489     033B  0181               	clrf	1
  2490     033C                     l866:
  2491     033C  0008               	return
  2492     033D                     __end_of_sprintf:
  2493                           
  2494                           	psect	text2
  2495     033D                     __ptext2:	
  2496 ;; *************** function _vfprintf *****************
  2497 ;; Defined at:
  2498 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  2499 ;; Parameters:    Size  Location     Type
  2500 ;;  fp              2   12[BANK0 ] PTR struct _IO_FILE
  2501 ;;		 -> sprintf@f(11), 
  2502 ;;  fmt             2   14[BANK0 ] PTR const unsigned char 
  2503 ;;		 -> STR_1(7), 
  2504 ;;  ap              1   16[BANK0 ] PTR PTR void 
  2505 ;;		 -> sprintf@ap(1), 
  2506 ;; Auto vars:     Size  Location     Type
  2507 ;;  cfmt            2   18[BANK0 ] PTR unsigned char 
  2508 ;;		 -> STR_1(7), 
  2509 ;; Return value:  Size  Location     Type
  2510 ;;                  2   12[BANK0 ] int 
  2511 ;; Registers used:
  2512 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2513 ;; Tracked objects:
  2514 ;;		On entry : 0/0
  2515 ;;		On exit  : 0/0
  2516 ;;		Unchanged: 0/0
  2517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2518 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2519 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2520 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2521 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2522 ;;Total ram usage:        8 bytes
  2523 ;; Hardware stack levels used: 1
  2524 ;; Hardware stack levels required when called: 5
  2525 ;; This function calls:
  2526 ;;		_vfpfcnvrt
  2527 ;; This function is called by:
  2528 ;;		_sprintf
  2529 ;; This function uses a non-reentrant model
  2530 ;;
  2531                           
  2532     033D                     _vfprintf:	
  2533                           ;psect for function _vfprintf
  2534                           
  2535     033D                     l1616:	
  2536                           ;incstack = 0
  2537                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2538                           
  2539                           
  2540                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  2541     033D  0020               	movlb	0	; select bank0
  2542     033E  082F               	movf	vfprintf@fmt+1,w
  2543     033F  00B3               	movwf	vfprintf@cfmt+1
  2544     0340  082E               	movf	vfprintf@fmt,w
  2545     0341  00B2               	movwf	vfprintf@cfmt
  2546                           
  2547                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2548     0342  2B4E               	goto	l1620
  2549     0343                     l1618:
  2550                           
  2551                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2552     0343  082D               	movf	vfprintf@fp+1,w
  2553     0344  00FB               	movwf	vfpfcnvrt@fp+1
  2554     0345  082C               	movf	vfprintf@fp,w
  2555     0346  00FA               	movwf	vfpfcnvrt@fp
  2556     0347  3032               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  2557     0348  00FC               	movwf	vfpfcnvrt@fmt
  2558     0349  0830               	movf	vfprintf@ap,w
  2559     034A  00FD               	movwf	vfpfcnvrt@ap
  2560     034B  3180  2023  3183   	fcall	_vfpfcnvrt
  2561     034E                     l1620:
  2562                           
  2563                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2564     034E  0020               	movlb	0	; select bank0
  2565     034F  0832               	movf	vfprintf@cfmt,w
  2566     0350  0084               	movwf	4
  2567     0351  0833               	movf	vfprintf@cfmt+1,w
  2568     0352  0085               	movwf	5
  2569     0353  0012               	moviw fsr0++
  2570     0354  1D03               	btfss	3,2
  2571     0355  2B57               	goto	u831
  2572     0356  2B58               	goto	u830
  2573     0357                     u831:
  2574     0357  2B43               	goto	l1618
  2575     0358                     u830:
  2576     0358                     l1622:
  2577                           
  2578                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  2579     0358  01AC               	clrf	?_vfprintf
  2580     0359  01AD               	clrf	?_vfprintf+1
  2581     035A                     l910:
  2582     035A  0008               	return
  2583     035B                     __end_of_vfprintf:
  2584                           
  2585                           	psect	text3
  2586     0023                     __ptext3:	
  2587 ;; *************** function _vfpfcnvrt *****************
  2588 ;; Defined at:
  2589 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  2590 ;; Parameters:    Size  Location     Type
  2591 ;;  fp              2   10[COMMON] PTR struct _IO_FILE
  2592 ;;		 -> sprintf@f(11), 
  2593 ;;  fmt             1   12[COMMON] PTR PTR unsigned char 
  2594 ;;		 -> vfprintf@cfmt(2), 
  2595 ;;  ap              1   13[COMMON] PTR PTR void 
  2596 ;;		 -> sprintf@ap(1), 
  2597 ;; Auto vars:     Size  Location     Type
  2598 ;;  convarg         4    7[BANK0 ] struct .
  2599 ;;  cp              2    5[BANK0 ] PTR unsigned char 
  2600 ;;		 -> STR_1(7), 
  2601 ;;  c               1   11[BANK0 ] unsigned char 
  2602 ;;  done            1    4[BANK0 ] _Bool 
  2603 ;; Return value:  Size  Location     Type
  2604 ;;                  1    wreg      void 
  2605 ;; Registers used:
  2606 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2607 ;; Tracked objects:
  2608 ;;		On entry : 0/0
  2609 ;;		On exit  : 0/0
  2610 ;;		Unchanged: 0/0
  2611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2612 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2613 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2614 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2615 ;;      Totals:         4      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2616 ;;Total ram usage:       16 bytes
  2617 ;; Hardware stack levels used: 1
  2618 ;; Hardware stack levels required when called: 4
  2619 ;; This function calls:
  2620 ;;		___awdiv
  2621 ;;		___awmod
  2622 ;;		_abs
  2623 ;;		_fputc
  2624 ;; This function is called by:
  2625 ;;		_vfprintf
  2626 ;; This function uses a non-reentrant model
  2627 ;;
  2628                           
  2629     0023                     _vfpfcnvrt:	
  2630                           ;psect for function _vfpfcnvrt
  2631                           
  2632     0023                     l1554:	
  2633                           ;incstack = 0
  2634                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2635                           
  2636                           
  2637                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  2638     0023  087C               	movf	vfpfcnvrt@fmt,w
  2639     0024  0086               	movwf	6
  2640     0025  0187               	clrf	7
  2641     0026  3F40               	moviw [0]fsr1
  2642     0027  0020               	movlb	0	; select bank0
  2643     0028  00A0               	movwf	??_vfpfcnvrt
  2644     0029  3F41               	moviw [1]fsr1
  2645     002A  00A1               	movwf	??_vfpfcnvrt+1
  2646     002B  0820               	movf	??_vfpfcnvrt,w
  2647     002C  0084               	movwf	4
  2648     002D  0821               	movf	??_vfpfcnvrt+1,w
  2649     002E  0085               	movwf	5
  2650     002F  0012               	moviw fsr0++
  2651     0030  3A25               	xorlw	37
  2652     0031  1D03               	btfss	3,2
  2653     0032  2834               	goto	u721
  2654     0033  2835               	goto	u720
  2655     0034                     u721:
  2656     0034  28F5               	goto	l1600
  2657     0035                     u720:
  2658     0035                     l1556:
  2659                           
  2660                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  2661     0035  087C               	movf	vfpfcnvrt@fmt,w
  2662     0036  0086               	movwf	6
  2663     0037  0187               	clrf	7
  2664     0038  3001               	movlw	1
  2665     0039  0781               	addwf	1,f
  2666     003A  3141               	addfsr 1,1
  2667     003B  1803               	skipnc
  2668     003C  0A81               	incf	1,f
  2669     003D                     l1558:
  2670                           
  2671                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  2672     003D  0021               	movlb	1	; select bank1
  2673     003E  01C0               	clrf	_width^(0+128)
  2674     003F  01C1               	clrf	(_width+1)^(0+128)
  2675     0040  3000               	movlw	0
  2676     0041  0020               	movlb	0	; select bank0
  2677     0042  00EF               	movwf	_flags
  2678     0043                     l1560:
  2679                           
  2680                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  2681     0043  30FF               	movlw	255
  2682     0044  0021               	movlb	1	; select bank1
  2683     0045  00C2               	movwf	_prec^(0+128)
  2684     0046  30FF               	movlw	255
  2685     0047  00C3               	movwf	(_prec^(0+128)+1)
  2686     0048                     l1562:
  2687                           
  2688                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  2689     0048  087C               	movf	vfpfcnvrt@fmt,w
  2690     0049  0086               	movwf	6
  2691     004A  0187               	clrf	7
  2692     004B  3F40               	moviw [0]fsr1
  2693     004C  0020               	movlb	0	; select bank0
  2694     004D  00A5               	movwf	vfpfcnvrt@cp
  2695     004E  3F41               	moviw [1]fsr1
  2696     004F  00A6               	movwf	vfpfcnvrt@cp+1
  2697     0050                     l1564:
  2698                           
  2699                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  2700     0050  0825               	movf	vfpfcnvrt@cp,w
  2701     0051  0084               	movwf	4
  2702     0052  0826               	movf	vfpfcnvrt@cp+1,w
  2703     0053  0085               	movwf	5
  2704     0054  0012               	moviw fsr0++
  2705     0055  3A64               	xorlw	100
  2706     0056  1903               	btfsc	3,2
  2707     0057  2859               	goto	u731
  2708     0058  285A               	goto	u730
  2709     0059                     u731:
  2710     0059  2864               	goto	l1568
  2711     005A                     u730:
  2712     005A                     l1566:
  2713     005A  0825               	movf	vfpfcnvrt@cp,w
  2714     005B  0084               	movwf	4
  2715     005C  0826               	movf	vfpfcnvrt@cp+1,w
  2716     005D  0085               	movwf	5
  2717     005E  0012               	moviw fsr0++
  2718     005F  3A69               	xorlw	105
  2719     0060  1D03               	btfss	3,2
  2720     0061  2863               	goto	u741
  2721     0062  2864               	goto	u740
  2722     0063                     u741:
  2723     0063  28EC               	goto	l1596
  2724     0064                     u740:
  2725     0064                     l1568:
  2726                           
  2727                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2728     0064  087D               	movf	vfpfcnvrt@ap,w
  2729     0065  0086               	movwf	6
  2730     0066  0187               	clrf	7
  2731     0067  0801               	movf	1,w
  2732     0068  0084               	movwf	4
  2733     0069  0185               	clrf	5
  2734     006A  3002               	movlw	2
  2735     006B  0781               	addwf	1,f
  2736     006C  3F00               	moviw [0]fsr0
  2737     006D  00A7               	movwf	vfpfcnvrt@convarg
  2738     006E  3F01               	moviw [1]fsr0
  2739     006F  00A8               	movwf	vfpfcnvrt@convarg+1
  2740     0070                     l1570:
  2741                           
  2742                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  2743     0070  0825               	movf	vfpfcnvrt@cp,w
  2744     0071  3E01               	addlw	1
  2745     0072  00A0               	movwf	??_vfpfcnvrt
  2746     0073  3000               	movlw	0
  2747     0074  3D26               	addwfc	vfpfcnvrt@cp+1,w
  2748     0075  00A1               	movwf	??_vfpfcnvrt+1
  2749     0076  087C               	movf	vfpfcnvrt@fmt,w
  2750     0077  0086               	movwf	6
  2751     0078  0187               	clrf	7
  2752     0079  0820               	movf	??_vfpfcnvrt,w
  2753     007A  3FC0               	movwi [0]fsr1
  2754     007B  0821               	movf	??_vfpfcnvrt+1,w
  2755     007C  3FC1               	movwi [1]fsr1
  2756     007D                     l1572:
  2757                           
  2758                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  2759     007D  3020               	movlw	32
  2760     007E  00AB               	movwf	vfpfcnvrt@c
  2761     007F                     l1574:
  2762                           
  2763                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  2764     007F  1BA8               	btfsc	vfpfcnvrt@convarg+1,7
  2765     0080  2882               	goto	u751
  2766     0081  2884               	goto	u750
  2767     0082                     u751:
  2768     0082  3001               	movlw	1
  2769     0083  2885               	goto	u760
  2770     0084                     u750:
  2771     0084  3000               	movlw	0
  2772     0085                     u760:
  2773     0085  00A4               	movwf	vfpfcnvrt@done
  2774     0086                     l1576:
  2775                           
  2776                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  2777     0086  3001               	movlw	1
  2778     0087  02AB               	subwf	vfpfcnvrt@c,f
  2779     0088  082B               	movf	vfpfcnvrt@c,w
  2780     0089  3EA0               	addlw	(low (_dbuf| 0))& (0+255)
  2781     008A  0086               	movwf	6
  2782     008B  0187               	clrf	7
  2783     008C  300A               	movlw	10
  2784     008D  00F0               	movwf	___awmod@divisor
  2785     008E  3000               	movlw	0
  2786     008F  00F1               	movwf	___awmod@divisor+1
  2787     0090  0828               	movf	vfpfcnvrt@convarg+1,w
  2788     0091  00F3               	movwf	___awmod@dividend+1
  2789     0092  0827               	movf	vfpfcnvrt@convarg,w
  2790     0093  00F2               	movwf	___awmod@dividend
  2791     0094  3182  2226  3180   	fcall	___awmod
  2792     0097  0871               	movf	?___awmod+1,w
  2793     0098  00F7               	movwf	abs@a+1
  2794     0099  0870               	movf	?___awmod,w
  2795     009A  00F6               	movwf	abs@a
  2796     009B  3183  23F1  3180   	fcall	_abs
  2797     009E  0876               	movf	?_abs,w
  2798     009F  3E30               	addlw	48
  2799     00A0  0081               	movwf	1
  2800     00A1                     l1578:
  2801                           
  2802                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  2803     00A1  300A               	movlw	10
  2804     00A2  00F0               	movwf	___awdiv@divisor
  2805     00A3  3000               	movlw	0
  2806     00A4  00F1               	movwf	___awdiv@divisor+1
  2807     00A5  0020               	movlb	0	; select bank0
  2808     00A6  0828               	movf	vfpfcnvrt@convarg+1,w
  2809     00A7  00F3               	movwf	___awdiv@dividend+1
  2810     00A8  0827               	movf	vfpfcnvrt@convarg,w
  2811     00A9  00F2               	movwf	___awdiv@dividend
  2812     00AA  3181  2174  3180   	fcall	___awdiv
  2813     00AD  0871               	movf	?___awdiv+1,w
  2814     00AE  0020               	movlb	0	; select bank0
  2815     00AF  00A8               	movwf	vfpfcnvrt@convarg+1
  2816     00B0  0870               	movf	?___awdiv,w
  2817     00B1  00A7               	movwf	vfpfcnvrt@convarg
  2818     00B2                     l1580:
  2819                           
  2820                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  2821     00B2  0827               	movf	vfpfcnvrt@convarg,w
  2822     00B3  0428               	iorwf	vfpfcnvrt@convarg+1,w
  2823     00B4  1903               	btfsc	3,2
  2824     00B5  28B7               	goto	u771
  2825     00B6  28B8               	goto	u770
  2826     00B7                     u771:
  2827     00B7  28BD               	goto	l1584
  2828     00B8                     u770:
  2829     00B8                     l1582:
  2830     00B8  082B               	movf	vfpfcnvrt@c,w
  2831     00B9  1D03               	btfss	3,2
  2832     00BA  28BC               	goto	u781
  2833     00BB  28BD               	goto	u780
  2834     00BC                     u781:
  2835     00BC  2886               	goto	l1576
  2836     00BD                     u780:
  2837     00BD                     l1584:
  2838                           
  2839                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  2840     00BD  082B               	movf	vfpfcnvrt@c,w
  2841     00BE  1903               	btfsc	3,2
  2842     00BF  28C1               	goto	u791
  2843     00C0  28C2               	goto	u790
  2844     00C1                     u791:
  2845     00C1  28E5               	goto	l1594
  2846     00C2                     u790:
  2847     00C2                     l1586:
  2848     00C2  0824               	movf	vfpfcnvrt@done,w
  2849     00C3  1903               	btfsc	3,2
  2850     00C4  28C6               	goto	u801
  2851     00C5  28C7               	goto	u800
  2852     00C6                     u801:
  2853     00C6  28E5               	goto	l1594
  2854     00C7                     u800:
  2855     00C7                     l1588:
  2856                           
  2857                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  2858     00C7  3001               	movlw	1
  2859     00C8  02AB               	subwf	vfpfcnvrt@c,f
  2860     00C9  082B               	movf	vfpfcnvrt@c,w
  2861     00CA  3EA0               	addlw	(low (_dbuf| 0))& (0+255)
  2862     00CB  0086               	movwf	6
  2863     00CC  0187               	clrf	7
  2864     00CD  302D               	movlw	45
  2865     00CE  0081               	movwf	1
  2866     00CF  28E5               	goto	l1594
  2867     00D0                     l1590:
  2868                           
  2869                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  2870     00D0  082B               	movf	vfpfcnvrt@c,w
  2871     00D1  3EA0               	addlw	(low (_dbuf| 0))& (0+255)
  2872     00D2  0086               	movwf	6
  2873     00D3  0187               	clrf	7
  2874     00D4  0801               	movf	1,w
  2875     00D5  00A0               	movwf	??_vfpfcnvrt
  2876     00D6  01A1               	clrf	??_vfpfcnvrt+1
  2877     00D7  0820               	movf	??_vfpfcnvrt,w
  2878     00D8  00F0               	movwf	fputc@c
  2879     00D9  0821               	movf	??_vfpfcnvrt+1,w
  2880     00DA  00F1               	movwf	fputc@c+1
  2881     00DB  087B               	movf	vfpfcnvrt@fp+1,w
  2882     00DC  00F3               	movwf	fputc@fp+1
  2883     00DD  087A               	movf	vfpfcnvrt@fp,w
  2884     00DE  00F2               	movwf	fputc@fp
  2885     00DF  3181  21CF  3180   	fcall	_fputc
  2886     00E2                     l1592:
  2887     00E2  3001               	movlw	1
  2888     00E3  0020               	movlb	0	; select bank0
  2889     00E4  07AB               	addwf	vfpfcnvrt@c,f
  2890     00E5                     l1594:
  2891                           
  2892                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  2893     00E5  3020               	movlw	32
  2894     00E6  062B               	xorwf	vfpfcnvrt@c,w
  2895     00E7  1D03               	btfss	3,2
  2896     00E8  28EA               	goto	u811
  2897     00E9  28EB               	goto	u810
  2898     00EA                     u811:
  2899     00EA  28D0               	goto	l1590
  2900     00EB                     u810:
  2901     00EB  290F               	goto	l904
  2902     00EC                     l1596:
  2903                           
  2904                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  2905     00EC  087C               	movf	vfpfcnvrt@fmt,w
  2906     00ED  0086               	movwf	6
  2907     00EE  0187               	clrf	7
  2908     00EF  3001               	movlw	1
  2909     00F0  0781               	addwf	1,f
  2910     00F1  3141               	addfsr 1,1
  2911     00F2  1803               	skipnc
  2912     00F3  0A81               	incf	1,f
  2913     00F4  290F               	goto	l904
  2914     00F5                     l1600:
  2915                           
  2916                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  2917     00F5  087C               	movf	vfpfcnvrt@fmt,w
  2918     00F6  0086               	movwf	6
  2919     00F7  0187               	clrf	7
  2920     00F8  3F40               	moviw [0]fsr1
  2921     00F9  00A0               	movwf	??_vfpfcnvrt
  2922     00FA  3F41               	moviw [1]fsr1
  2923     00FB  00A1               	movwf	??_vfpfcnvrt+1
  2924     00FC  0820               	movf	??_vfpfcnvrt,w
  2925     00FD  0084               	movwf	4
  2926     00FE  0821               	movf	??_vfpfcnvrt+1,w
  2927     00FF  0085               	movwf	5
  2928     0100  0800               	movf	0,w	;code access
  2929     0101  00A2               	movwf	??_vfpfcnvrt+2
  2930     0102  01A3               	clrf	??_vfpfcnvrt+3
  2931     0103  0822               	movf	??_vfpfcnvrt+2,w
  2932     0104  00F0               	movwf	fputc@c
  2933     0105  0823               	movf	??_vfpfcnvrt+3,w
  2934     0106  00F1               	movwf	fputc@c+1
  2935     0107  087B               	movf	vfpfcnvrt@fp+1,w
  2936     0108  00F3               	movwf	fputc@fp+1
  2937     0109  087A               	movf	vfpfcnvrt@fp,w
  2938     010A  00F2               	movwf	fputc@fp
  2939     010B  3181  21CF  3180   	fcall	_fputc
  2940     010E  28EC               	goto	l1596
  2941     010F                     l904:
  2942     010F  0008               	return
  2943     0110                     __end_of_vfpfcnvrt:
  2944                           
  2945                           	psect	text4
  2946     01CF                     __ptext4:	
  2947 ;; *************** function _fputc *****************
  2948 ;; Defined at:
  2949 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_fputc.c"
  2950 ;; Parameters:    Size  Location     Type
  2951 ;;  c               2    0[COMMON] int 
  2952 ;;  fp              2    2[COMMON] PTR struct _IO_FILE
  2953 ;;		 -> sprintf@f(11), 
  2954 ;; Auto vars:     Size  Location     Type
  2955 ;;		None
  2956 ;; Return value:  Size  Location     Type
  2957 ;;                  2    0[COMMON] int 
  2958 ;; Registers used:
  2959 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2960 ;; Tracked objects:
  2961 ;;		On entry : 0/0
  2962 ;;		On exit  : 0/0
  2963 ;;		Unchanged: 0/0
  2964 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2965 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2966 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2967 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2968 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2969 ;;Total ram usage:        9 bytes
  2970 ;; Hardware stack levels used: 1
  2971 ;; Hardware stack levels required when called: 3
  2972 ;; This function calls:
  2973 ;;		_putch
  2974 ;; This function is called by:
  2975 ;;		_vfpfcnvrt
  2976 ;; This function uses a non-reentrant model
  2977 ;;
  2978                           
  2979     01CF                     _fputc:	
  2980                           ;psect for function _fputc
  2981                           
  2982     01CF                     l1530:	
  2983                           ;incstack = 0
  2984                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2985                           
  2986     01CF  0872               	movf	fputc@fp,w
  2987     01D0  0473               	iorwf	fputc@fp+1,w
  2988     01D1  1903               	btfsc	3,2
  2989     01D2  29D4               	goto	u671
  2990     01D3  29D5               	goto	u670
  2991     01D4                     u671:
  2992     01D4  29DB               	goto	l1534
  2993     01D5                     u670:
  2994     01D5                     l1532:
  2995     01D5  0872               	movf	fputc@fp,w
  2996     01D6  0473               	iorwf	fputc@fp+1,w
  2997     01D7  1D03               	btfss	3,2
  2998     01D8  29DA               	goto	u681
  2999     01D9  29DB               	goto	u680
  3000     01DA                     u681:
  3001     01DA  29E0               	goto	l1536
  3002     01DB                     u680:
  3003     01DB                     l1534:
  3004     01DB  0870               	movf	fputc@c,w
  3005     01DC  3184  244B  3181   	fcall	_putch
  3006     01DF  2A25               	goto	l929
  3007     01E0                     l1536:
  3008     01E0  0872               	movf	fputc@fp,w
  3009     01E1  0086               	movwf	6
  3010     01E2  0187               	clrf	7
  3011     01E3  3149               	addfsr 1,9
  3012     01E4  0016               	moviw fsr1++
  3013     01E5  0401               	iorwf	1,w
  3014     01E6  1903               	btfsc	3,2
  3015     01E7  29E9               	goto	u691
  3016     01E8  29EA               	goto	u690
  3017     01E9                     u691:
  3018     01E9  2A08               	goto	l1540
  3019     01EA                     u690:
  3020     01EA                     l1538:
  3021     01EA  0872               	movf	fputc@fp,w
  3022     01EB  0086               	movwf	6
  3023     01EC  0187               	clrf	7
  3024     01ED  3149               	addfsr 1,9
  3025     01EE  3F40               	moviw [0]fsr1
  3026     01EF  00F4               	movwf	??_fputc
  3027     01F0  3F41               	moviw [1]fsr1
  3028     01F1  00F5               	movwf	??_fputc+1
  3029     01F2  0872               	movf	fputc@fp,w
  3030     01F3  0086               	movwf	6
  3031     01F4  0187               	clrf	7
  3032     01F5  3142               	addfsr 1,2
  3033     01F6  3F40               	moviw [0]fsr1
  3034     01F7  00F6               	movwf	??_fputc+2
  3035     01F8  3F41               	moviw [1]fsr1
  3036     01F9  00F7               	movwf	??_fputc+3
  3037     01FA  0877               	movf	??_fputc+3,w
  3038     01FB  3A80               	xorlw	128
  3039     01FC  00F8               	movwf	??_fputc+4
  3040     01FD  0875               	movf	??_fputc+1,w
  3041     01FE  3A80               	xorlw	128
  3042     01FF  0278               	subwf	??_fputc+4,w
  3043     0200  1D03               	skipz
  3044     0201  2A04               	goto	u705
  3045     0202  0874               	movf	??_fputc,w
  3046     0203  0276               	subwf	??_fputc+2,w
  3047     0204                     u705:
  3048     0204  1803               	skipnc
  3049     0205  2A07               	goto	u701
  3050     0206  2A08               	goto	u700
  3051     0207                     u701:
  3052     0207  2A25               	goto	l929
  3053     0208                     u700:
  3054     0208                     l1540:
  3055     0208  0872               	movf	fputc@fp,w
  3056     0209  0086               	movwf	6
  3057     020A  0187               	clrf	7
  3058     020B  3142               	addfsr 1,2
  3059     020C  0872               	movf	fputc@fp,w
  3060     020D  0084               	movwf	4
  3061     020E  0873               	movf	fputc@fp+1,w
  3062     020F  0085               	movwf	5
  3063     0210  3F00               	moviw [0]fsr0
  3064     0211  00F4               	movwf	??_fputc
  3065     0212  3F01               	moviw [1]fsr0
  3066     0213  00F5               	movwf	??_fputc+1
  3067     0214  3F40               	moviw [0]fsr1
  3068     0215  0774               	addwf	??_fputc,w
  3069     0216  0084               	movwf	4
  3070     0217  3F41               	moviw [1]fsr1
  3071     0218  3D75               	addwfc	??_fputc+1,w
  3072     0219  0085               	movwf	5
  3073     021A  0870               	movf	fputc@c,w
  3074     021B  0080               	movwf	0
  3075     021C                     l1542:
  3076     021C  0872               	movf	fputc@fp,w
  3077     021D  0086               	movwf	6
  3078     021E  0187               	clrf	7
  3079     021F  3142               	addfsr 1,2
  3080     0220  3001               	movlw	1
  3081     0221  0781               	addwf	1,f
  3082     0222  3141               	addfsr 1,1
  3083     0223  1803               	skipnc
  3084     0224  0A81               	incf	1,f
  3085     0225                     l929:
  3086     0225  0008               	return
  3087     0226                     __end_of_fputc:
  3088                           
  3089                           	psect	text5
  3090     044B                     __ptext5:	
  3091 ;; *************** function _putch *****************
  3092 ;; Defined at:
  3093 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\putch.c"
  3094 ;; Parameters:    Size  Location     Type
  3095 ;;  c               1    wreg     unsigned char 
  3096 ;; Auto vars:     Size  Location     Type
  3097 ;;  c               1    0[COMMON] unsigned char 
  3098 ;; Return value:  Size  Location     Type
  3099 ;;                  1    wreg      void 
  3100 ;; Registers used:
  3101 ;;		wreg
  3102 ;; Tracked objects:
  3103 ;;		On entry : 0/0
  3104 ;;		On exit  : 0/0
  3105 ;;		Unchanged: 0/0
  3106 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3107 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3108 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3109 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3110 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3111 ;;Total ram usage:        0 bytes
  3112 ;; Hardware stack levels used: 1
  3113 ;; Hardware stack levels required when called: 2
  3114 ;; This function calls:
  3115 ;;		Nothing
  3116 ;; This function is called by:
  3117 ;;		_fputc
  3118 ;; This function uses a non-reentrant model
  3119 ;;
  3120                           
  3121     044B                     _putch:	
  3122                           ;psect for function _putch
  3123                           
  3124     044B                     l940:	
  3125                           ;incstack = 0
  3126                           ; Regs used in _putch: [wreg]
  3127                           
  3128     044B  0008               	return
  3129     044C                     __end_of_putch:
  3130                           
  3131                           	psect	text6
  3132     03F1                     __ptext6:	
  3133 ;; *************** function _abs *****************
  3134 ;; Defined at:
  3135 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\abs.c"
  3136 ;; Parameters:    Size  Location     Type
  3137 ;;  a               2    6[COMMON] int 
  3138 ;; Auto vars:     Size  Location     Type
  3139 ;;		None
  3140 ;; Return value:  Size  Location     Type
  3141 ;;                  2    6[COMMON] int 
  3142 ;; Registers used:
  3143 ;;		wreg, status,2, status,0
  3144 ;; Tracked objects:
  3145 ;;		On entry : 0/0
  3146 ;;		On exit  : 0/0
  3147 ;;		Unchanged: 0/0
  3148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3149 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3150 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3151 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3152 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3153 ;;Total ram usage:        4 bytes
  3154 ;; Hardware stack levels used: 1
  3155 ;; Hardware stack levels required when called: 2
  3156 ;; This function calls:
  3157 ;;		Nothing
  3158 ;; This function is called by:
  3159 ;;		_vfpfcnvrt
  3160 ;; This function uses a non-reentrant model
  3161 ;;
  3162                           
  3163     03F1                     _abs:	
  3164                           ;psect for function _abs
  3165                           
  3166     03F1                     l1546:	
  3167                           ;incstack = 0
  3168                           ; Regs used in _abs: [wreg+status,2+status,0]
  3169                           
  3170     03F1  1BF7               	btfsc	abs@a+1,7
  3171     03F2  2BF4               	goto	u711
  3172     03F3  2BF5               	goto	u710
  3173     03F4                     u711:
  3174     03F4  2BF6               	goto	l1550
  3175     03F5                     u710:
  3176     03F5                     l1548:
  3177     03F5  2C01               	goto	l917
  3178     03F6                     l1550:
  3179     03F6  0976               	comf	abs@a,w
  3180     03F7  00F8               	movwf	??_abs
  3181     03F8  0977               	comf	abs@a+1,w
  3182     03F9  00F9               	movwf	??_abs+1
  3183     03FA  0AF8               	incf	??_abs,f
  3184     03FB  1903               	skipnz
  3185     03FC  0AF9               	incf	??_abs+1,f
  3186     03FD  0878               	movf	??_abs,w
  3187     03FE  00F6               	movwf	?_abs
  3188     03FF  0879               	movf	??_abs+1,w
  3189     0400  00F7               	movwf	?_abs+1
  3190     0401                     l917:
  3191     0401  0008               	return
  3192     0402                     __end_of_abs:
  3193                           
  3194                           	psect	text7
  3195     0226                     __ptext7:	
  3196 ;; *************** function ___awmod *****************
  3197 ;; Defined at:
  3198 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awmod.c"
  3199 ;; Parameters:    Size  Location     Type
  3200 ;;  divisor         2    0[COMMON] int 
  3201 ;;  dividend        2    2[COMMON] int 
  3202 ;; Auto vars:     Size  Location     Type
  3203 ;;  sign            1    5[COMMON] unsigned char 
  3204 ;;  counter         1    4[COMMON] unsigned char 
  3205 ;; Return value:  Size  Location     Type
  3206 ;;                  2    0[COMMON] int 
  3207 ;; Registers used:
  3208 ;;		wreg, status,2, status,0
  3209 ;; Tracked objects:
  3210 ;;		On entry : 0/0
  3211 ;;		On exit  : 0/0
  3212 ;;		Unchanged: 0/0
  3213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3214 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3215 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3217 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3218 ;;Total ram usage:        6 bytes
  3219 ;; Hardware stack levels used: 1
  3220 ;; Hardware stack levels required when called: 2
  3221 ;; This function calls:
  3222 ;;		Nothing
  3223 ;; This function is called by:
  3224 ;;		_vfpfcnvrt
  3225 ;; This function uses a non-reentrant model
  3226 ;;
  3227                           
  3228     0226                     ___awmod:	
  3229                           ;psect for function ___awmod
  3230                           
  3231     0226                     l1492:	
  3232                           ;incstack = 0
  3233                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3234                           
  3235     0226  01F5               	clrf	___awmod@sign
  3236     0227                     l1494:
  3237     0227  1FF3               	btfss	___awmod@dividend+1,7
  3238     0228  2A2A               	goto	u581
  3239     0229  2A2B               	goto	u580
  3240     022A                     u581:
  3241     022A  2A32               	goto	l1500
  3242     022B                     u580:
  3243     022B                     l1496:
  3244     022B  09F2               	comf	___awmod@dividend,f
  3245     022C  09F3               	comf	___awmod@dividend+1,f
  3246     022D  0AF2               	incf	___awmod@dividend,f
  3247     022E  1903               	skipnz
  3248     022F  0AF3               	incf	___awmod@dividend+1,f
  3249     0230                     l1498:
  3250     0230  3001               	movlw	1
  3251     0231  00F5               	movwf	___awmod@sign
  3252     0232                     l1500:
  3253     0232  1FF1               	btfss	___awmod@divisor+1,7
  3254     0233  2A35               	goto	u591
  3255     0234  2A36               	goto	u590
  3256     0235                     u591:
  3257     0235  2A3B               	goto	l1504
  3258     0236                     u590:
  3259     0236                     l1502:
  3260     0236  09F0               	comf	___awmod@divisor,f
  3261     0237  09F1               	comf	___awmod@divisor+1,f
  3262     0238  0AF0               	incf	___awmod@divisor,f
  3263     0239  1903               	skipnz
  3264     023A  0AF1               	incf	___awmod@divisor+1,f
  3265     023B                     l1504:
  3266     023B  0870               	movf	___awmod@divisor,w
  3267     023C  0471               	iorwf	___awmod@divisor+1,w
  3268     023D  1903               	btfsc	3,2
  3269     023E  2A40               	goto	u601
  3270     023F  2A41               	goto	u600
  3271     0240                     u601:
  3272     0240  2A68               	goto	l1522
  3273     0241                     u600:
  3274     0241                     l1506:
  3275     0241  3001               	movlw	1
  3276     0242  00F4               	movwf	___awmod@counter
  3277     0243  2A4B               	goto	l1512
  3278     0244                     l1508:
  3279     0244  3001               	movlw	1
  3280     0245                     u615:
  3281     0245  35F0               	lslf	___awmod@divisor,f
  3282     0246  0DF1               	rlf	___awmod@divisor+1,f
  3283     0247  0B89               	decfsz	9,f
  3284     0248  2A45               	goto	u615
  3285     0249                     l1510:
  3286     0249  3001               	movlw	1
  3287     024A  07F4               	addwf	___awmod@counter,f
  3288     024B                     l1512:
  3289     024B  1FF1               	btfss	___awmod@divisor+1,7
  3290     024C  2A4E               	goto	u621
  3291     024D  2A4F               	goto	u620
  3292     024E                     u621:
  3293     024E  2A44               	goto	l1508
  3294     024F                     u620:
  3295     024F                     l1514:
  3296     024F  0871               	movf	___awmod@divisor+1,w
  3297     0250  0273               	subwf	___awmod@dividend+1,w
  3298     0251  1D03               	skipz
  3299     0252  2A55               	goto	u635
  3300     0253  0870               	movf	___awmod@divisor,w
  3301     0254  0272               	subwf	___awmod@dividend,w
  3302     0255                     u635:
  3303     0255  1C03               	skipc
  3304     0256  2A58               	goto	u631
  3305     0257  2A59               	goto	u630
  3306     0258                     u631:
  3307     0258  2A5D               	goto	l1518
  3308     0259                     u630:
  3309     0259                     l1516:
  3310     0259  0870               	movf	___awmod@divisor,w
  3311     025A  02F2               	subwf	___awmod@dividend,f
  3312     025B  0871               	movf	___awmod@divisor+1,w
  3313     025C  3BF3               	subwfb	___awmod@dividend+1,f
  3314     025D                     l1518:
  3315     025D  3001               	movlw	1
  3316     025E                     u645:
  3317     025E  36F1               	lsrf	___awmod@divisor+1,f
  3318     025F  0CF0               	rrf	___awmod@divisor,f
  3319     0260  0B89               	decfsz	9,f
  3320     0261  2A5E               	goto	u645
  3321     0262                     l1520:
  3322     0262  3001               	movlw	1
  3323     0263  02F4               	subwf	___awmod@counter,f
  3324     0264  1D03               	btfss	3,2
  3325     0265  2A67               	goto	u651
  3326     0266  2A68               	goto	u650
  3327     0267                     u651:
  3328     0267  2A4F               	goto	l1514
  3329     0268                     u650:
  3330     0268                     l1522:
  3331     0268  0875               	movf	___awmod@sign,w
  3332     0269  1903               	btfsc	3,2
  3333     026A  2A6C               	goto	u661
  3334     026B  2A6D               	goto	u660
  3335     026C                     u661:
  3336     026C  2A72               	goto	l1526
  3337     026D                     u660:
  3338     026D                     l1524:
  3339     026D  09F2               	comf	___awmod@dividend,f
  3340     026E  09F3               	comf	___awmod@dividend+1,f
  3341     026F  0AF2               	incf	___awmod@dividend,f
  3342     0270  1903               	skipnz
  3343     0271  0AF3               	incf	___awmod@dividend+1,f
  3344     0272                     l1526:
  3345     0272  0873               	movf	___awmod@dividend+1,w
  3346     0273  00F1               	movwf	?___awmod+1
  3347     0274  0872               	movf	___awmod@dividend,w
  3348     0275  00F0               	movwf	?___awmod
  3349     0276                     l569:
  3350     0276  0008               	return
  3351     0277                     __end_of___awmod:
  3352                           
  3353                           	psect	text8
  3354     0174                     __ptext8:	
  3355 ;; *************** function ___awdiv *****************
  3356 ;; Defined at:
  3357 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awdiv.c"
  3358 ;; Parameters:    Size  Location     Type
  3359 ;;  divisor         2    0[COMMON] int 
  3360 ;;  dividend        2    2[COMMON] int 
  3361 ;; Auto vars:     Size  Location     Type
  3362 ;;  quotient        2    6[COMMON] int 
  3363 ;;  sign            1    5[COMMON] unsigned char 
  3364 ;;  counter         1    4[COMMON] unsigned char 
  3365 ;; Return value:  Size  Location     Type
  3366 ;;                  2    0[COMMON] int 
  3367 ;; Registers used:
  3368 ;;		wreg, status,2, status,0
  3369 ;; Tracked objects:
  3370 ;;		On entry : 0/0
  3371 ;;		On exit  : 0/0
  3372 ;;		Unchanged: 0/0
  3373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3374 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3375 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3377 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3378 ;;Total ram usage:        8 bytes
  3379 ;; Hardware stack levels used: 1
  3380 ;; Hardware stack levels required when called: 2
  3381 ;; This function calls:
  3382 ;;		Nothing
  3383 ;; This function is called by:
  3384 ;;		_vfpfcnvrt
  3385 ;; This function uses a non-reentrant model
  3386 ;;
  3387                           
  3388     0174                     ___awdiv:	
  3389                           ;psect for function ___awdiv
  3390                           
  3391     0174                     l1448:	
  3392                           ;incstack = 0
  3393                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3394                           
  3395     0174  01F5               	clrf	___awdiv@sign
  3396     0175                     l1450:
  3397     0175  1FF1               	btfss	___awdiv@divisor+1,7
  3398     0176  2978               	goto	u481
  3399     0177  2979               	goto	u480
  3400     0178                     u481:
  3401     0178  2980               	goto	l1456
  3402     0179                     u480:
  3403     0179                     l1452:
  3404     0179  09F0               	comf	___awdiv@divisor,f
  3405     017A  09F1               	comf	___awdiv@divisor+1,f
  3406     017B  0AF0               	incf	___awdiv@divisor,f
  3407     017C  1903               	skipnz
  3408     017D  0AF1               	incf	___awdiv@divisor+1,f
  3409     017E                     l1454:
  3410     017E  3001               	movlw	1
  3411     017F  00F5               	movwf	___awdiv@sign
  3412     0180                     l1456:
  3413     0180  1FF3               	btfss	___awdiv@dividend+1,7
  3414     0181  2983               	goto	u491
  3415     0182  2984               	goto	u490
  3416     0183                     u491:
  3417     0183  298B               	goto	l1462
  3418     0184                     u490:
  3419     0184                     l1458:
  3420     0184  09F2               	comf	___awdiv@dividend,f
  3421     0185  09F3               	comf	___awdiv@dividend+1,f
  3422     0186  0AF2               	incf	___awdiv@dividend,f
  3423     0187  1903               	skipnz
  3424     0188  0AF3               	incf	___awdiv@dividend+1,f
  3425     0189                     l1460:
  3426     0189  3001               	movlw	1
  3427     018A  06F5               	xorwf	___awdiv@sign,f
  3428     018B                     l1462:
  3429     018B  01F6               	clrf	___awdiv@quotient
  3430     018C  01F7               	clrf	___awdiv@quotient+1
  3431     018D                     l1464:
  3432     018D  0870               	movf	___awdiv@divisor,w
  3433     018E  0471               	iorwf	___awdiv@divisor+1,w
  3434     018F  1903               	btfsc	3,2
  3435     0190  2992               	goto	u501
  3436     0191  2993               	goto	u500
  3437     0192                     u501:
  3438     0192  29C0               	goto	l1484
  3439     0193                     u500:
  3440     0193                     l1466:
  3441     0193  3001               	movlw	1
  3442     0194  00F4               	movwf	___awdiv@counter
  3443     0195  299D               	goto	l1472
  3444     0196                     l1468:
  3445     0196  3001               	movlw	1
  3446     0197                     u515:
  3447     0197  35F0               	lslf	___awdiv@divisor,f
  3448     0198  0DF1               	rlf	___awdiv@divisor+1,f
  3449     0199  0B89               	decfsz	9,f
  3450     019A  2997               	goto	u515
  3451     019B                     l1470:
  3452     019B  3001               	movlw	1
  3453     019C  07F4               	addwf	___awdiv@counter,f
  3454     019D                     l1472:
  3455     019D  1FF1               	btfss	___awdiv@divisor+1,7
  3456     019E  29A0               	goto	u521
  3457     019F  29A1               	goto	u520
  3458     01A0                     u521:
  3459     01A0  2996               	goto	l1468
  3460     01A1                     u520:
  3461     01A1                     l1474:
  3462     01A1  3001               	movlw	1
  3463     01A2                     u535:
  3464     01A2  35F6               	lslf	___awdiv@quotient,f
  3465     01A3  0DF7               	rlf	___awdiv@quotient+1,f
  3466     01A4  0B89               	decfsz	9,f
  3467     01A5  29A2               	goto	u535
  3468     01A6  0871               	movf	___awdiv@divisor+1,w
  3469     01A7  0273               	subwf	___awdiv@dividend+1,w
  3470     01A8  1D03               	skipz
  3471     01A9  29AC               	goto	u545
  3472     01AA  0870               	movf	___awdiv@divisor,w
  3473     01AB  0272               	subwf	___awdiv@dividend,w
  3474     01AC                     u545:
  3475     01AC  1C03               	skipc
  3476     01AD  29AF               	goto	u541
  3477     01AE  29B0               	goto	u540
  3478     01AF                     u541:
  3479     01AF  29B5               	goto	l1480
  3480     01B0                     u540:
  3481     01B0                     l1476:
  3482     01B0  0870               	movf	___awdiv@divisor,w
  3483     01B1  02F2               	subwf	___awdiv@dividend,f
  3484     01B2  0871               	movf	___awdiv@divisor+1,w
  3485     01B3  3BF3               	subwfb	___awdiv@dividend+1,f
  3486     01B4                     l1478:
  3487     01B4  1476               	bsf	___awdiv@quotient,0
  3488     01B5                     l1480:
  3489     01B5  3001               	movlw	1
  3490     01B6                     u555:
  3491     01B6  36F1               	lsrf	___awdiv@divisor+1,f
  3492     01B7  0CF0               	rrf	___awdiv@divisor,f
  3493     01B8  0B89               	decfsz	9,f
  3494     01B9  29B6               	goto	u555
  3495     01BA                     l1482:
  3496     01BA  3001               	movlw	1
  3497     01BB  02F4               	subwf	___awdiv@counter,f
  3498     01BC  1D03               	btfss	3,2
  3499     01BD  29BF               	goto	u561
  3500     01BE  29C0               	goto	u560
  3501     01BF                     u561:
  3502     01BF  29A1               	goto	l1474
  3503     01C0                     u560:
  3504     01C0                     l1484:
  3505     01C0  0875               	movf	___awdiv@sign,w
  3506     01C1  1903               	btfsc	3,2
  3507     01C2  29C4               	goto	u571
  3508     01C3  29C5               	goto	u570
  3509     01C4                     u571:
  3510     01C4  29CA               	goto	l1488
  3511     01C5                     u570:
  3512     01C5                     l1486:
  3513     01C5  09F6               	comf	___awdiv@quotient,f
  3514     01C6  09F7               	comf	___awdiv@quotient+1,f
  3515     01C7  0AF6               	incf	___awdiv@quotient,f
  3516     01C8  1903               	skipnz
  3517     01C9  0AF7               	incf	___awdiv@quotient+1,f
  3518     01CA                     l1488:
  3519     01CA  0877               	movf	___awdiv@quotient+1,w
  3520     01CB  00F1               	movwf	?___awdiv+1
  3521     01CC  0876               	movf	___awdiv@quotient,w
  3522     01CD  00F0               	movwf	?___awdiv
  3523     01CE                     l556:
  3524     01CE  0008               	return
  3525     01CF                     __end_of___awdiv:
  3526                           
  3527                           	psect	text9
  3528     0402                     __ptext9:	
  3529 ;; *************** function _SYSTEM_Initialize *****************
  3530 ;; Defined at:
  3531 ;;		line 50 in file "mcc_generated_files/mcc.c"
  3532 ;; Parameters:    Size  Location     Type
  3533 ;;		None
  3534 ;; Auto vars:     Size  Location     Type
  3535 ;;		None
  3536 ;; Return value:  Size  Location     Type
  3537 ;;                  1    wreg      void 
  3538 ;; Registers used:
  3539 ;;		status,2, status,0, pclath, cstack
  3540 ;; Tracked objects:
  3541 ;;		On entry : 0/0
  3542 ;;		On exit  : 0/0
  3543 ;;		Unchanged: 0/0
  3544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3545 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3546 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3548 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3549 ;;Total ram usage:        0 bytes
  3550 ;; Hardware stack levels used: 1
  3551 ;; Hardware stack levels required when called: 3
  3552 ;; This function calls:
  3553 ;;		_OSCILLATOR_Initialize
  3554 ;;		_PIN_MANAGER_Initialize
  3555 ;;		_PWM1_Initialize
  3556 ;;		_PWM2_Initialize
  3557 ;;		_WDT_Initialize
  3558 ;; This function is called by:
  3559 ;;		_main
  3560 ;; This function uses a non-reentrant model
  3561 ;;
  3562                           
  3563     0402                     _SYSTEM_Initialize:	
  3564                           ;psect for function _SYSTEM_Initialize
  3565                           
  3566     0402                     l1236:	
  3567                           ;incstack = 0
  3568                           ; Regs used in _SYSTEM_Initialize: [status,2+status,0+pclath+cstack]
  3569                           
  3570                           
  3571                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  3572     0402  3183  235B  3184   	fcall	_PIN_MANAGER_Initialize
  3573                           
  3574                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  3575     0405  3184  242E  3184   	fcall	_OSCILLATOR_Initialize
  3576                           
  3577                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  3578     0408  3184  2447  3184   	fcall	_WDT_Initialize
  3579                           
  3580                           ;mcc_generated_files/mcc.c: 56:     PWM1_Initialize();
  3581     040B  3183  23AF  3184   	fcall	_PWM1_Initialize
  3582                           
  3583                           ;mcc_generated_files/mcc.c: 57:     PWM2_Initialize();
  3584     040E  3183  2396  3184   	fcall	_PWM2_Initialize
  3585     0411                     l183:
  3586     0411  0008               	return
  3587     0412                     __end_of_SYSTEM_Initialize:
  3588                           
  3589                           	psect	text10
  3590     0447                     __ptext10:	
  3591 ;; *************** function _WDT_Initialize *****************
  3592 ;; Defined at:
  3593 ;;		line 74 in file "mcc_generated_files/mcc.c"
  3594 ;; Parameters:    Size  Location     Type
  3595 ;;		None
  3596 ;; Auto vars:     Size  Location     Type
  3597 ;;		None
  3598 ;; Return value:  Size  Location     Type
  3599 ;;                  1    wreg      void 
  3600 ;; Registers used:
  3601 ;;		None
  3602 ;; Tracked objects:
  3603 ;;		On entry : 0/0
  3604 ;;		On exit  : 0/0
  3605 ;;		Unchanged: 0/0
  3606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3610 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3611 ;;Total ram usage:        0 bytes
  3612 ;; Hardware stack levels used: 1
  3613 ;; Hardware stack levels required when called: 2
  3614 ;; This function calls:
  3615 ;;		Nothing
  3616 ;; This function is called by:
  3617 ;;		_SYSTEM_Initialize
  3618 ;; This function uses a non-reentrant model
  3619 ;;
  3620                           
  3621     0447                     _WDT_Initialize:	
  3622                           ;psect for function _WDT_Initialize
  3623                           
  3624     0447                     l1206:	
  3625                           ;incstack = 0
  3626                           ; Regs used in _WDT_Initialize: []
  3627                           
  3628                           
  3629                           ;mcc_generated_files/mcc.c: 77:     WDTCON = 0x10;
  3630     0447  3010               	movlw	16
  3631     0448  0021               	movlb	1	; select bank1
  3632     0449  0097               	movwf	23	;volatile
  3633     044A                     l192:
  3634     044A  0008               	return
  3635     044B                     __end_of_WDT_Initialize:
  3636                           
  3637                           	psect	text11
  3638     0396                     __ptext11:	
  3639 ;; *************** function _PWM2_Initialize *****************
  3640 ;; Defined at:
  3641 ;;		line 58 in file "mcc_generated_files/pwm2.c"
  3642 ;; Parameters:    Size  Location     Type
  3643 ;;		None
  3644 ;; Auto vars:     Size  Location     Type
  3645 ;;		None
  3646 ;; Return value:  Size  Location     Type
  3647 ;;                  1    wreg      void 
  3648 ;; Registers used:
  3649 ;;		status,2
  3650 ;; Tracked objects:
  3651 ;;		On entry : 0/0
  3652 ;;		On exit  : 0/0
  3653 ;;		Unchanged: 0/0
  3654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3658 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3659 ;;Total ram usage:        0 bytes
  3660 ;; Hardware stack levels used: 1
  3661 ;; Hardware stack levels required when called: 2
  3662 ;; This function calls:
  3663 ;;		Nothing
  3664 ;; This function is called by:
  3665 ;;		_SYSTEM_Initialize
  3666 ;; This function uses a non-reentrant model
  3667 ;;
  3668                           
  3669     0396                     _PWM2_Initialize:	
  3670                           ;psect for function _PWM2_Initialize
  3671                           
  3672     0396                     l1170:	
  3673                           ;incstack = 0
  3674                           ; Regs used in _PWM2_Initialize: [status,2]
  3675                           
  3676                           
  3677                           ;mcc_generated_files/pwm2.c: 63:     PWM2INTE = 0x00;
  3678     0396  003B               	movlb	27	; select bank27
  3679     0397  01AC               	clrf	44	;volatile
  3680                           
  3681                           ;mcc_generated_files/pwm2.c: 66:     PWM2INTF = 0x00;
  3682     0398  01AD               	clrf	45	;volatile
  3683     0399                     l1172:
  3684                           
  3685                           ;mcc_generated_files/pwm2.c: 69:     PWM2CLKCON = 0x60;
  3686     0399  3060               	movlw	96
  3687     039A  00AE               	movwf	46	;volatile
  3688                           
  3689                           ;mcc_generated_files/pwm2.c: 72:     PWM2LDCON = 0x00;
  3690     039B  01AF               	clrf	47	;volatile
  3691                           
  3692                           ;mcc_generated_files/pwm2.c: 75:     PWM2OFCON = 0x00;
  3693     039C  01B0               	clrf	48	;volatile
  3694                           
  3695                           ;mcc_generated_files/pwm2.c: 78:     PWM2PHH = 0x00;
  3696     039D  01A2               	clrf	34	;volatile
  3697                           
  3698                           ;mcc_generated_files/pwm2.c: 81:     PWM2PHL = 0x00;
  3699     039E  01A1               	clrf	33	;volatile
  3700     039F                     l1174:
  3701                           
  3702                           ;mcc_generated_files/pwm2.c: 84:     PWM2DCH = 0x22;
  3703     039F  3022               	movlw	34
  3704     03A0  00A4               	movwf	36	;volatile
  3705     03A1                     l1176:
  3706                           
  3707                           ;mcc_generated_files/pwm2.c: 87:     PWM2DCL = 0x78;
  3708     03A1  3078               	movlw	120
  3709     03A2  00A3               	movwf	35	;volatile
  3710     03A3                     l1178:
  3711                           
  3712                           ;mcc_generated_files/pwm2.c: 90:     PWM2PRH = 0x89;
  3713     03A3  3089               	movlw	137
  3714     03A4  00A6               	movwf	38	;volatile
  3715     03A5                     l1180:
  3716                           
  3717                           ;mcc_generated_files/pwm2.c: 93:     PWM2PRL = 0xDE;
  3718     03A5  30DE               	movlw	222
  3719     03A6  00A5               	movwf	37	;volatile
  3720                           
  3721                           ;mcc_generated_files/pwm2.c: 96:     PWM2OFH = 0x00;
  3722     03A7  01A8               	clrf	40	;volatile
  3723     03A8                     l1182:
  3724                           
  3725                           ;mcc_generated_files/pwm2.c: 99:     PWM2OFL = 0x01;
  3726     03A8  3001               	movlw	1
  3727     03A9  00A7               	movwf	39	;volatile
  3728                           
  3729                           ;mcc_generated_files/pwm2.c: 102:     PWM2TMRH = 0x00;
  3730     03AA  01AA               	clrf	42	;volatile
  3731                           
  3732                           ;mcc_generated_files/pwm2.c: 105:     PWM2TMRL = 0x00;
  3733     03AB  01A9               	clrf	41	;volatile
  3734     03AC                     l1184:
  3735                           
  3736                           ;mcc_generated_files/pwm2.c: 108:     PWM2CON = 0x80;
  3737     03AC  3080               	movlw	128
  3738     03AD  00AB               	movwf	43	;volatile
  3739     03AE                     l121:
  3740     03AE  0008               	return
  3741     03AF                     __end_of_PWM2_Initialize:
  3742                           
  3743                           	psect	text12
  3744     03AF                     __ptext12:	
  3745 ;; *************** function _PWM1_Initialize *****************
  3746 ;; Defined at:
  3747 ;;		line 58 in file "mcc_generated_files/pwm1.c"
  3748 ;; Parameters:    Size  Location     Type
  3749 ;;		None
  3750 ;; Auto vars:     Size  Location     Type
  3751 ;;		None
  3752 ;; Return value:  Size  Location     Type
  3753 ;;                  1    wreg      void 
  3754 ;; Registers used:
  3755 ;;		status,2
  3756 ;; Tracked objects:
  3757 ;;		On entry : 0/0
  3758 ;;		On exit  : 0/0
  3759 ;;		Unchanged: 0/0
  3760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3764 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3765 ;;Total ram usage:        0 bytes
  3766 ;; Hardware stack levels used: 1
  3767 ;; Hardware stack levels required when called: 2
  3768 ;; This function calls:
  3769 ;;		Nothing
  3770 ;; This function is called by:
  3771 ;;		_SYSTEM_Initialize
  3772 ;; This function uses a non-reentrant model
  3773 ;;
  3774                           
  3775     03AF                     _PWM1_Initialize:	
  3776                           ;psect for function _PWM1_Initialize
  3777                           
  3778     03AF                     l1154:	
  3779                           ;incstack = 0
  3780                           ; Regs used in _PWM1_Initialize: [status,2]
  3781                           
  3782                           
  3783                           ;mcc_generated_files/pwm1.c: 63:     PWM1INTE = 0x00;
  3784     03AF  003B               	movlb	27	; select bank27
  3785     03B0  019C               	clrf	28	;volatile
  3786                           
  3787                           ;mcc_generated_files/pwm1.c: 66:     PWM1INTF = 0x00;
  3788     03B1  019D               	clrf	29	;volatile
  3789     03B2                     l1156:
  3790                           
  3791                           ;mcc_generated_files/pwm1.c: 69:     PWM1CLKCON = 0x60;
  3792     03B2  3060               	movlw	96
  3793     03B3  009E               	movwf	30	;volatile
  3794                           
  3795                           ;mcc_generated_files/pwm1.c: 72:     PWM1LDCON = 0x00;
  3796     03B4  019F               	clrf	31	;volatile
  3797                           
  3798                           ;mcc_generated_files/pwm1.c: 75:     PWM1OFCON = 0x00;
  3799     03B5  01A0               	clrf	32	;volatile
  3800                           
  3801                           ;mcc_generated_files/pwm1.c: 78:     PWM1PHH = 0x00;
  3802     03B6  0192               	clrf	18	;volatile
  3803                           
  3804                           ;mcc_generated_files/pwm1.c: 81:     PWM1PHL = 0x00;
  3805     03B7  0191               	clrf	17	;volatile
  3806     03B8                     l1158:
  3807                           
  3808                           ;mcc_generated_files/pwm1.c: 84:     PWM1DCH = 0x22;
  3809     03B8  3022               	movlw	34
  3810     03B9  0094               	movwf	20	;volatile
  3811     03BA                     l1160:
  3812                           
  3813                           ;mcc_generated_files/pwm1.c: 87:     PWM1DCL = 0x78;
  3814     03BA  3078               	movlw	120
  3815     03BB  0093               	movwf	19	;volatile
  3816     03BC                     l1162:
  3817                           
  3818                           ;mcc_generated_files/pwm1.c: 90:     PWM1PRH = 0x89;
  3819     03BC  3089               	movlw	137
  3820     03BD  0096               	movwf	22	;volatile
  3821     03BE                     l1164:
  3822                           
  3823                           ;mcc_generated_files/pwm1.c: 93:     PWM1PRL = 0xDE;
  3824     03BE  30DE               	movlw	222
  3825     03BF  0095               	movwf	21	;volatile
  3826                           
  3827                           ;mcc_generated_files/pwm1.c: 96:     PWM1OFH = 0x00;
  3828     03C0  0198               	clrf	24	;volatile
  3829     03C1                     l1166:
  3830                           
  3831                           ;mcc_generated_files/pwm1.c: 99:     PWM1OFL = 0x01;
  3832     03C1  3001               	movlw	1
  3833     03C2  0097               	movwf	23	;volatile
  3834                           
  3835                           ;mcc_generated_files/pwm1.c: 102:     PWM1TMRH = 0x00;
  3836     03C3  019A               	clrf	26	;volatile
  3837                           
  3838                           ;mcc_generated_files/pwm1.c: 105:     PWM1TMRL = 0x00;
  3839     03C4  0199               	clrf	25	;volatile
  3840     03C5                     l1168:
  3841                           
  3842                           ;mcc_generated_files/pwm1.c: 108:     PWM1CON = 0x80;
  3843     03C5  3080               	movlw	128
  3844     03C6  009B               	movwf	27	;volatile
  3845     03C7                     l41:
  3846     03C7  0008               	return
  3847     03C8                     __end_of_PWM1_Initialize:
  3848                           
  3849                           	psect	text13
  3850     035B                     __ptext13:	
  3851 ;; *************** function _PIN_MANAGER_Initialize *****************
  3852 ;; Defined at:
  3853 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
  3854 ;; Parameters:    Size  Location     Type
  3855 ;;		None
  3856 ;; Auto vars:     Size  Location     Type
  3857 ;;		None
  3858 ;; Return value:  Size  Location     Type
  3859 ;;                  1    wreg      void 
  3860 ;; Registers used:
  3861 ;;		status,2
  3862 ;; Tracked objects:
  3863 ;;		On entry : 0/0
  3864 ;;		On exit  : 0/0
  3865 ;;		Unchanged: 0/0
  3866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3868 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3870 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3871 ;;Total ram usage:        0 bytes
  3872 ;; Hardware stack levels used: 1
  3873 ;; Hardware stack levels required when called: 2
  3874 ;; This function calls:
  3875 ;;		Nothing
  3876 ;; This function is called by:
  3877 ;;		_SYSTEM_Initialize
  3878 ;; This function uses a non-reentrant model
  3879 ;;
  3880                           
  3881     035B                     _PIN_MANAGER_Initialize:	
  3882                           ;psect for function _PIN_MANAGER_Initialize
  3883                           
  3884     035B                     l1186:	
  3885                           ;incstack = 0
  3886                           ; Regs used in _PIN_MANAGER_Initialize: [status,2]
  3887                           
  3888                           
  3889                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  3890     035B  0022               	movlb	2	; select bank2
  3891     035C  018C               	clrf	12	;volatile
  3892                           
  3893                           ;mcc_generated_files/pin_manager.c: 63:     LATC = 0x00;
  3894     035D  018E               	clrf	14	;volatile
  3895     035E                     l1188:
  3896                           
  3897                           ;mcc_generated_files/pin_manager.c: 68:     TRISA = 0x1C;
  3898     035E  301C               	movlw	28
  3899     035F  0021               	movlb	1	; select bank1
  3900     0360  008C               	movwf	12	;volatile
  3901     0361                     l1190:
  3902                           
  3903                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0x07;
  3904     0361  3007               	movlw	7
  3905     0362  008E               	movwf	14	;volatile
  3906                           
  3907                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x00;
  3908     0363  0023               	movlb	3	; select bank3
  3909     0364  018E               	clrf	14	;volatile
  3910                           
  3911                           ;mcc_generated_files/pin_manager.c: 75:     ANSELA = 0x00;
  3912     0365  018C               	clrf	12	;volatile
  3913                           
  3914                           ;mcc_generated_files/pin_manager.c: 80:     WPUA = 0x00;
  3915     0366  0024               	movlb	4	; select bank4
  3916     0367  018C               	clrf	12	;volatile
  3917                           
  3918                           ;mcc_generated_files/pin_manager.c: 81:     WPUC = 0x00;
  3919     0368  018E               	clrf	14	;volatile
  3920     0369                     l1192:
  3921                           
  3922                           ;mcc_generated_files/pin_manager.c: 82:     OPTION_REGbits.nWPUEN = 1;
  3923     0369  0021               	movlb	1	; select bank1
  3924     036A  1795               	bsf	21,7	;volatile
  3925                           
  3926                           ;mcc_generated_files/pin_manager.c: 87:     ODCONA = 0x00;
  3927     036B  0025               	movlb	5	; select bank5
  3928     036C  018C               	clrf	12	;volatile
  3929                           
  3930                           ;mcc_generated_files/pin_manager.c: 88:     ODCONC = 0x00;
  3931     036D  018E               	clrf	14	;volatile
  3932     036E                     l1194:
  3933                           
  3934                           ;mcc_generated_files/pin_manager.c: 93:     SLRCONA = 0x37;
  3935     036E  3037               	movlw	55
  3936     036F  0026               	movlb	6	; select bank6
  3937     0370  008C               	movwf	12	;volatile
  3938     0371                     l1196:
  3939                           
  3940                           ;mcc_generated_files/pin_manager.c: 94:     SLRCONC = 0x3F;
  3941     0371  303F               	movlw	63
  3942     0372  008E               	movwf	14	;volatile
  3943     0373                     l1198:
  3944                           
  3945                           ;mcc_generated_files/pin_manager.c: 103:     RC3PPS = 0x04;
  3946     0373  3004               	movlw	4
  3947     0374  003D               	movlb	29	; select bank29
  3948     0375  00A3               	movwf	35	;volatile
  3949     0376                     l1200:
  3950                           
  3951                           ;mcc_generated_files/pin_manager.c: 104:     RA5PPS = 0x03;
  3952     0376  3003               	movlw	3
  3953     0377  0095               	movwf	21	;volatile
  3954     0378                     l225:
  3955     0378  0008               	return
  3956     0379                     __end_of_PIN_MANAGER_Initialize:
  3957                           
  3958                           	psect	text14
  3959     042E                     __ptext14:	
  3960 ;; *************** function _OSCILLATOR_Initialize *****************
  3961 ;; Defined at:
  3962 ;;		line 60 in file "mcc_generated_files/mcc.c"
  3963 ;; Parameters:    Size  Location     Type
  3964 ;;		None
  3965 ;; Auto vars:     Size  Location     Type
  3966 ;;		None
  3967 ;; Return value:  Size  Location     Type
  3968 ;;                  1    wreg      void 
  3969 ;; Registers used:
  3970 ;;		status,2
  3971 ;; Tracked objects:
  3972 ;;		On entry : 0/0
  3973 ;;		On exit  : 0/0
  3974 ;;		Unchanged: 0/0
  3975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3979 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3980 ;;Total ram usage:        0 bytes
  3981 ;; Hardware stack levels used: 1
  3982 ;; Hardware stack levels required when called: 2
  3983 ;; This function calls:
  3984 ;;		Nothing
  3985 ;; This function is called by:
  3986 ;;		_SYSTEM_Initialize
  3987 ;; This function uses a non-reentrant model
  3988 ;;
  3989                           
  3990     042E                     _OSCILLATOR_Initialize:	
  3991                           ;psect for function _OSCILLATOR_Initialize
  3992                           
  3993     042E                     l1202:	
  3994                           ;incstack = 0
  3995                           ; Regs used in _OSCILLATOR_Initialize: [status,2]
  3996                           
  3997                           
  3998                           ;mcc_generated_files/mcc.c: 63:     OSCCON = 0x70;
  3999     042E  3070               	movlw	112
  4000     042F  0021               	movlb	1	; select bank1
  4001     0430  0099               	movwf	25	;volatile
  4002     0431                     l1204:
  4003                           
  4004                           ;mcc_generated_files/mcc.c: 65:     OSCTUNE = 0x00;
  4005     0431  0198               	clrf	24	;volatile
  4006                           
  4007                           ;mcc_generated_files/mcc.c: 67:     BORCON = 0x00;
  4008     0432  0022               	movlb	2	; select bank2
  4009     0433  0196               	clrf	22	;volatile
  4010     0434                     l186:	
  4011                           ;mcc_generated_files/mcc.c: 70:     {;mcc_generated_files/mcc.c: 71:     }
  4012                           
  4013                           
  4014                           ;mcc_generated_files/mcc.c: 69:     while(PLLR == 0)
  4015     0434  0021               	movlb	1	; select bank1
  4016     0435  1F1A               	btfss	26,6	;volatile
  4017     0436  2C38               	goto	u371
  4018     0437  2C39               	goto	u370
  4019     0438                     u371:
  4020     0438  2C34               	goto	l186
  4021     0439                     u370:
  4022     0439                     l189:
  4023     0439  0008               	return
  4024     043A                     __end_of_OSCILLATOR_Initialize:
  4025                           
  4026                           	psect	text15
  4027     0110                     __ptext15:	
  4028 ;; *************** function _LCD_i2c_init *****************
  4029 ;; Defined at:
  4030 ;;		line 67 in file "lcd_i2c.c"
  4031 ;; Parameters:    Size  Location     Type
  4032 ;;  ctr             1    wreg     unsigned char 
  4033 ;; Auto vars:     Size  Location     Type
  4034 ;;  ctr             1    6[COMMON] unsigned char 
  4035 ;; Return value:  Size  Location     Type
  4036 ;;                  1    wreg      void 
  4037 ;; Registers used:
  4038 ;;		wreg, status,2, status,0, pclath, cstack
  4039 ;; Tracked objects:
  4040 ;;		On entry : 0/0
  4041 ;;		On exit  : 0/0
  4042 ;;		Unchanged: 0/0
  4043 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4044 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4045 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4046 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4047 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4048 ;;Total ram usage:        3 bytes
  4049 ;; Hardware stack levels used: 1
  4050 ;; Hardware stack levels required when called: 4
  4051 ;; This function calls:
  4052 ;;		_LCD_i2C_cmd
  4053 ;; This function is called by:
  4054 ;;		_main
  4055 ;; This function uses a non-reentrant model
  4056 ;;
  4057                           
  4058     0110                     _LCD_i2c_init:	
  4059                           ;psect for function _LCD_i2c_init
  4060                           
  4061                           
  4062                           ;incstack = 0
  4063                           ; Regs used in _LCD_i2c_init: [wreg+status,2+status,0+pclath+cstack]
  4064                           ;LCD_i2c_init@ctr stored from wreg
  4065     0110  00F6               	movwf	LCD_i2c_init@ctr
  4066     0111                     l1238:
  4067                           
  4068                           ;lcd_i2c.c: 68:     _delay((unsigned long)((40)*(32000000/4000.0)));
  4069     0111  3002               	movlw	2
  4070     0112  00F5               	movwf	??_LCD_i2c_init+1
  4071     0113  30A0               	movlw	160
  4072     0114  00F4               	movwf	??_LCD_i2c_init
  4073     0115  3092               	movlw	146
  4074     0116                     u877:
  4075     0116  0B89               	decfsz	9,f
  4076     0117  2916               	goto	u877
  4077     0118  0BF4               	decfsz	??_LCD_i2c_init,f
  4078     0119  2916               	goto	u877
  4079     011A  0BF5               	decfsz	??_LCD_i2c_init+1,f
  4080     011B  2916               	goto	u877
  4081     011C  3200               	nop2
  4082     011D                     l1240:
  4083                           
  4084                           ;lcd_i2c.c: 69:     LCD_i2C_cmd(0x38);
  4085     011D  3038               	movlw	56
  4086     011E  3183  2379  3181   	fcall	_LCD_i2C_cmd
  4087     0121                     l1242:
  4088                           
  4089                           ;lcd_i2c.c: 70:     _delay((unsigned long)((30)*(32000000/4000000.0)));
  4090     0121  3050               	movlw	80
  4091     0122                     u887:
  4092     0122  0B89               	decfsz	9,f
  4093     0123  2922               	goto	u887
  4094                           
  4095                           ;lcd_i2c.c: 71:     LCD_i2C_cmd(0x39);
  4096     0124  3039               	movlw	57
  4097     0125  3183  2379  3181   	fcall	_LCD_i2C_cmd
  4098     0128                     l1244:
  4099                           
  4100                           ;lcd_i2c.c: 72:     _delay((unsigned long)((30)*(32000000/4000000.0)));
  4101     0128  3050               	movlw	80
  4102     0129                     u897:
  4103     0129  0B89               	decfsz	9,f
  4104     012A  2929               	goto	u897
  4105     012B                     l1246:
  4106                           
  4107                           ;lcd_i2c.c: 73:     LCD_i2C_cmd(0x14);
  4108     012B  3014               	movlw	20
  4109     012C  3183  2379  3181   	fcall	_LCD_i2C_cmd
  4110                           
  4111                           ;lcd_i2c.c: 74:     _delay((unsigned long)((30)*(32000000/4000000.0)));
  4112     012F  3050               	movlw	80
  4113     0130                     u907:
  4114     0130  0B89               	decfsz	9,f
  4115     0131  2930               	goto	u907
  4116     0132                     l1248:
  4117                           
  4118                           ;lcd_i2c.c: 75:     LCD_i2C_cmd(0x70 + (ctr & 0x0F));
  4119     0132  0876               	movf	LCD_i2c_init@ctr,w
  4120     0133  390F               	andlw	15
  4121     0134  3E70               	addlw	112
  4122     0135  3183  2379  3181   	fcall	_LCD_i2C_cmd
  4123     0138                     l1250:
  4124                           
  4125                           ;lcd_i2c.c: 76:     _delay((unsigned long)((30)*(32000000/4000000.0)));
  4126     0138  3050               	movlw	80
  4127     0139                     u917:
  4128     0139  0B89               	decfsz	9,f
  4129     013A  2939               	goto	u917
  4130                           
  4131                           ;lcd_i2c.c: 77:     LCD_i2C_cmd(0x54 + (ctr >> 4));
  4132     013B  0876               	movf	LCD_i2c_init@ctr,w
  4133     013C  00F4               	movwf	??_LCD_i2c_init
  4134     013D  3004               	movlw	4
  4135     013E                     u405:
  4136     013E  36F4               	lsrf	??_LCD_i2c_init,f
  4137     013F  0B89               	decfsz	9,f
  4138     0140  293E               	goto	u405
  4139     0141  0874               	movf	??_LCD_i2c_init,w
  4140     0142  3E54               	addlw	84
  4141     0143  3183  2379  3181   	fcall	_LCD_i2C_cmd
  4142     0146                     l1252:
  4143                           
  4144                           ;lcd_i2c.c: 78:     _delay((unsigned long)((30)*(32000000/4000000.0)));
  4145     0146  3050               	movlw	80
  4146     0147                     u927:
  4147     0147  0B89               	decfsz	9,f
  4148     0148  2947               	goto	u927
  4149     0149                     l1254:
  4150                           
  4151                           ;lcd_i2c.c: 79:     LCD_i2C_cmd(0x6C);
  4152     0149  306C               	movlw	108
  4153     014A  3183  2379  3181   	fcall	_LCD_i2C_cmd
  4154                           
  4155                           ;lcd_i2c.c: 80:     _delay((unsigned long)((200)*(32000000/4000.0)));
  4156     014D  3009               	movlw	9
  4157     014E  00F5               	movwf	??_LCD_i2c_init+1
  4158     014F  301E               	movlw	30
  4159     0150  00F4               	movwf	??_LCD_i2c_init
  4160     0151  30E4               	movlw	228
  4161     0152                     u937:
  4162     0152  0B89               	decfsz	9,f
  4163     0153  2952               	goto	u937
  4164     0154  0BF4               	decfsz	??_LCD_i2c_init,f
  4165     0155  2952               	goto	u937
  4166     0156  0BF5               	decfsz	??_LCD_i2c_init+1,f
  4167     0157  2952               	goto	u937
  4168     0158  3200               	nop2
  4169     0159                     l1256:
  4170                           
  4171                           ;lcd_i2c.c: 82:     LCD_i2C_cmd(0x38);
  4172     0159  3038               	movlw	56
  4173     015A  3183  2379  3181   	fcall	_LCD_i2C_cmd
  4174     015D                     l1258:
  4175                           
  4176                           ;lcd_i2c.c: 83:     _delay((unsigned long)((30)*(32000000/4000000.0)));
  4177     015D  3050               	movlw	80
  4178     015E                     u947:
  4179     015E  0B89               	decfsz	9,f
  4180     015F  295E               	goto	u947
  4181                           
  4182                           ;lcd_i2c.c: 84:     LCD_i2C_cmd(0x0C);
  4183     0160  300C               	movlw	12
  4184     0161  3183  2379  3181   	fcall	_LCD_i2C_cmd
  4185     0164                     l1260:
  4186                           
  4187                           ;lcd_i2c.c: 85:     _delay((unsigned long)((30)*(32000000/4000000.0)));
  4188     0164  3050               	movlw	80
  4189     0165                     u957:
  4190     0165  0B89               	decfsz	9,f
  4191     0166  2965               	goto	u957
  4192     0167                     l1262:
  4193                           
  4194                           ;lcd_i2c.c: 86:     LCD_i2C_cmd(0x01);
  4195     0167  3001               	movlw	1
  4196     0168  3183  2379  3181   	fcall	_LCD_i2C_cmd
  4197                           
  4198                           ;lcd_i2c.c: 87:     _delay((unsigned long)((2)*(32000000/4000.0)));
  4199     016B  3015               	movlw	21
  4200     016C  00F4               	movwf	??_LCD_i2c_init
  4201     016D  30C6               	movlw	198
  4202     016E                     u967:
  4203     016E  0B89               	decfsz	9,f
  4204     016F  296E               	goto	u967
  4205     0170  0BF4               	decfsz	??_LCD_i2c_init,f
  4206     0171  296E               	goto	u967
  4207     0172  3200               	nop2
  4208     0173                     l298:
  4209     0173  0008               	return
  4210     0174                     __end_of_LCD_i2c_init:
  4211                           
  4212                           	psect	text16
  4213     0379                     __ptext16:	
  4214 ;; *************** function _LCD_i2C_cmd *****************
  4215 ;; Defined at:
  4216 ;;		line 50 in file "lcd_i2c.c"
  4217 ;; Parameters:    Size  Location     Type
  4218 ;;  cmd             1    wreg     unsigned char 
  4219 ;; Auto vars:     Size  Location     Type
  4220 ;;  cmd             1    3[COMMON] unsigned char 
  4221 ;; Return value:  Size  Location     Type
  4222 ;;                  1    wreg      void 
  4223 ;; Registers used:
  4224 ;;		wreg, status,2, status,0, pclath, cstack
  4225 ;; Tracked objects:
  4226 ;;		On entry : 0/0
  4227 ;;		On exit  : 0/0
  4228 ;;		Unchanged: 0/0
  4229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4231 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4233 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4234 ;;Total ram usage:        1 bytes
  4235 ;; Hardware stack levels used: 1
  4236 ;; Hardware stack levels required when called: 3
  4237 ;; This function calls:
  4238 ;;		_I2C_ackchk
  4239 ;;		_I2C_send
  4240 ;;		_I2C_start
  4241 ;;		_I2C_stop
  4242 ;; This function is called by:
  4243 ;;		_main
  4244 ;;		_LCD_i2c_init
  4245 ;;		_LCD_clear_pos
  4246 ;; This function uses a non-reentrant model
  4247 ;;
  4248                           
  4249     0379                     _LCD_i2C_cmd:	
  4250                           ;psect for function _LCD_i2C_cmd
  4251                           
  4252                           
  4253                           ;incstack = 0
  4254                           ; Regs used in _LCD_i2C_cmd: [wreg+status,2+status,0+pclath+cstack]
  4255                           ;LCD_i2C_cmd@cmd stored from wreg
  4256     0379  00F3               	movwf	LCD_i2C_cmd@cmd
  4257     037A                     l1208:
  4258                           
  4259                           ;lcd_i2c.c: 51:  I2C_start();
  4260     037A  3183  23C8  3183   	fcall	_I2C_start
  4261                           
  4262                           ;lcd_i2c.c: 52:  I2C_send(0x7C);
  4263     037D  307C               	movlw	124
  4264     037E  3182  22F9  3183   	fcall	_I2C_send
  4265                           
  4266                           ;lcd_i2c.c: 53:  if (I2C_ackchk()) {
  4267     0381  3184  2420  3183   	fcall	_I2C_ackchk
  4268     0384                     l1210:
  4269                           
  4270                           ;lcd_i2c.c: 55:  I2C_send(0);
  4271     0384  3000               	movlw	0
  4272     0385  3182  22F9  3183   	fcall	_I2C_send
  4273                           
  4274                           ;lcd_i2c.c: 56:  if (I2C_ackchk()) {
  4275     0388  3184  2420  3183   	fcall	_I2C_ackchk
  4276     038B                     l1212:
  4277                           
  4278                           ;lcd_i2c.c: 58:  I2C_send(cmd);
  4279     038B  0873               	movf	LCD_i2C_cmd@cmd,w
  4280     038C  3182  22F9  3183   	fcall	_I2C_send
  4281                           
  4282                           ;lcd_i2c.c: 59:  if (I2C_ackchk()) {
  4283     038F  3184  2420  3183   	fcall	_I2C_ackchk
  4284     0392                     l1214:
  4285                           
  4286                           ;lcd_i2c.c: 61:  I2C_stop();
  4287     0392  3184  2412  3183   	fcall	_I2C_stop
  4288     0395                     l295:
  4289     0395  0008               	return
  4290     0396                     __end_of_LCD_i2C_cmd:
  4291                           
  4292                           	psect	text17
  4293     02BA                     __ptext17:	
  4294 ;; *************** function _LCD_i2C_data *****************
  4295 ;; Defined at:
  4296 ;;		line 19 in file "lcd_i2c.c"
  4297 ;; Parameters:    Size  Location     Type
  4298 ;;  str             1    3[COMMON] PTR unsigned char 
  4299 ;;		 -> main@buf(32), 
  4300 ;; Auto vars:     Size  Location     Type
  4301 ;;  c               1    6[COMMON] unsigned char 
  4302 ;;  i               1    5[COMMON] unsigned char 
  4303 ;;  l               1    4[COMMON] unsigned char 
  4304 ;; Return value:  Size  Location     Type
  4305 ;;                  1    wreg      void 
  4306 ;; Registers used:
  4307 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4308 ;; Tracked objects:
  4309 ;;		On entry : 0/0
  4310 ;;		On exit  : 0/0
  4311 ;;		Unchanged: 0/0
  4312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4313 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4314 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4316 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4317 ;;Total ram usage:        4 bytes
  4318 ;; Hardware stack levels used: 1
  4319 ;; Hardware stack levels required when called: 3
  4320 ;; This function calls:
  4321 ;;		_I2C_ackchk
  4322 ;;		_I2C_send
  4323 ;;		_I2C_start
  4324 ;;		_I2C_stop
  4325 ;;		_strlen
  4326 ;; This function is called by:
  4327 ;;		_main
  4328 ;; This function uses a non-reentrant model
  4329 ;;
  4330                           
  4331     02BA                     _LCD_i2C_data:	
  4332                           ;psect for function _LCD_i2C_data
  4333                           
  4334     02BA                     l1638:	
  4335                           ;incstack = 0
  4336                           ; Regs used in _LCD_i2C_data: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4337                           
  4338                           
  4339                           ;lcd_i2c.c: 20:  unsigned char c;;lcd_i2c.c: 21:  char l;;lcd_i2c.c: 22:  char i;;lcd_i2
      +                          c.c: 24:  I2C_start();
  4340     02BA  3183  23C8  3182   	fcall	_I2C_start
  4341                           
  4342                           ;lcd_i2c.c: 25:  I2C_send(0x7C);
  4343     02BD  307C               	movlw	124
  4344     02BE  3182  22F9  3182   	fcall	_I2C_send
  4345                           
  4346                           ;lcd_i2c.c: 26:  if (I2C_ackchk()) {
  4347     02C1  3184  2420  3182   	fcall	_I2C_ackchk
  4348     02C4                     l1640:
  4349                           
  4350                           ;lcd_i2c.c: 29:  l = strlen(str);
  4351     02C4  0873               	movf	LCD_i2C_data@str,w
  4352     02C5  00F0               	movwf	strlen@s
  4353     02C6  3183  23DD  3182   	fcall	_strlen
  4354     02C9  0870               	movf	?_strlen,w
  4355     02CA  00F4               	movwf	LCD_i2C_data@l
  4356     02CB                     l1642:
  4357                           
  4358                           ;lcd_i2c.c: 30:  for (i=1; i<=l; i++) {
  4359     02CB  3001               	movlw	1
  4360     02CC  00F5               	movwf	LCD_i2C_data@i
  4361     02CD  2AEF               	goto	l1660
  4362     02CE                     l284:
  4363                           
  4364                           ;lcd_i2c.c: 31:   c = 0xC0;
  4365     02CE  30C0               	movlw	192
  4366     02CF  00F6               	movwf	LCD_i2C_data@c
  4367     02D0                     l1644:
  4368                           
  4369                           ;lcd_i2c.c: 32:   if (i==l) {
  4370     02D0  0875               	movf	LCD_i2C_data@i,w
  4371     02D1  0674               	xorwf	LCD_i2C_data@l,w
  4372     02D2  1D03               	skipz
  4373     02D3  2AD5               	goto	u841
  4374     02D4  2AD6               	goto	u840
  4375     02D5                     u841:
  4376     02D5  2AD8               	goto	l1648
  4377     02D6                     u840:
  4378     02D6                     l1646:
  4379                           
  4380                           ;lcd_i2c.c: 33:    c = 0x40;
  4381     02D6  3040               	movlw	64
  4382     02D7  00F6               	movwf	LCD_i2C_data@c
  4383     02D8                     l1648:
  4384                           
  4385                           ;lcd_i2c.c: 35:   I2C_send(c);
  4386     02D8  0876               	movf	LCD_i2C_data@c,w
  4387     02D9  3182  22F9  3182   	fcall	_I2C_send
  4388                           
  4389                           ;lcd_i2c.c: 36:   if (I2C_ackchk()) {
  4390     02DC  3184  2420  3182   	fcall	_I2C_ackchk
  4391     02DF                     l1650:
  4392                           
  4393                           ;lcd_i2c.c: 39:   c = (unsigned char)(*(str++));
  4394     02DF  0873               	movf	LCD_i2C_data@str,w
  4395     02E0  0086               	movwf	6
  4396     02E1  0187               	clrf	7
  4397     02E2  0801               	movf	1,w
  4398     02E3  00F6               	movwf	LCD_i2C_data@c
  4399     02E4                     l1652:
  4400     02E4  3001               	movlw	1
  4401     02E5  07F3               	addwf	LCD_i2C_data@str,f
  4402     02E6                     l1654:
  4403                           
  4404                           ;lcd_i2c.c: 40:   I2C_send(c);
  4405     02E6  0876               	movf	LCD_i2C_data@c,w
  4406     02E7  3182  22F9  3182   	fcall	_I2C_send
  4407     02EA                     l1656:
  4408                           
  4409                           ;lcd_i2c.c: 41:   if (I2C_ackchk()) {
  4410     02EA  3184  2420  3182   	fcall	_I2C_ackchk
  4411     02ED                     l1658:
  4412                           
  4413                           ;lcd_i2c.c: 43:  }
  4414     02ED  3001               	movlw	1
  4415     02EE  07F5               	addwf	LCD_i2C_data@i,f
  4416     02EF                     l1660:
  4417     02EF  0875               	movf	LCD_i2C_data@i,w
  4418     02F0  0274               	subwf	LCD_i2C_data@l,w
  4419     02F1  1803               	skipnc
  4420     02F2  2AF4               	goto	u851
  4421     02F3  2AF5               	goto	u850
  4422     02F4                     u851:
  4423     02F4  2ACE               	goto	l284
  4424     02F5                     u850:
  4425     02F5                     l1662:
  4426                           
  4427                           ;lcd_i2c.c: 45:  I2C_stop();
  4428     02F5  3184  2412  3182   	fcall	_I2C_stop
  4429     02F8                     l289:
  4430     02F8  0008               	return
  4431     02F9                     __end_of_LCD_i2C_data:
  4432                           
  4433                           	psect	text18
  4434     03DD                     __ptext18:	
  4435 ;; *************** function _strlen *****************
  4436 ;; Defined at:
  4437 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\strlen.c"
  4438 ;; Parameters:    Size  Location     Type
  4439 ;;  s               1    0[COMMON] PTR const unsigned char 
  4440 ;;		 -> main@buf(32), 
  4441 ;; Auto vars:     Size  Location     Type
  4442 ;;  a               1    2[COMMON] PTR const unsigned char 
  4443 ;;		 -> main@buf(32), 
  4444 ;; Return value:  Size  Location     Type
  4445 ;;                  2    0[COMMON] unsigned int 
  4446 ;; Registers used:
  4447 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4448 ;; Tracked objects:
  4449 ;;		On entry : 0/0
  4450 ;;		On exit  : 0/0
  4451 ;;		Unchanged: 0/0
  4452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4453 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4454 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4455 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4456 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4457 ;;Total ram usage:        3 bytes
  4458 ;; Hardware stack levels used: 1
  4459 ;; Hardware stack levels required when called: 2
  4460 ;; This function calls:
  4461 ;;		Nothing
  4462 ;; This function is called by:
  4463 ;;		_LCD_i2C_data
  4464 ;; This function uses a non-reentrant model
  4465 ;;
  4466                           
  4467     03DD                     _strlen:	
  4468                           ;psect for function _strlen
  4469                           
  4470     03DD                     l1606:	
  4471                           ;incstack = 0
  4472                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  4473                           
  4474     03DD  0870               	movf	strlen@s,w
  4475     03DE  00F2               	movwf	strlen@a
  4476     03DF  2BE2               	goto	l1610
  4477     03E0                     l1608:
  4478     03E0  3001               	movlw	1
  4479     03E1  07F0               	addwf	strlen@s,f
  4480     03E2                     l1610:
  4481     03E2  0870               	movf	strlen@s,w
  4482     03E3  0086               	movwf	6
  4483     03E4  0187               	clrf	7
  4484     03E5  0801               	movf	1,w
  4485     03E6  1D03               	btfss	3,2
  4486     03E7  2BE9               	goto	u821
  4487     03E8  2BEA               	goto	u820
  4488     03E9                     u821:
  4489     03E9  2BE0               	goto	l1608
  4490     03EA                     u820:
  4491     03EA                     l1612:
  4492     03EA  0872               	movf	strlen@a,w
  4493     03EB  0270               	subwf	strlen@s,w
  4494     03EC  00F0               	movwf	?_strlen
  4495     03ED  01F1               	clrf	?_strlen+1
  4496     03EE  1BF0               	btfsc	?_strlen,7
  4497     03EF  03F1               	decf	?_strlen+1,f
  4498     03F0                     l946:
  4499     03F0  0008               	return
  4500     03F1                     __end_of_strlen:
  4501                           
  4502                           	psect	text19
  4503     0412                     __ptext19:	
  4504 ;; *************** function _I2C_stop *****************
  4505 ;; Defined at:
  4506 ;;		line 19 in file "soft_i2c.c"
  4507 ;; Parameters:    Size  Location     Type
  4508 ;;		None
  4509 ;; Auto vars:     Size  Location     Type
  4510 ;;		None
  4511 ;; Return value:  Size  Location     Type
  4512 ;;                  1    wreg      void 
  4513 ;; Registers used:
  4514 ;;		wreg
  4515 ;; Tracked objects:
  4516 ;;		On entry : 0/0
  4517 ;;		On exit  : 0/0
  4518 ;;		Unchanged: 0/0
  4519 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4520 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4521 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4523 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4524 ;;Total ram usage:        0 bytes
  4525 ;; Hardware stack levels used: 1
  4526 ;; Hardware stack levels required when called: 2
  4527 ;; This function calls:
  4528 ;;		Nothing
  4529 ;; This function is called by:
  4530 ;;		_LCD_i2C_data
  4531 ;;		_LCD_i2C_cmd
  4532 ;; This function uses a non-reentrant model
  4533 ;;
  4534                           
  4535     0412                     _I2C_stop:	
  4536                           ;psect for function _I2C_stop
  4537                           
  4538     0412                     l1094:	
  4539                           ;incstack = 0
  4540                           ; Regs used in _I2C_stop: [wreg]
  4541                           
  4542                           
  4543                           ;soft_i2c.c: 20:  LATCbits.LATC4 = 0;
  4544     0412  0022               	movlb	2	; select bank2
  4545     0413  120E               	bcf	14,4	;volatile
  4546                           
  4547                           ;soft_i2c.c: 21:  TRISCbits.TRISC4 = 0;
  4548     0414  0021               	movlb	1	; select bank1
  4549     0415  120E               	bcf	14,4	;volatile
  4550                           
  4551                           ;soft_i2c.c: 22:  LATCbits.LATC5 = 1;
  4552     0416  0022               	movlb	2	; select bank2
  4553     0417  168E               	bsf	14,5	;volatile
  4554     0418                     l1096:
  4555                           
  4556                           ;soft_i2c.c: 23:     _delay((unsigned long)((2)*(32000000/4000000.0)));
  4557     0418  3005               	movlw	5
  4558     0419                     u977:
  4559     0419  0B89               	decfsz	9,f
  4560     041A  2C19               	goto	u977
  4561     041B  0000               	nop
  4562     041C                     l1098:
  4563                           
  4564                           ;soft_i2c.c: 24:  TRISCbits.TRISC4 = 1;
  4565     041C  0021               	movlb	1	; select bank1
  4566     041D  160E               	bsf	14,4	;volatile
  4567     041E                     l1100:
  4568                           
  4569                           ;soft_i2c.c: 25:  TRISCbits.TRISC5 = 1;
  4570     041E  168E               	bsf	14,5	;volatile
  4571     041F                     l312:
  4572     041F  0008               	return
  4573     0420                     __end_of_I2C_stop:
  4574                           
  4575                           	psect	text20
  4576     03C8                     __ptext20:	
  4577 ;; *************** function _I2C_start *****************
  4578 ;; Defined at:
  4579 ;;		line 7 in file "soft_i2c.c"
  4580 ;; Parameters:    Size  Location     Type
  4581 ;;		None
  4582 ;; Auto vars:     Size  Location     Type
  4583 ;;		None
  4584 ;; Return value:  Size  Location     Type
  4585 ;;                  1    wreg      void 
  4586 ;; Registers used:
  4587 ;;		wreg
  4588 ;; Tracked objects:
  4589 ;;		On entry : 0/0
  4590 ;;		On exit  : 0/0
  4591 ;;		Unchanged: 0/0
  4592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4596 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4597 ;;Total ram usage:        0 bytes
  4598 ;; Hardware stack levels used: 1
  4599 ;; Hardware stack levels required when called: 2
  4600 ;; This function calls:
  4601 ;;		Nothing
  4602 ;; This function is called by:
  4603 ;;		_LCD_i2C_data
  4604 ;;		_LCD_i2C_cmd
  4605 ;; This function uses a non-reentrant model
  4606 ;;
  4607                           
  4608     03C8                     _I2C_start:	
  4609                           ;psect for function _I2C_start
  4610                           
  4611     03C8                     l1054:	
  4612                           ;incstack = 0
  4613                           ; Regs used in _I2C_start: [wreg]
  4614                           
  4615                           
  4616                           ;soft_i2c.c: 8:  LATCbits.LATC4 = 1;
  4617     03C8  0022               	movlb	2	; select bank2
  4618     03C9  160E               	bsf	14,4	;volatile
  4619                           
  4620                           ;soft_i2c.c: 9:  TRISCbits.TRISC4 = 0;
  4621     03CA  0021               	movlb	1	; select bank1
  4622     03CB  120E               	bcf	14,4	;volatile
  4623                           
  4624                           ;soft_i2c.c: 10:  LATCbits.LATC5 = 1;
  4625     03CC  0022               	movlb	2	; select bank2
  4626     03CD  168E               	bsf	14,5	;volatile
  4627                           
  4628                           ;soft_i2c.c: 11:  TRISCbits.TRISC5 = 0;
  4629     03CE  0021               	movlb	1	; select bank1
  4630     03CF  128E               	bcf	14,5	;volatile
  4631     03D0                     l1056:
  4632                           
  4633                           ;soft_i2c.c: 12:     _delay((unsigned long)((2)*(32000000/4000000.0)));
  4634     03D0  3005               	movlw	5
  4635     03D1                     u987:
  4636     03D1  0B89               	decfsz	9,f
  4637     03D2  2BD1               	goto	u987
  4638     03D3  0000               	nop
  4639     03D4                     l1058:
  4640                           
  4641                           ;soft_i2c.c: 13:  LATCbits.LATC4 = 0;
  4642     03D4  0022               	movlb	2	; select bank2
  4643     03D5  120E               	bcf	14,4	;volatile
  4644                           
  4645                           ;soft_i2c.c: 14:     _delay((unsigned long)((2)*(32000000/4000000.0)));
  4646     03D6  3005               	movlw	5
  4647     03D7                     u997:
  4648     03D7  0B89               	decfsz	9,f
  4649     03D8  2BD7               	goto	u997
  4650     03D9  0000               	nop
  4651     03DA                     l1060:
  4652                           
  4653                           ;soft_i2c.c: 15:  LATCbits.LATC5 = 0;
  4654     03DA  0022               	movlb	2	; select bank2
  4655     03DB  128E               	bcf	14,5	;volatile
  4656     03DC                     l309:
  4657     03DC  0008               	return
  4658     03DD                     __end_of_I2C_start:
  4659                           
  4660                           	psect	text21
  4661     02F9                     __ptext21:	
  4662 ;; *************** function _I2C_send *****************
  4663 ;; Defined at:
  4664 ;;		line 29 in file "soft_i2c.c"
  4665 ;; Parameters:    Size  Location     Type
  4666 ;;  send_data       1    wreg     unsigned char 
  4667 ;; Auto vars:     Size  Location     Type
  4668 ;;  send_data       1    0[COMMON] unsigned char 
  4669 ;;  i               1    2[COMMON] unsigned char 
  4670 ;;  i2c_data        1    1[COMMON] unsigned char 
  4671 ;; Return value:  Size  Location     Type
  4672 ;;                  1    wreg      void 
  4673 ;; Registers used:
  4674 ;;		wreg, status,2, status,0
  4675 ;; Tracked objects:
  4676 ;;		On entry : 0/0
  4677 ;;		On exit  : 0/0
  4678 ;;		Unchanged: 0/0
  4679 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4680 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4681 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4683 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4684 ;;Total ram usage:        3 bytes
  4685 ;; Hardware stack levels used: 1
  4686 ;; Hardware stack levels required when called: 2
  4687 ;; This function calls:
  4688 ;;		Nothing
  4689 ;; This function is called by:
  4690 ;;		_LCD_i2C_data
  4691 ;;		_LCD_i2C_cmd
  4692 ;; This function uses a non-reentrant model
  4693 ;;
  4694                           
  4695     02F9                     _I2C_send:	
  4696                           ;psect for function _I2C_send
  4697                           
  4698                           
  4699                           ;incstack = 0
  4700                           ; Regs used in _I2C_send: [wreg+status,2+status,0]
  4701                           ;I2C_send@send_data stored from wreg
  4702     02F9  00F0               	movwf	I2C_send@send_data
  4703     02FA                     l1062:
  4704                           
  4705                           ;soft_i2c.c: 30:  unsigned char i2c_data,i;;soft_i2c.c: 32:  TRISCbits.TRISC4 = 0;
  4706     02FA  0021               	movlb	1	; select bank1
  4707     02FB  120E               	bcf	14,4	;volatile
  4708     02FC                     l1064:
  4709                           
  4710                           ;soft_i2c.c: 34:  i2c_data = send_data;
  4711     02FC  0870               	movf	I2C_send@send_data,w
  4712     02FD  00F1               	movwf	I2C_send@i2c_data
  4713     02FE                     l1066:
  4714                           
  4715                           ;soft_i2c.c: 35:  for (i=8 ; i>0 ; i--) {
  4716     02FE  3008               	movlw	8
  4717     02FF  00F2               	movwf	I2C_send@i
  4718     0300                     l315:
  4719                           
  4720                           ;soft_i2c.c: 36:   if (i2c_data & 0x80) {
  4721     0300  1FF1               	btfss	I2C_send@i2c_data,7
  4722     0301  2B03               	goto	u251
  4723     0302  2B04               	goto	u250
  4724     0303                     u251:
  4725     0303  2B07               	goto	l317
  4726     0304                     u250:
  4727     0304                     l1072:
  4728                           
  4729                           ;soft_i2c.c: 37:    LATCbits.LATC4 = 1;
  4730     0304  0022               	movlb	2	; select bank2
  4731     0305  160E               	bsf	14,4	;volatile
  4732                           
  4733                           ;soft_i2c.c: 38:   } else {
  4734     0306  2B09               	goto	l1074
  4735     0307                     l317:
  4736                           
  4737                           ;soft_i2c.c: 39:    LATCbits.LATC4 = 0;
  4738     0307  0022               	movlb	2	; select bank2
  4739     0308  120E               	bcf	14,4	;volatile
  4740     0309                     l1074:
  4741                           
  4742                           ;soft_i2c.c: 41:   i2c_data = i2c_data << 1;
  4743     0309  3571               	lslf	I2C_send@i2c_data,w
  4744     030A  00F1               	movwf	I2C_send@i2c_data
  4745     030B                     l1076:
  4746                           
  4747                           ;soft_i2c.c: 43:   LATCbits.LATC5 = 1;
  4748     030B  168E               	bsf	14,5	;volatile
  4749     030C                     l1078:
  4750                           
  4751                           ;soft_i2c.c: 44:         _delay((unsigned long)((4)*(32000000/4000000.0)));
  4752     030C  300A               	movlw	10
  4753     030D                     u1007:
  4754     030D  0B89               	decfsz	9,f
  4755     030E  2B0D               	goto	u1007
  4756     030F  3200               	nop2
  4757     0310                     l1080:
  4758                           
  4759                           ;soft_i2c.c: 45:   LATCbits.LATC5 = 0;
  4760     0310  0022               	movlb	2	; select bank2
  4761     0311  128E               	bcf	14,5	;volatile
  4762     0312                     l1082:
  4763                           
  4764                           ;soft_i2c.c: 46:         _delay((unsigned long)((3)*(32000000/4000000.0)));
  4765     0312  3008               	movlw	8
  4766     0313                     u1017:
  4767     0313  0B89               	decfsz	9,f
  4768     0314  2B13               	goto	u1017
  4769                           
  4770                           ;soft_i2c.c: 47:  }
  4771     0315  3001               	movlw	1
  4772     0316  02F2               	subwf	I2C_send@i,f
  4773     0317  0872               	movf	I2C_send@i,w
  4774     0318  1D03               	btfss	3,2
  4775     0319  2B1B               	goto	u261
  4776     031A  2B1C               	goto	u260
  4777     031B                     u261:
  4778     031B  2B00               	goto	l315
  4779     031C                     u260:
  4780     031C                     l316:
  4781                           
  4782                           ;soft_i2c.c: 48:  TRISCbits.TRISC4 = 1;
  4783     031C  0021               	movlb	1	; select bank1
  4784     031D  160E               	bsf	14,4	;volatile
  4785     031E                     l319:
  4786     031E  0008               	return
  4787     031F                     __end_of_I2C_send:
  4788                           
  4789                           	psect	text22
  4790     0420                     __ptext22:	
  4791 ;; *************** function _I2C_ackchk *****************
  4792 ;; Defined at:
  4793 ;;		line 73 in file "soft_i2c.c"
  4794 ;; Parameters:    Size  Location     Type
  4795 ;;		None
  4796 ;; Auto vars:     Size  Location     Type
  4797 ;;  i2c_data        1    0[COMMON] unsigned char 
  4798 ;; Return value:  Size  Location     Type
  4799 ;;                  1    wreg      unsigned char 
  4800 ;; Registers used:
  4801 ;;		wreg, status,2, status,0
  4802 ;; Tracked objects:
  4803 ;;		On entry : 0/0
  4804 ;;		On exit  : 0/0
  4805 ;;		Unchanged: 0/0
  4806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4808 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4810 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4811 ;;Total ram usage:        1 bytes
  4812 ;; Hardware stack levels used: 1
  4813 ;; Hardware stack levels required when called: 2
  4814 ;; This function calls:
  4815 ;;		Nothing
  4816 ;; This function is called by:
  4817 ;;		_LCD_i2C_data
  4818 ;;		_LCD_i2C_cmd
  4819 ;; This function uses a non-reentrant model
  4820 ;;
  4821                           
  4822     0420                     _I2C_ackchk:	
  4823                           ;psect for function _I2C_ackchk
  4824                           
  4825     0420                     l1084:	
  4826                           ;incstack = 0
  4827                           ; Regs used in _I2C_ackchk: [wreg+status,2+status,0]
  4828                           
  4829                           
  4830                           ;soft_i2c.c: 74:  unsigned char i2c_data;;soft_i2c.c: 76:  LATCbits.LATC5 = 1;
  4831     0420  0022               	movlb	2	; select bank2
  4832     0421  168E               	bsf	14,5	;volatile
  4833                           
  4834                           ;soft_i2c.c: 77:     _delay((unsigned long)((1)*(32000000/4000000.0)));
  4835     0422  3200               	nop2	;2 cycle nop
  4836     0423  3200               	nop2	;2 cycle nop
  4837     0424  3200               	nop2	;2 cycle nop
  4838     0425  3200               	nop2	;2 cycle nop
  4839     0426                     l1086:
  4840                           
  4841                           ;soft_i2c.c: 78:  i2c_data = PORTCbits.RC4;
  4842     0426  0020               	movlb	0	; select bank0
  4843     0427  0E0E               	swapf	14,w	;volatile
  4844     0428  3901               	andlw	1
  4845     0429  00F0               	movwf	I2C_ackchk@i2c_data
  4846     042A                     l1088:
  4847                           
  4848                           ;soft_i2c.c: 79:  LATCbits.LATC5 = 0;
  4849     042A  0022               	movlb	2	; select bank2
  4850     042B  128E               	bcf	14,5	;volatile
  4851     042C                     l1090:
  4852                           
  4853                           ;soft_i2c.c: 81:  return(i2c_data);
  4854     042C  0870               	movf	I2C_ackchk@i2c_data,w
  4855     042D                     l329:
  4856     042D  0008               	return
  4857     042E                     __end_of_I2C_ackchk:
  4858                           
  4859                           	psect	intentry
  4860     0004                     __pintentry:	
  4861 ;; *************** function _INTERRUPT_InterruptManager *****************
  4862 ;; Defined at:
  4863 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  4864 ;; Parameters:    Size  Location     Type
  4865 ;;		None
  4866 ;; Auto vars:     Size  Location     Type
  4867 ;;		None
  4868 ;; Return value:  Size  Location     Type
  4869 ;;                  1    wreg      void 
  4870 ;; Registers used:
  4871 ;;		status,2, status,0, pclath, cstack
  4872 ;; Tracked objects:
  4873 ;;		On entry : 0/0
  4874 ;;		On exit  : 0/0
  4875 ;;		Unchanged: 0/0
  4876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4878 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4880 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4881 ;;Total ram usage:        0 bytes
  4882 ;; Hardware stack levels used: 1
  4883 ;; Hardware stack levels required when called: 1
  4884 ;; This function calls:
  4885 ;;		_PIN_MANAGER_IOC
  4886 ;; This function is called by:
  4887 ;;		Interrupt level 1
  4888 ;; This function uses a non-reentrant model
  4889 ;;
  4890                           
  4891     0004                     _INTERRUPT_InterruptManager:
  4892                           
  4893                           ;incstack = 0
  4894     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  4895                           
  4896                           ; Regs used in _INTERRUPT_InterruptManager: [status,2+status,0+pclath+cstack]
  4897     0005  3180               	pagesel	$
  4898     0006                     i1l1394:
  4899                           
  4900                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.IOCIE == 1 && INTCONbits
      +                          .IOCIF == 1)
  4901     0006  1D8B               	btfss	11,3	;volatile
  4902     0007  2809               	goto	u43_21
  4903     0008  280A               	goto	u43_20
  4904     0009                     u43_21:
  4905     0009  2811               	goto	i1l239
  4906     000A                     u43_20:
  4907     000A                     i1l1396:
  4908     000A  1C0B               	btfss	11,0	;volatile
  4909     000B  280D               	goto	u44_21
  4910     000C  280E               	goto	u44_20
  4911     000D                     u44_21:
  4912     000D  2811               	goto	i1l239
  4913     000E                     u44_20:
  4914     000E                     i1l1398:
  4915                           
  4916                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         PIN_MANAGER_IOC();
  4917     000E  3184  244C  3180   	fcall	_PIN_MANAGER_IOC
  4918     0011                     i1l239:	
  4919                           ;mcc_generated_files/interrupt_manager.c: 58:     }
  4920                           
  4921     0011  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  4922     0012  0009               	retfie
  4923     0013                     __end_of_INTERRUPT_InterruptManager:
  4924                           
  4925                           	psect	text24
  4926     044C                     __ptext24:	
  4927 ;; *************** function _PIN_MANAGER_IOC *****************
  4928 ;; Defined at:
  4929 ;;		line 107 in file "mcc_generated_files/pin_manager.c"
  4930 ;; Parameters:    Size  Location     Type
  4931 ;;		None
  4932 ;; Auto vars:     Size  Location     Type
  4933 ;;		None
  4934 ;; Return value:  Size  Location     Type
  4935 ;;                  1    wreg      void 
  4936 ;; Registers used:
  4937 ;;		None
  4938 ;; Tracked objects:
  4939 ;;		On entry : 0/0
  4940 ;;		On exit  : 0/0
  4941 ;;		Unchanged: 0/0
  4942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4943 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4944 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4946 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4947 ;;Total ram usage:        0 bytes
  4948 ;; Hardware stack levels used: 1
  4949 ;; This function calls:
  4950 ;;		Nothing
  4951 ;; This function is called by:
  4952 ;;		_INTERRUPT_InterruptManager
  4953 ;; This function uses a non-reentrant model
  4954 ;;
  4955                           
  4956     044C                     _PIN_MANAGER_IOC:	
  4957                           ;psect for function _PIN_MANAGER_IOC
  4958                           
  4959     044C                     i1l228:	
  4960                           ;incstack = 0
  4961                           ; Regs used in _PIN_MANAGER_IOC: []
  4962                           
  4963     044C  0008               	return
  4964     044D                     __end_of_PIN_MANAGER_IOC:
  4965     0002                     ___latbits      equ	2
  4966     007E                     btemp           set	126	;btemp
  4967     007E                     int$flags       set	126
  4968     007E                     wtemp0          set	126
  4969                           
  4970                           	psect	idloc
  4971                           
  4972                           ;Config register IDLOC0 @ 0x8000
  4973                           ;	unspecified, using default values
  4974     8000                     	org	32768
  4975     8000  3FFF               	dw	16383
  4976                           
  4977                           ;Config register IDLOC1 @ 0x8001
  4978                           ;	unspecified, using default values
  4979     8001                     	org	32769
  4980     8001  3FFF               	dw	16383
  4981                           
  4982                           ;Config register IDLOC2 @ 0x8002
  4983                           ;	unspecified, using default values
  4984     8002                     	org	32770
  4985     8002  3FFF               	dw	16383
  4986                           
  4987                           ;Config register IDLOC3 @ 0x8003
  4988                           ;	unspecified, using default values
  4989     8003                     	org	32771
  4990     8003  3FFF               	dw	16383
  4991                           
  4992                           	psect	config
  4993                           
  4994                           ;Config register CONFIG1 @ 0x8007
  4995                           ;	Oscillator Selection Bits
  4996                           ;	FOSC = INTOSC, INTOSC oscillator; I/O function on CLKIN pin
  4997                           ;	Watchdog Timer Enable
  4998                           ;	WDTE = ON, WDT enabled
  4999                           ;	Power-up Timer Enable
  5000                           ;	PWRTE = OFF, PWRT disabled
  5001                           ;	MCLR Pin Function Select
  5002                           ;	MCLRE = OFF, MCLR/VPP pin function is digital input
  5003                           ;	Flash Program Memory Code Protection
  5004                           ;	CP = OFF, Program memory code protection is disabled
  5005                           ;	Brown-out Reset Enable
  5006                           ;	BOREN = ON, Brown-out Reset enabled
  5007                           ;	Clock Out Enable
  5008                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  5009     8007                     	org	32775
  5010     8007  3FBC               	dw	16316
  5011                           
  5012                           ;Config register CONFIG2 @ 0x8008
  5013                           ;	Flash Memory Self-Write Protection
  5014                           ;	WRT = OFF, Write protection off
  5015                           ;	PPSLOCK bit One-Way Set Enable bit
  5016                           ;	PPS1WAY = ON, PPSLOCKED Bit Can Be Cleared & Set Once
  5017                           ;	PLL Enable
  5018                           ;	PLLEN = ON, 4x PLL enabled
  5019                           ;	Stack Overflow/Underflow Reset Enable
  5020                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  5021                           ;	Brown-out Reset Voltage Selection
  5022                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  5023                           ;	Low Power Brown-out Reset enable bit
  5024                           ;	LPBOREN = OFF, LPBOR is disabled
  5025                           ;	In-Circuit Debugger Mode
  5026                           ;	DEBUG = 0x1, unprogrammed default
  5027                           ;	Low-Voltage Programming Enable
  5028                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  5029     8008                     	org	32776
  5030     8008  1FFF               	dw	8191

Data Sizes:
    Strings     7
    Constant    0
    Data        0
    BSS         37
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     79      80
    BANK1            80      0      36
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           32      0       0

Pointer List with Targets:

    f$.$buffer	PTR unsigned char  size(2) Largest target is 32
		 -> main@buf(BANK0[32]), 

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 32
		 -> main@buf(BANK0[32]), 

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    LCD_i2C_data@str	PTR unsigned char  size(1) Largest target is 32
		 -> main@buf(BANK0[32]), 

    S947$buffer	PTR unsigned char  size(2) Largest target is 32
		 -> main@buf(BANK0[32]), 

    S947$source	PTR const unsigned char  size(2) Largest target is 0

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_1(CODE[7]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 32
		 -> main@buf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 32
		 -> main@buf(BANK0[32]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 32
		 -> main@buf(BANK0[32]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 7
		 -> STR_1(CODE[7]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 7
		 -> STR_1(CODE[7]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_1(CODE[7]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 


Critical Paths under _main in COMMON

    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_abs
    _abs->___awmod
    _LCD_i2c_init->_LCD_i2C_cmd
    _LCD_i2C_cmd->_I2C_send
    _LCD_i2C_data->_I2C_send
    _LCD_i2C_data->_strlen

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                38    38      0    2415
                                             41 BANK0     38    38      0
                        _LCD_i2C_cmd
                       _LCD_i2C_data
                       _LCD_i2c_init
                  _SYSTEM_Initialize
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             23    14      9    1760
                                             20 BANK0     21    12      9
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     3      5    1559
                                             12 BANK0      8     3      5
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           16    12      4    1434
                                             10 COMMON     4     0      4
                                              0 BANK0     12    12      0
                            ___awdiv
                            ___awmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     230
                                              0 COMMON     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (4) _abs                                                  4     2      2      67
                                              6 COMMON     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4     298
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     302
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM1_Initialize
                    _PWM2_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_i2c_init                                         3     3      0     135
                                              4 COMMON     3     3      0
                        _LCD_i2C_cmd
 ---------------------------------------------------------------------------------
 (2) _LCD_i2C_cmd                                          1     1      0     105
                                              3 COMMON     1     1      0
                         _I2C_ackchk
                           _I2C_send
                          _I2C_start
                           _I2C_stop
 ---------------------------------------------------------------------------------
 (1) _LCD_i2C_data                                         4     3      1     365
                                              3 COMMON     4     3      1
                         _I2C_ackchk
                           _I2C_send
                          _I2C_start
                           _I2C_stop
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               3     1      2      91
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (3) _I2C_stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_send                                             3     3      0      75
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (3) _I2C_ackchk                                           1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManager                           0     0      0       0
                    _PIN_MANAGER_IOC
 ---------------------------------------------------------------------------------
 (7) _PIN_MANAGER_IOC                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_i2C_cmd
     _I2C_ackchk
     _I2C_send
     _I2C_start
     _I2C_stop
   _LCD_i2C_data
     _I2C_ackchk
     _I2C_send
     _I2C_start
     _I2C_stop
     _strlen
   _LCD_i2c_init
     _LCD_i2C_cmd
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM1_Initialize
     _PWM2_Initialize
     _WDT_Initialize
   _sprintf
     _vfprintf
       _vfpfcnvrt
         ___awdiv
         ___awmod
         _abs
           ___awmod (ARG)
         _fputc
           _putch

 _INTERRUPT_InterruptManager (ROOT)
   _PIN_MANAGER_IOC

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK2            80      0       0      0.0%
BITBANK3            80      0       0      0.0%
BITBANK4            80      0       0      0.0%
BITBANK5            80      0       0      0.0%
BITBANK6            80      0       0      0.0%
BITBANK7            80      0       0      0.0%
BITBANK8            80      0       0      0.0%
BITBANK9            80      0       0      0.0%
BITBANK10           80      0       0      0.0%
BITBANK11           80      0       0      0.0%
BITBANK12           32      0       0      0.0%
BIGRAM             992      0       0      0.0%
COMMON              14     14      14    100.0%
BANK0               80     79      80    100.0%
BANK1               80      0      36     45.0%
BANK2               80      0       0      0.0%
BANK3               80      0       0      0.0%
BANK4               80      0       0      0.0%
BANK5               80      0       0      0.0%
BANK6               80      0       0      0.0%
BANK7               80      0       0      0.0%
BANK8               80      0       0      0.0%
BANK9               80      0       0      0.0%
BANK10              80      0       0      0.0%
BANK11              80      0       0      0.0%
BANK12              32      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     130      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Sun Apr 13 22:30:15 2025

                      ?_LCD_i2C_cmd 0070                       ?_LCD_i2C_data 0073  
                                l41 03C7                        ___awdiv@sign 0075  
                               l121 03AE                                 l312 041F  
                               l225 0378                                 l315 0300  
                               l316 031C                                 l317 0307  
                               l309 03DC                                 l319 031E  
                               l183 0411                                 l192 044A  
                               l329 042D                                 l186 0434  
                               l258 028A                                 l284 02CE  
                               l189 0439                                 l295 0395  
                               l289 02F8                                 l298 0173  
                               l556 01CE                                 l910 035A  
                               l904 010F                                 l569 0276  
                               l940 044B                                 l917 0401  
                               l929 0225                                 l946 03F0  
                               l866 033C                                 u250 0304  
                               u251 0303                                 u260 031C  
                               u500 0193                                 u261 031B  
                               u405 013E                                 u501 0192  
                               u520 01A1                                 u600 0241  
                               u521 01A0                                 u601 0240  
                               u370 0439                                 u371 0438  
                               u515 0197                                 u540 01B0  
                               u620 024F                                 u700 0208  
                               u541 01AF                                 u621 024E  
                               u701 0207                                 u630 0259  
                               u710 03F5                                 u535 01A2  
                               u631 0258                                 u615 0245  
                               u711 03F4                                 u560 01C0  
                               u480 0179                                 u800 00C7  
                               u720 0035                                 u561 01BF  
                               u545 01AC                                 u481 0178  
                               u705 0204                                 u801 00C6  
                               u721 0034                                 u570 01C5  
                               u490 0184                                 u650 0268  
                               u810 00EB                                 u730 005A  
                               u571 01C4                                 u555 01B6  
                               u491 0183                                 u651 0267  
                               u635 0255                                 u811 00EA  
                               u731 0059                                 u820 03EA  
                               u660 026D                                 u580 022B  
                               u740 0064                                 u821 03E9  
                               u661 026C                                 u645 025E  
                               u581 022A                                 u741 0063  
                               u590 0236                                 u670 01D5  
                               u750 0084                                 u830 0358  
                               u591 0235                                 u671 01D4  
                               u751 0082                                 u831 0357  
                               u840 02D6                                 u680 01DB  
                               u760 0085                                 u841 02D5  
                               u681 01DA                                 u850 02F5  
                               u690 01EA                                 u770 00B8  
                               u851 02F4                                 u907 0130  
                               u691 01E9                                 u771 00B7  
                               u780 00BD                                 u917 0139  
                               u781 00BC                                 u790 00C2  
                               u927 0147                                 u791 00C1  
                               u937 0152                                 u947 015E  
                               u867 0280                                 u957 0165  
                               u877 0116                                 u967 016E  
                               u887 0122                                 u977 0419  
                               u897 0129                                 u987 03D1  
                               u997 03D7                                 _abs 03F1  
                      ___awmod@sign 0075                       ?_LCD_i2c_init 0070  
                               wreg 0009                                l1100 041E  
                              l1200 0376                                l1210 0384  
                              l1202 042E                                ?_abs 0076  
                              l1060 03DA                                l1212 038B  
                              l1204 0431                                l1062 02FA  
                              l1054 03C8                                l1214 0392  
                              l1206 0447                                l1080 0310  
                              l1072 0304                                l1064 02FC  
                              l1056 03D0                                l1208 037A  
                              l1240 011D                                l1160 03BA  
                              l1090 042C                                l1082 0312  
                              l1074 0309                                l1066 02FE  
                              l1058 03D4                                l1250 0138  
                              l1242 0121                                l1162 03BC  
                              l1154 03AF                                l1170 0396  
                              l1084 0420                                l1076 030B  
                              l1260 0164                                l1252 0146  
                              l1244 0128                                l1164 03BE  
                              l1156 03B2                                l1180 03A5  
                              l1172 0399                                l1236 0402  
                              l1500 0232                                l1086 0426  
                              l1078 030C                                l1094 0412  
                              l1262 0167                                l1254 0149  
                              l1246 012B                                l1238 0111  
                              l1190 0361                                l1166 03C1  
                              l1158 03B8                                l1182 03A8  
                              l1174 039F                                l1510 0249  
                              l1502 0236                                l1088 042A  
                              l1096 0418                                l1256 0159  
                              l1248 0132                                l1192 0369  
                              l1168 03C5                                l1184 03AC  
                              l1176 03A1                                l1520 0262  
                              l1512 024B                                l1504 023B  
                              l1600 00F5                                l1098 041C  
                              l1610 03E2                                l1258 015D  
                              l1194 036E                                l1186 035B  
                              l1178 03A3                                l1450 0175  
                              l1514 024F                                l1506 0241  
                              l1522 0268                                l1530 01CF  
                              l1612 03EA                                l1196 0371  
                              l1188 035E                                l1460 0189  
                              l1452 0179                                l1524 026D  
                              l1516 0259                                l1508 0244  
                              l1540 0208                                l1532 01D5  
                              l1620 034E                                l1606 03DD  
                              l1198 0373                                l1470 019B  
                              l1462 018B                                l1454 017E  
                              l1526 0272                                l1518 025D  
                              l1550 03F6                                l1542 021C  
                              l1534 01DB                                l1622 0358  
                              l1630 0327                                l1608 03E0  
                              l1640 02C4                                l1480 01B5  
                              l1472 019D                                l1464 018D  
                              l1456 0180                                l1448 0174  
                              l1536 01E0                                l1560 0043  
                              l1616 033D                                l1632 0329  
                              l1650 02DF                                l1642 02CB  
                              l1482 01BA                                l1474 01A1  
                              l1466 0193                                l1458 0184  
                              l1546 03F1                                l1538 01EA  
                              l1570 0070                                l1562 0048  
                              l1554 0023                                l1618 0343  
                              l1634 0336                                l1626 031F  
                              l1652 02E4                                l1644 02D0  
                              l1660 02EF                                l1476 01B0  
                              l1468 0196                                l1484 01C0  
                              l1492 0226                                l1548 03F5  
                              l1580 00B2                                l1572 007D  
                              l1564 0050                                l1556 0035  
                              l1628 0325                                l1662 02F5  
                              l1654 02E6                                l1646 02D6  
                              l1638 02BA                                l1486 01C5  
                              l1478 01B4                                l1494 0227  
                              l1590 00D0                                l1582 00B8  
                              l1574 007F                                l1566 005A  
                              l1558 003D                                l1670 02B2  
                              l1656 02EA                                l1648 02D8  
                              l1488 01CA                                l1496 022B  
                              l1592 00E2                                l1584 00BD  
                              l1576 0086                                l1568 0064  
                              l1664 0277                                l1658 02ED  
                              l1498 0230                                l1586 00C2  
                              l1594 00E5                                l1578 00A1  
                              l1666 027A                                l1588 00C7  
                              l1596 00EC                                l1668 028F  
                   LCD_i2c_init@ctr 0076                                STR_1 043A  
           __end_of_PWM1_Initialize 03C8                                u1007 030D  
                              u1017 0313                                _LATA 010C  
                              _LATC 010E                                _PLLR 04D6  
                              _WPUA 020C                                _WPUC 020E  
                              abs@a 0076                                _dbuf 00A0  
                              _main 0277                                _prec 00C2  
                              fsr0h 0005                                fsr1h 0007  
                              indf0 0000                                fsr0l 0004  
                              indf1 0001                                fsr1l 0006  
                              btemp 007E                    __end_of_I2C_send 031F  
                              start 0013                    __end_of_I2C_stop 0420  
                    ??_LCD_i2C_data 0074                               ??_abs 0078  
           __end_of_PWM2_Initialize 03AF       __end_of_OSCILLATOR_Initialize 043A  
                             ?_main 0070                     __end_of___awdiv 01CF  
                   __end_of___awmod 0277                     ___awdiv@divisor 0070  
                             i1l228 044C                               i1l239 0011  
                   ___awdiv@counter 0074                        vfpfcnvrt@fmt 007C  
                    ??_LCD_i2c_init 0074                               u43_20 000A  
                             u43_21 0009                               u44_20 000E  
                             u44_21 000D                               _TRISA 008C  
                             _TRISC 008E             __end_of_PIN_MANAGER_IOC 044D  
                             _flags 006F                      _WDT_Initialize 0447  
                             _fputc 01CF                               _width 00C0  
                             _putch 044B                               status 0003  
                 __end_of_I2C_start 03DD                               wtemp0 007E  
                   __end_of_sprintf 033D                     __initialization 0015  
                      __end_of_main 02BA         ?_INTERRUPT_InterruptManager 0070  
                            ??_main 0049              __end_of_WDT_Initialize 044B  
                            ?_fputc 0070                    ___awdiv@dividend 0072  
                            _ANSELA 018C                              ?_putch 0070  
                            _ANSELC 018E                              _BORCON 0116  
                            _RA5PPS 0E95                              _RC3PPS 0EA3  
                  ?_PWM1_Initialize 0070                              _ODCONA 028C  
                            _ODCONC 028E                              i1l1394 0006  
                            i1l1396 000A                              i1l1398 000E  
                            _OSCCON 0099                        ??_I2C_ackchk 0070  
                     vfpfcnvrt@done 0024                              _WDTCON 0097  
                         I2C_send@i 0072                       LCD_i2C_data@c 0076  
                     LCD_i2C_data@i 0075                       LCD_i2C_data@l 0074  
                      vfprintf@cfmt 0032                           ??___awdiv 0074  
                         ??___awmod 0074                    ?_PWM2_Initialize 0070  
                  ___awdiv@quotient 0076                     ___awmod@divisor 0070  
                   ___awmod@counter 0074                              _strlen 03DD  
                            fputc@c 0070                  __end_of_I2C_ackchk 042E  
                   ?_WDT_Initialize 0070                           ?_I2C_send 0070  
                         ?_I2C_stop 0070                              putch@c 0070  
                  __end_of_vfprintf 035B                    ?_PIN_MANAGER_IOC 0070  
                         ??_sprintf 007E                __end_of_LCD_i2C_data 02F9  
                 _SYSTEM_Initialize 0402             __end_of__initialization 001F  
                ?_SYSTEM_Initialize 0070                __end_of_LCD_i2c_init 0174  
                    __pcstackCOMMON 0070                 ??_SYSTEM_Initialize 0070  
                     __end_of_fputc 0226                       __end_of_putch 044C  
                    _OPTION_REGbits 0095                          ??_I2C_send 0070  
                        ??_I2C_stop 0070                             ??_fputc 0074  
         __end_of_SYSTEM_Initialize 0412                             ??_putch 0070  
                        __pbssBANK0 006F                          __pbssBANK1 00A0  
                I2C_ackchk@i2c_data 0070                          __pmaintext 0277  
                        __pintentry 0004                             ?_strlen 0070  
                           _PWM1DCH 0D94                             _PWM1DCL 0D93  
                           _PWM2DCH 0DA4                             _PWM2DCL 0DA3  
                           _OSCTUNE 0098                             _PWM1CON 0D9B  
                           _PWM2CON 0DAB                             _PWM1OFH 0D98  
                           _PWM1OFL 0D97                             _PWM1PHH 0D92  
                           _PWM2OFH 0DA8                             _PWM1PHL 0D91  
                           _PWM2OFL 0DA7                             _PWM2PHH 0DA2  
                           _PWM2PHL 0DA1                             _PWM1PRH 0D96  
                           _PWM1PRL 0D95                             _PWM2PRH 0DA6  
                           _PWM2PRL 0DA5                             _SLRCONA 030C  
                           _SLRCONC 030E                      LCD_i2C_cmd@cmd 0073  
                         _I2C_start 03C8                             ___awdiv 0174  
                           ___awmod 0226                           ?_vfprintf 002C  
                           __ptext1 031F                             __ptext2 033D  
                           __ptext3 0023                             __ptext4 01CF  
                           __ptext5 044B                             __ptext6 03F1  
                           __ptext7 0226                             __ptext8 0174  
                           __ptext9 0402               _OSCILLATOR_Initialize 042E  
                  ___awmod@dividend 0072            ??_PIN_MANAGER_Initialize 0070  
                           main@buf 004F                             _sprintf 031F  
                           clrloop0 0442                end_of_initialization 001F  
                           fputc@fp 0072                          ?_I2C_start 0070  
                 __end_of_vfpfcnvrt 0110                           _PWM1LDCON 0D9F  
                  vfpfcnvrt@convarg 0027                           _PWM2LDCON 0DAF  
                         _PWM1OFCON 0DA0                           _PWM2OFCON 0DB0  
                        ??_vfprintf 0031                        _LCD_i2C_data 02BA  
                           strlen@a 0072                             strlen@s 0070  
                  ??_WDT_Initialize 0070                           _PORTCbits 000E  
                      _LCD_i2c_init 0110                           _TRISCbits 008E  
                     ??_LCD_i2C_cmd 0073                         vfpfcnvrt@ap 007D  
                       vfpfcnvrt@cp 0025                         vfpfcnvrt@fp 007A  
            ?_OSCILLATOR_Initialize 0070                      __end_of_strlen 03F1  
               start_initialization 0015                         __end_of_abs 0402  
                     _PWM1LDCONbits 0D9F                       _PWM2LDCONbits 0DAF  
                       ??_I2C_start 0070                         vfprintf@fmt 002E  
                          ??_strlen 0072                 __end_of_LCD_i2C_cmd 0396  
                         ___latbits 0002                       __pcstackBANK0 0020  
                 I2C_send@send_data 0070              _PIN_MANAGER_Initialize 035B  
                          ?___awdiv 0070                            ?___awmod 0070  
                 ??_PWM1_Initialize 0070        ??_INTERRUPT_InterruptManager 0070  
                          _I2C_send 02F9                            _I2C_stop 0412  
                          ?_sprintf 0034                   ??_PWM2_Initialize 0070  
                          _LATCbits 010E                           clear_ram0 0441  
                          _PWM1INTE 0D9C                            _PWM1INTF 0D9D  
                          _PWM2INTE 0DAC                            _PWM2INTF 0DAD  
                          _PWM1TMRH 0D9A                            _PWM1TMRL 0D99  
                          _PWM2TMRH 0DAA                            _PWM2TMRL 0DA9  
                       _LCD_i2C_cmd 0379                   ??_PIN_MANAGER_IOC 0070  
                  I2C_send@i2c_data 0071                           _vfpfcnvrt 0023  
                   LCD_i2C_data@str 0073                          vfpfcnvrt@c 002B  
                        _I2C_ackchk 0420                        _PWM1INTFbits 0D9D  
                        vfprintf@ap 0030                          vfprintf@fp 002C  
                      _PWM2INTFbits 0DAD             ??_OSCILLATOR_Initialize 0070  
                        ?_vfpfcnvrt 007A                          sprintf@fmt 0035  
                          __ptext10 0447                            __ptext11 0396  
                          __ptext20 03C8                            __ptext12 03AF  
                          __ptext21 02F9                            __ptext13 035B  
                          __ptext22 0420                            __ptext14 042E  
                          __ptext15 0110                            __ptext24 044C  
                          __ptext16 0379                            __ptext17 02BA  
                          __ptext18 03DD                            __ptext19 0412  
                          int$flags 007E                            _vfprintf 033D  
__end_of_INTERRUPT_InterruptManager 0013          _INTERRUPT_InterruptManager 0004  
                        _INTCONbits 000B                         _PWM1CONbits 0D9B  
                       _PWM2CONbits 0DAB                            intlevel1 0000  
                         sprintf@ap 003D                         ?_I2C_ackchk 0070  
           ?_PIN_MANAGER_Initialize 0070                     _PWM1_Initialize 03AF  
                        _PWM1CLKCON 0D9E                          _PWM2CLKCON 0DAE  
                       ??_vfpfcnvrt 0020                       __pstringtext1 043A  
                     __pstringtext2 0000                            sprintf@f 003E  
                          sprintf@s 0034                     _PWM2_Initialize 0396  
    __end_of_PIN_MANAGER_Initialize 0379                     _PIN_MANAGER_IOC 044C  
